# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

specVersion: alpha
kind: YaRD
name: "Resource Limits"
expressionLang: jshell
inputs:
  - name: "CPU Count"
    type: number
  - name: "Memory Use"
    type: number
  - name: "Run Started"
    type: datetime
  - name: "Run Ended"
    type: datetime
elements:
  - name: Run Time
    type: Decision
    logic:
      type: LiteralExpression
      # With JShell this does not work, but this can be done with a Java oneliner
      expression: |
        `Run Started` -`Run Ended`
  - name: Fitting profiles
    type: Decision
    logic:
      type: DecisionTable
      hitPolicy: COLLECT
      inputs: [ "Run Time", "Memory Use", "CPU Count" ]
      # This assumes there are set profiles that include the above parameters
      # How well we meet them is visualized in the score
      rules:
        - when: [ '<=30m', '<=20', '<=1' ] # Low profile
          then: 4
        - when: [ '<=3h00m', '<=40', '<=1' ] # Medium
          then: 3
        - when: [ '<=4h00m', '<=50', '<=1' ] # High
          then: 2
        - when: [ '<=2h30m', '<=60', '<=1' ] # Ultra
          then: 1
        - when: [ '-', '-', '-' ] # Unacceptable
          then: 0
