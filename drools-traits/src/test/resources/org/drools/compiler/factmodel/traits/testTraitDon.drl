/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.drools.compiler.trait.test;

import org.drools.base.factmodel.traits.*;
import org.drools.traits.core.factmodel.*;

global java.util.List list;


 
declare trait Parent
    child   : Student
end
 
 
declare trait Person
    name    : String 
    age     : int   @position(0) 
end
  
declare trait Role

end
 

declare trait Student extends Person, Role
    school  : String
end 
 
 
declare Imp
    @Traitable
    name    : String    @key
    school  : String
end
 
 
  
declare java.lang.Object 
    @Traitable
end 
 
 
declare java.lang.String 
    @Traitable
end 
 
 
 
rule "Init"
when 
then 
    Imp core = new Imp( "xx", "yy" );
    insert( core );
end

//rule "Trait"
//dialect "mvel"
//when
//    $core: Imp( "xx", "yy" ; )
//    not String( this == "go" )
//then
//    Student s = drools.don( $core, Student, true );
//    Imp core = (Imp) s.getCore();
//
//    s.name = "abc";
//    s.age = 88;
//    s.school = "skl";
//
//    update( s );
//end

rule "Trait"
dialect "java"
no-loop
when
    $core: Imp( "xx" ; )
    not String( this == "go" )
then
    Student s = don( $core, Student.class, true );
    Imp core = (Imp) s.getCore();

    modify( s ) { setAge( 88 ), setSchool( "skl" ); };
end
 
rule "Check" 
when
    $z: Student( $s : school == "skl", fields[ "name" ] == "xx", $a : age == 88 )
then
    list.add( "DON" );
end 
 
 
 
rule "Check2"
salience -100 
when
    not Student( )
then
    list.add( "SHED" );
end;