@comment{

  Copyright 2012 Red Hat, Inc. and/or its affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
}




@comment{

}

@declare{'scorecardOutputRankCode'}


rule "Scorecard @{context} rank code @{index}"
@includeNamed{ 'rule_meta.drlt'; attributes=attributes }
salience -5
when
    ScoreCard( modelName == "@{context}", $ranks : ranking, $keys : ranking.keySet() ) @watch( ranking )
then
    String code = null;

    //TODO Double check that the DMG.org specs on this algorithm make sense
    java.util.Iterator iter = $ranks.keySet().iterator();
    int ix = 0;
    while ( iter.hasNext() && ix++ < @{index} ) {
        String s = (String) iter.next();
        if ( ( (Double) $ranks.get( s ) ) >= 0 ) {
            code = s;
        }
    }

    @{ target } x = new @{ target }();
        x.setContext( "@{context}" );
        x.setValid( true );
        x.setMissing( false );
        x.setValue( code );
    insertLogical( x );
end

rule "Add Scorecard output @{context} rank code @{index} to PMMLResult"
@includeNamed{ 'rule_meta.drlt'; attributes=attributes }
dialect "java"
when
   $tgt: @{target}()
   $reslt: PMML4Result( resultVariables == null || "@{target}" not memberOf resultVariables.keySet() ) from results
then
   $reslt.setResultCode("OK");
   $reslt.addResultVariable("@{target}",$tgt);
   update($reslt);
end


rule "Update PMMLResult with Scorecard output @{context} rank code @{index}"
@includeNamed{ 'rule_meta.drlt'; attributes=attributes }
dialect "java"
salience -10
when
   $reslt: PMML4Result( "@{target}" memberOf resultVariables.keySet() ) from results
   $old: @{target}( ) from $reslt.resultVariables["@{target}"]
   $new: @{target}( this != $old, this after[0] $old)
then
   $reslt.updateResultVariable("@{target}",$new);
   update($reslt);
end


@end{}


@includeNamed{'scorecardOutputRankCode'}
