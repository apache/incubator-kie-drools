/*
 * Copyright 2015 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package org.drools.compiler.test;

import org.drools.compiler.Cheese;
import org.drools.compiler.Cheesery

global java.util.List list;
global Cheesery cheesery;

rule "test rule 1"
    enabled false
    when
        c: Cheese( type == "stilton" )
    then
        list.add( new String ("rule 1") );
end 

rule "test rule 2" extends "test rule 1"
    enabled false
    when
        Cheese( price <= 6) from c
    then
        list.add( new String ("rule 2") );
end 

rule "test rule 3" extends "test rule 2"
    when
        Cheese( price > 1 ) from c
    then
        list.add( new String ("rule 3") );
end 

rule "test rule 1b"
    enabled false
    when
        c: Cheese( type == "cheddar" )
    then
        list.add( new String ("rule 1b") );
end 

rule "test rule 2b" extends "test rule 1b"
    
    when

        Cheese( price < 5) from return ([c])
    then
        list.add( new String ("rule 2b") );
end 

   

rule "test rule 4" 

    when
        Cheese( price > 1 , price < 6 ) 
    then
        list.add( new String ("rule 4") );
end 

rule "test rule 5" 

    when
        Cheese( type == "stilton" )
    then

end  

rule "test rule 6" extends "test rule 5"
    when
        Cheese( type == "stilton" )
    then

end  
