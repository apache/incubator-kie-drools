/*
 * Copyright 2016 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.drools.testcoverage.functional.parser

rule "TestInsert"
    when
        //conditions
    then
        insert("testString");
end

rule "TestNewInstance1"
    when
        //conditions
    then
        java.util.List<String> strings = new java.util.ArrayList<String>();

        insert(strings);
end

rule "TestModify"
    when
        $list : java.util.List()
    then
        modify ($list) {
            add("foo");
        }
end

rule "TestUpdate"
    when
        $list : java.util.List()
    then
        $list.add("bar");

        update($list);
end

rule "TestRetract"
    when
        $list : java.util.List()
    then
        retract($list);
end

rule "TestInsertLogical"
    when
        //conditions
    then
        java.util.List<String> strings = new java.util.ArrayList<String>();

        insertLogical(strings);
end

rule "TestDrools"
    when
        //conditions
    then
        drools.halt();
        drools.getWorkingMemory();
        drools.setFocus("agenda-group");
        drools.getRule();
        drools.getTuple();
end

rule "TestKcontext"
    when
        //conditions
    then
        System.out.println(kcontext);
        kcontext.getKnowledgeRuntime();
end