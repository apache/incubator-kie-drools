<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.kie</groupId>
    <artifactId>drools-build-parent</artifactId>
    <version>8.45.0-SNAPSHOT</version>
    <relativePath>../build-parent/pom.xml</relativePath>
  </parent>

  <artifactId>jpmml-migration-recipe</artifactId>

  <name>Kie :: Jpmml Migration Recipe</name>
  <description>OpenRewrite recipe to migrate JPMML model library from 1.5.1 to 1.6.4</description>

  <properties>
    <java.module.name>org.kie.jpmml.migration.recipe</java.module.name>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.openrewrite.recipe</groupId>
        <artifactId>rewrite-recipe-bom</artifactId>
        <version>1.19.4</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jpmml</groupId>
        <artifactId>pmml-model</artifactId>
        <version>1.5.1</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <!-- rewrite-java depedencies only necessary for Java Recipe development -->
    <dependency>
      <groupId>org.openrewrite</groupId>
      <artifactId>rewrite-java</artifactId>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <groupId>org.jboss</groupId>
          <artifactId>jandex</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- You only need the version that corresponds to your current
    Java version. It is fine to add all of them, though, as
    they can coexist on a classpath. -->
    <dependency>
      <groupId>org.openrewrite</groupId>
      <artifactId>rewrite-java-11</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- rewrite-maven dependency only necessary for Maven Recipe development -->
    <dependency>
      <groupId>org.openrewrite</groupId>
      <artifactId>rewrite-maven</artifactId>
      <scope>compile</scope>
    </dependency>

    <!-- rewrite-yaml dependency only necessary for Yaml Recipe development -->
    <dependency>
      <groupId>org.openrewrite</groupId>
      <artifactId>rewrite-yaml</artifactId>
      <scope>compile</scope>
    </dependency>

    <!-- rewrite-properties dependency only necessary for Properties Recipe development -->
    <dependency>
      <groupId>org.openrewrite</groupId>
      <artifactId>rewrite-properties</artifactId>
      <scope>compile</scope>
    </dependency>

    <!-- rewrite-xml dependency only necessary for XML Recipe development -->
    <dependency>
      <groupId>org.openrewrite</groupId>
      <artifactId>rewrite-xml</artifactId>
      <scope>compile</scope>
    </dependency>



    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <!-- For authoring tests for any kind of Recipe -->
    <dependency>
      <groupId>org.openrewrite</groupId>
      <artifactId>rewrite-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.jpmml</groupId>
      <artifactId>pmml-model</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>


    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Optional dependency on assertJ to provide fluent assertions. -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${version.org.junit}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- This is needed to always download the new version in the .m2 repository, and have it available for tests/migration
      together with the old one -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>download_new_pmml</id>
            <goals>
              <goal>get</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <groupId>org.jpmml</groupId>
              <artifactId>pmml-model</artifactId>
              <version>1.6.4</version>
              <transitive>false</transitive>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
