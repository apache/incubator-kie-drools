package @{pmmlPackageName};

import java.util.List;
import java.util.Map;

import org.drools.pmml.pmml_4_2.model.AbstractPMMLData;

public class @{pmmlPackageName}.@{className} {
    public @{className}() {
       super();
    }

    @foreach{dataField: dataFields}
    private boolean m@{dataField.name} = true;
    private @{dataField.type} v@{dataField.name};
    @end{}

    @foreach{dataField: dataFields}
    public @{dataField.type} getV@{dataField.compactUpperCaseName}() {
       return this.@{dataField.name};
    }

    public void setV@{dataField.compactUpperCaseName}( @{dataField.type} @{dataField.name} ) {
       this.@{dataField.name} = @{dataField.name};
    }

    public boolean getM@{dataField.compactUpperCaseName}() {
       return this.m@{dataField.name}
    }

    public void setM@{dataField.compactUpperCaseName}( boolean m@{dataField.compactUpperCaseName} ) {
       this.m@{dataField.compactUpperCaseName} = m@{dataField.compactUpperCaseName};
    }
    @end{}

    public boolean equals(Object o) {
       if (this == o) {
          return true;
       }
       if (o == null || getClass() != o.getClass()) {
          return false;
       }

       @{className} that = (@{className})o;
       @foreach{dataField: dataFields}
       if ( getM@{dataField.compactUpperCaseName}() != that.getM@{dataField.compactUpperCaseName} ) {
           return false;
       }
       if ( getV@{dataField.compactUpperCaseName}() != null ? !getV@{dataField.compactUpperCaseName}().equals(that.getV@{dataField.compactUpperCaseName}()) : that.getV@{dataField.compactUpperCaseName}() != null ) {
           return false;
       }
       @end{}
       return true;
    }

    public int hashCode() {
        int result = 0;
        @foreach{dataField: dataFields}
        result = 31 * result + ( getM@{dataField.compactUpperCaseName} ? 1 : 0 )
                + ( getV@{dataField.compactUpperCaseName}() != null ? getV@{dataField.compactUpperCaseName}().hashCode() : 0 );
        @end{}
        return result;
    }

}