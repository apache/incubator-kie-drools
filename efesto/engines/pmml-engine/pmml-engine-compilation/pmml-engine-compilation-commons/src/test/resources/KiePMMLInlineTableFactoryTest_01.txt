{
    Map<String, Object> %1$s_0_columnValues = Stream
            .of(new Object[][] { { "band", "1" }, { "state", "MN" }, { "out", "10000" } })
            .collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow %1$s_0 = new KiePMMLRow(%1$s_0_columnValues);
    Map<String, Object> %1$s_1_columnValues = Stream
            .of(new Object[][] { { "band", "1" }, { "state", "IL" }, { "out", "12000" } })
            .collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow %1$s_1 = new KiePMMLRow(%1$s_1_columnValues);
    Map<String, Object> %1$s_2_columnValues = Stream
            .of(new Object[][] { { "band", "1" }, { "state", "NY" }, { "out", "20000" } })
            .collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow %1$s_2 = new KiePMMLRow(%1$s_2_columnValues);
    Map<String, Object> %1$s_3_columnValues = Stream
            .of(new Object[][] { { "band", "2" }, { "state", "MN" }, { "out", "20000" } })
            .collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow %1$s_3 = new KiePMMLRow(%1$s_3_columnValues);
    Map<String, Object> %1$s_4_columnValues = Stream
            .of(new Object[][] { { "band", "2" }, { "state", "IL" }, { "out", "23000" } })
            .collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow %1$s_4 = new KiePMMLRow(%1$s_4_columnValues);
    Map<String, Object> %1$s_5_columnValues = Stream
            .of(new Object[][] { { "band", "2" }, { "state", "NY" }, { "out", "30000" } })
            .collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow %1$s_5 = new KiePMMLRow(%1$s_5_columnValues);
    KiePMMLInlineTable %1$s = new KiePMMLInlineTable("%1$s", Collections.emptyList(),
            Arrays.asList(%1$s_0, %1$s_1, %1$s_2, %1$s_3, %1$s_4, %1$s_5));
}