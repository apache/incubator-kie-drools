diff --git a/drools-compiler/src/main/java/org/drools/compiler/kproject/models/KieBaseModelImpl.java b/drools-compiler/src/main/java/org/drools/compiler/kproject/models/KieBaseModelImpl.java
index fd61b0366e..9761ba6fbc 100644
--- a/drools-compiler/src/main/java/org/drools/compiler/kproject/models/KieBaseModelImpl.java
+++ b/drools-compiler/src/main/java/org/drools/compiler/kproject/models/KieBaseModelImpl.java
@@ -70,7 +70,7 @@ public class KieBaseModelImpl
 
     private KieModuleModel               kModule;
     
-    private String                       scope = "javax.enterprise.context.ApplicationScoped";
+    private String                       scope = "jakarta.enterprise.context.ApplicationScoped";
 
     private List<RuleTemplateModel>      ruleTemplates = new ArrayList<>();
 
diff --git a/drools-docs/src/modules/ROOT/pages/migration-guide/migration-v7-to-kogito/_proc-kogito-migrate-drl-implement-ruleunits.adoc b/drools-docs/src/modules/ROOT/pages/migration-guide/migration-v7-to-kogito/_proc-kogito-migrate-drl-implement-ruleunits.adoc
index 111c12b6c3..4cc2968027 100644
--- a/drools-docs/src/modules/ROOT/pages/migration-guide/migration-v7-to-kogito/_proc-kogito-migrate-drl-implement-ruleunits.adoc
+++ b/drools-docs/src/modules/ROOT/pages/migration-guide/migration-v7-to-kogito/_proc-kogito-migrate-drl-implement-ruleunits.adoc
@@ -127,7 +127,7 @@ The following is an example of a REST endpoint that takes a rule unit as input a
 @Path("/find-approved")
 public class LoanUnitQueryFindApprovedEndpoint {
 
-   @javax.inject.Inject
+   @jakarta.inject.Inject
    RuleUnit<org.kie.kogito.queries.LoanUnit> ruleUnit;
 
    public LoanUnitQueryFindApprovedEndpoint() {
diff --git a/drools-legacy-test-util/src/test/resources/META-INF/kmodule.xml b/drools-legacy-test-util/src/test/resources/META-INF/kmodule.xml
index ef384a6d20..ac6e1c76b0 100644
--- a/drools-legacy-test-util/src/test/resources/META-INF/kmodule.xml
+++ b/drools-legacy-test-util/src/test/resources/META-INF/kmodule.xml
@@ -25,7 +25,7 @@
     </kbase>    
 
     <kbase name="org.kie.kbase3" scope="SessionScoped" equalsBehavior="equality" eventProcessingMode="stream">
-        <ksession name="org.kie.kbase3.ksession1" scope="javax.enterprise.context.ApplicationScoped" type="stateful" clockType="pseudo"/>
+        <ksession name="org.kie.kbase3.ksession1" scope="jakarta.enterprise.context.ApplicationScoped" type="stateful" clockType="pseudo"/>
         <ksession name="org.kie.kbase3.ksession2" scope="SessionScoped" type="stateful" clockType="realtime"/>
     </kbase>
 
diff --git a/drools-model/drools-codegen-common/src/main/java/org/drools/codegen/common/context/QuarkusDroolsModelBuildContext.java b/drools-model/drools-codegen-common/src/main/java/org/drools/codegen/common/context/QuarkusDroolsModelBuildContext.java
index 45f736f73a..7c1d82f696 100644
--- a/drools-model/drools-codegen-common/src/main/java/org/drools/codegen/common/context/QuarkusDroolsModelBuildContext.java
+++ b/drools-model/drools-codegen-common/src/main/java/org/drools/codegen/common/context/QuarkusDroolsModelBuildContext.java
@@ -18,8 +18,8 @@ package org.drools.codegen.common.context;
 public class QuarkusDroolsModelBuildContext extends AbstractDroolsModelBuildContext {
 
     public static final String CONTEXT_NAME = "Quarkus";
-    public static final String QUARKUS_REST = "javax.ws.rs.Path";
-    public static final String QUARKUS_DI = "javax.inject.Inject";
+    public static final String QUARKUS_REST = "jakarta.ws.rs.Path";
+    public static final String QUARKUS_DI = "jakarta.inject.Inject";
 
     protected QuarkusDroolsModelBuildContext(QuarkusKogitoBuildContextBuilder builder) {
         super(builder, /*new CDIDependencyInjectionAnnotator(), new CDIRestAnnotator(),  */ CONTEXT_NAME);
diff --git a/drools-model/drools-model-codegen/src/main/resources/class-templates/config/RuleConfigQuarkusTemplate.java b/drools-model/drools-model-codegen/src/main/resources/class-templates/config/RuleConfigQuarkusTemplate.java
index 0cfb0ca4b6..e9f4d6bbad 100644
--- a/drools-model/drools-model-codegen/src/main/resources/class-templates/config/RuleConfigQuarkusTemplate.java
+++ b/drools-model/drools-model-codegen/src/main/resources/class-templates/config/RuleConfigQuarkusTemplate.java
@@ -15,17 +15,17 @@
  */
 package $Package$;
 
-import javax.enterprise.inject.Instance;
+import jakarta.enterprise.inject.Instance;
 
 import org.kie.kogito.drools.core.config.AbstractRuleConfig;
 import org.kie.api.event.rule.AgendaEventListener;
 import org.kie.api.event.rule.RuleRuntimeEventListener;
 import org.kie.kogito.rules.RuleEventListenerConfig;
 
-@javax.inject.Singleton
+@jakarta.inject.Singleton
 class RuleConfig extends AbstractRuleConfig implements org.kie.kogito.rules.RuleConfig {
 
-    @javax.inject.Inject
+    @jakarta.inject.Inject
     public RuleConfig(
             Instance<RuleEventListenerConfig> ruleEventListenerConfigs,
             Instance<AgendaEventListener> agendaEventListeners,
diff --git a/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManager.java b/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManager.java
index 0c8c51edb1..15913f8772 100644
--- a/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManager.java
+++ b/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManager.java
@@ -216,7 +216,7 @@ public class JtaTransactionManager
                 return true;
             } catch ( Exception e ) {
                 // special WAS handling for cached UserTrnsactions
-                if (e.getClass().getName().equals("javax.ejb.EJBException")) {
+                if (e.getClass().getName().equals("jakarta.ejb.EJBException")) {
                     // reinitialize all fields
                     this.ut = findUserTransaction();
                     this.tm = findTransactionManager(this.ut);
diff --git a/drools-test-coverage/test-compiler-integration/src/test/java/org/drools/mvel/integrationtests/KieBuilderTest.java b/drools-test-coverage/test-compiler-integration/src/test/java/org/drools/mvel/integrationtests/KieBuilderTest.java
index d2949bf1df..3726116e3b 100644
--- a/drools-test-coverage/test-compiler-integration/src/test/java/org/drools/mvel/integrationtests/KieBuilderTest.java
+++ b/drools-test-coverage/test-compiler-integration/src/test/java/org/drools/mvel/integrationtests/KieBuilderTest.java
@@ -95,8 +95,8 @@ public class KieBuilderTest {
 
         final String kmodule = "<kmodule xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n" +
                 "         xmlns=\"http://www.drools.org/xsd/kmodule\">\n" +
-                "  <kbase name=\"kbase1\" default=\"true\" eventProcessingMode=\"stream\" equalsBehavior=\"identity\" scope=\"javax.enterprise.context.ApplicationScoped\">\n" +
-                "    <ksession name=\"ksession1\" type=\"stateful\" default=\"true\" clockType=\"realtime\" scope=\"javax.enterprise.context.ApplicationScoped\"/>\n" +
+                "  <kbase name=\"kbase1\" default=\"true\" eventProcessingMode=\"stream\" equalsBehavior=\"identity\" scope=\"jakarta.enterprise.context.ApplicationScoped\">\n" +
+                "    <ksession name=\"ksession1\" type=\"stateful\" default=\"true\" clockType=\"realtime\" scope=\"jakarta.enterprise.context.ApplicationScoped\"/>\n" +
                 "  </kbase>\n" +
                 "</kmodule>";
 
diff --git a/drools-test-coverage/test-compiler-integration/src/test/resources/META-INF/kmodule.xml b/drools-test-coverage/test-compiler-integration/src/test/resources/META-INF/kmodule.xml
index ef384a6d20..ac6e1c76b0 100644
--- a/drools-test-coverage/test-compiler-integration/src/test/resources/META-INF/kmodule.xml
+++ b/drools-test-coverage/test-compiler-integration/src/test/resources/META-INF/kmodule.xml
@@ -25,7 +25,7 @@
     </kbase>    
 
     <kbase name="org.kie.kbase3" scope="SessionScoped" equalsBehavior="equality" eventProcessingMode="stream">
-        <ksession name="org.kie.kbase3.ksession1" scope="javax.enterprise.context.ApplicationScoped" type="stateful" clockType="pseudo"/>
+        <ksession name="org.kie.kbase3.ksession1" scope="jakarta.enterprise.context.ApplicationScoped" type="stateful" clockType="pseudo"/>
         <ksession name="org.kie.kbase3.ksession2" scope="SessionScoped" type="stateful" clockType="realtime"/>
     </kbase>
 
diff --git a/kie-api/src/main/java/org/kie/api/builder/model/KieBaseModel.java b/kie-api/src/main/java/org/kie/api/builder/model/KieBaseModel.java
index 9db6cb102c..cf80a876e7 100644
--- a/kie-api/src/main/java/org/kie/api/builder/model/KieBaseModel.java
+++ b/kie-api/src/main/java/org/kie/api/builder/model/KieBaseModel.java
@@ -181,7 +181,7 @@ public interface KieBaseModel {
 
     /**
      * Returns the CDI scope of this KieBaseModel
-     * Default is javax.enterprise.context.ApplicationScoped
+     * Default is jakarta.enterprise.context.ApplicationScoped
      */
     String getScope();
 
diff --git a/kie-api/src/main/java/org/kie/api/builder/model/KieSessionModel.java b/kie-api/src/main/java/org/kie/api/builder/model/KieSessionModel.java
index 3259eb145e..bb0d4fd4e6 100644
--- a/kie-api/src/main/java/org/kie/api/builder/model/KieSessionModel.java
+++ b/kie-api/src/main/java/org/kie/api/builder/model/KieSessionModel.java
@@ -98,7 +98,7 @@ public interface KieSessionModel {
     
     /**
      * Sets the CDI scope for this KieSessionModel
-     * Default is javax.enterprise.context.ApplicationScoped
+     * Default is jakarta.enterprise.context.ApplicationScoped
      */
     KieSessionModel setScope(String scope);
 
diff --git a/kie-api/src/test/resources/org/kie/api/kmod1.xml b/kie-api/src/test/resources/org/kie/api/kmod1.xml
index 8b4e16467a..ab006111e8 100644
--- a/kie-api/src/test/resources/org/kie/api/kmod1.xml
+++ b/kie-api/src/test/resources/org/kie/api/kmod1.xml
@@ -9,7 +9,7 @@
     </kbase>
 
 
-    <kbase name="org.kie.example3" includes="org.kie.example1, org.kie.example1" equalsBehavior="identity" scope="javax.enterprise.context.ApplicationScoped">
+    <kbase name="org.kie.example3" includes="org.kie.example1, org.kie.example1" equalsBehavior="identity" scope="jakarta.enterprise.context.ApplicationScoped">
         <ksession name="ksession1"/>
     </kbase>
 
@@ -27,7 +27,7 @@
     </kbase>
 
     <kbase name="org.kie.example6" includes="org.kie.example1, org.kie.example1" eventProcessingMode="cloud" packages="org.kie.pkg1, org.kie.pkg2">
-        <ksession name="ksession6" type="stateless"  clockType="pseudo" scope="javax.enterprise.context.ApplicationScoped">
+        <ksession name="ksession6" type="stateless"  clockType="pseudo" scope="jakarta.enterprise.context.ApplicationScoped">
             <consoleLogger />
         </ksession>
 
@@ -85,5 +85,3 @@
         </ksession>
     </kbase>
 </kmodule>
-
-
diff --git a/kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/util/Generated.java b/kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/util/Generated.java
index 5245103598..747e5232f8 100644
--- a/kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/util/Generated.java
+++ b/kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/util/Generated.java
@@ -16,7 +16,7 @@ import static java.lang.annotation.ElementType.TYPE;
 /**
  * For internal use for the scope of https://github.com/jacoco/jacoco/issues/731
  * and coverage analysis.
- * Similar to {@link javax.annotation.Generated}, but with RetentionPolicy.CLASS
+ * Similar to {@link jakarta.annotation.Generated}, but with RetentionPolicy.CLASS
  */
 @Retention(RetentionPolicy.CLASS)
 @Target({PACKAGE, TYPE, ANNOTATION_TYPE, METHOD, CONSTRUCTOR, FIELD,
