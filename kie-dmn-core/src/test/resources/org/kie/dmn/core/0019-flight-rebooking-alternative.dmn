<?xml version="1.0" encoding="UTF-8"?>
<definitions id="_0019_flight_rebooking" 
	name="0019-flight-rebooking"
	namespace="https://www.drools.org/kie-dmn"
	xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd"
	xmlns:kie="https://www.drools.org/kie-dmn"
	xmlns:feel="http://www.omg.org/spec/FEEL/20140401">
	
	<itemDefinition id="_tFlight" name="tFlight">
		<itemComponent id="_tFlight_Flight" name="Flight Number">
			<typeRef>feel:string</typeRef>
		</itemComponent>
		<itemComponent id="_tFlight_From" name="From">
			<typeRef>feel:string</typeRef>
		</itemComponent>
		<itemComponent id="_tFlight_To" name="To">
			<typeRef>feel:string</typeRef>
		</itemComponent>
		<itemComponent id="_tFlight_Dep" name="Departure">
			<typeRef>feel:dateTime</typeRef>
		</itemComponent>
		<itemComponent id="_tFlight_Arr" name="Arrival">
			<typeRef>feel:dateTime</typeRef>
		</itemComponent>
		<itemComponent id="_tFlight_Capacity" name="Capacity">
			<typeRef>feel:number</typeRef>
		</itemComponent>
		<itemComponent id="_tFlight_Status" name="Status">
			<typeRef>feel:string</typeRef>
		</itemComponent>
	</itemDefinition>
	<itemDefinition id="_tFlightTable" isCollection="true" name="tFlightTable">
		<typeRef>kie:tFlight</typeRef>
	</itemDefinition>
	
	<itemDefinition id="_tPassenger" name="tPassenger">
		<itemComponent id="_tPassenger_Name" name="Name">
			<typeRef>feel:string</typeRef>
		</itemComponent>
		<itemComponent id="_tPassenger_Status" name="Status">
			<typeRef>feel:string</typeRef>
		</itemComponent>
		<itemComponent id="_tPassenger_Miles" name="Miles">
			<typeRef>feel:number</typeRef>
		</itemComponent>
		<itemComponent id="_tPassenger_Flight" name="Flight Number">
			<typeRef>feel:string</typeRef>
		</itemComponent>
	</itemDefinition>
	<itemDefinition id="_tPassengerTable" isCollection="true" name="tPassengerTable">
		<typeRef>kie:tPassenger</typeRef>
	</itemDefinition>
	
	<inputData id="i_Flight_List" name="Flight List">
		<variable name="Flight List" typeRef="kie:tFlightTable"/>
	</inputData>
	
	<inputData id="i_Passenger_List" name="Passenger List">
		<variable name="Passenger List" typeRef="kie:tPassengerTable"/>
	</inputData>
	
	<decision name="Prioritized Waiting List" id="d_PrioritizedWaitingList">
		<variable name="Prioritized Waiting List" typeRef="kie:tPassengerTable"/>
		<informationRequirement>
			<requiredInput href="#i_Passenger_List"/>
		</informationRequirement>
		<informationRequirement>
			<requiredInput href="#i_Flight_List"/>
		</informationRequirement>
		<knowledgeRequirement>
			<requiredKnowledge href="#b_StatusPriority"/>
		</knowledgeRequirement>
		<context>
			<contextEntry>
				<variable name="Cancelled Flights" typeRef="feel:string" isCollection="true"/>
				<literalExpression>
					<text>Flight List[ Status = "cancelled" ].Flight Number</text>
				</literalExpression>
			</contextEntry>
			<contextEntry>
				<variable name="Waiting List" typeRef="kie:tPassengerTable"/>
				<literalExpression>
					<text>Passenger List[ list contains( Cancelled Flights, Flight Number ) ]</text>
				</literalExpression>
			</contextEntry>
			<contextEntry>
				<variable name="passenger priority" typeRef="feel:boolean"/>
				<functionDefinition >
					<formalParameter name="Passenger1" typeRef="kie:tPassenger"/>
					<formalParameter name="Passenger2" typeRef="kie:tPassenger"/>
					<literalExpression>
						<text> status priority( Passenger1.Status ) &lt; status priority( Passenger2.Status ) or
							   ( status priority( Passenger1.Status ) = status priority( Passenger2.Status ) and 
							     Passenger1.Miles > Passenger2.Miles ) 
							   )</text>
					</literalExpression>
				</functionDefinition>
			</contextEntry>
			<contextEntry>
				<literalExpression>
					<text>sort( Waiting List, passenger priority )</text>
				</literalExpression>
			</contextEntry>
		</context>
	</decision>
	
	<decision name="Rebooked Passengers" id="d_RebookedPassengers">
		<variable name="Rebooked Passengers" typeRef="kie:tPassengerTable"/>
		<informationRequirement>
			<requiredDecision href="#d_PrioritizedWaitingList"/>
		</informationRequirement>
		<informationRequirement>
			<requiredInput href="#i_Flight_List"/>
		</informationRequirement>
		<knowledgeRequirement>
			<requiredKnowledge href="#b_RebookedFlights"/>
		</knowledgeRequirement>
		<literalExpression>
			<text>
				rebooked flights( Prioritized Waiting List, [], Flight List )
			</text>
		</literalExpression>
	</decision>
	
	<businessKnowledgeModel id="b_StatusPriority" name="status priority">
		<encapsulatedLogic>
			<formalParameter name="Status" typeRef="feel:string"/>
			<decisionTable hitPolicy="UNIQUE">
				<input id="b_Status_Priority_dt_i_Status" label="Status">
					<inputExpression typeRef="feel:string">
						<text>Status</text>
					</inputExpression>
					<inputValues>
						<text>"gold", "silver", "bronze"</text>
					</inputValues>
				</input>
				<output id="b_Status_Priority_dt_o"/>
				<rule id="b_Status_Priority_dt_r1">
					<inputEntry id="b_Status_Priority_dt_r1_i1">
						<text>"gold"</text>
					</inputEntry>
					<outputEntry id="b_Status_Priority_dt_r1_o1">
						<text>1</text>
					</outputEntry>
				</rule>
				<rule id="b_Status_Priority_dt_r2">
					<inputEntry id="b_Status_Priority_dt_r2_i1">
						<text>"silver"</text>
					</inputEntry>
					<outputEntry id="b_Status_Priority_dt_r2_o1">
						<text>2</text>
					</outputEntry>
				</rule>
				<rule id="b_Status_Priority_dt_r3">
					<inputEntry id="b_Status_Priority_dt_r3_i1">
						<text>"bronze"</text>
					</inputEntry>
					<outputEntry id="b_Status_Priority_dt_r3_o1">
						<text>3</text>
					</outputEntry>
				</rule>
			</decisionTable>
		</encapsulatedLogic>
		<variable name="status priority" typeRef="feel:number"/>
	</businessKnowledgeModel>
	
	<businessKnowledgeModel id="b_RebookedFlights" name="rebooked flights">
		<encapsulatedLogic>
			<formalParameter name="Waiting" typeRef="kie:tPassengerTable"/>
			<formalParameter name="Rebooked" typeRef="kie:tPassengerTable"/>
			<formalParameter name="Flights" typeRef="kie:tFlightTable"/>
			<context>
				<contextEntry>
					<variable name="Passenger" typeRef="kie:tPassenger"/>
					<literalExpression>
						<text>Waiting[1]</text>
					</literalExpression>
				</contextEntry>
				<contextEntry>
					<variable name="Original Flight" typeRef="kie:tFlight"/>
					<literalExpression>
						<text>Flights[ Flight Number = Passenger.Flight Number ][1]</text>
					</literalExpression>
				</contextEntry>
				<contextEntry>
					<variable name="has capacity" typeRef="feel:boolean"/>
					<functionDefinition >
						<formalParameter name="flight" typeRef="kie:tFlight"/>
						<formalParameter name="rebooked list" typeRef="kie:tPassengerTable"/>
						<literalExpression>
							<text> flight.Capacity > count( rebooked list[ Flight Number = flight.Flight Number ] ) </text>
						</literalExpression>
					</functionDefinition>
				</contextEntry>
				<contextEntry>
					<variable name="Best Alternate Flight" typeRef="kie:tFlight"/>
					<literalExpression>
						<text>Flight List[ From = Original Flight.From and 
							               To = Original Flight.To and
							               Departure > Original Flight.Departure and
							               Status = "scheduled" and
							               has capacity( item, Rebooked ) ][1]</text>
					</literalExpression>
				</contextEntry>
				<contextEntry>
					<variable name="New Flight" typeRef="kie:tPassenger"/>
					<context>
						<contextEntry>
							<variable name="Name" typeRef="feel:string"/>
							<literalExpression><text>Passenger.Name</text></literalExpression>
						</contextEntry>
						<contextEntry>
							<variable name="Status" typeRef="feel:string"/>
							<literalExpression><text>Passenger.Status</text></literalExpression>
						</contextEntry>
						<contextEntry>
							<variable name="Miles" typeRef="feel:number"/>
							<literalExpression><text>Passenger.Miles</text></literalExpression>
						</contextEntry>
						<contextEntry>
							<variable name="Flight Number" typeRef="feel:string"/>
							<literalExpression><text>Best Alternate Flight.Flight Number</text></literalExpression>
						</contextEntry>
					</context>
				</contextEntry>
				<contextEntry>
					<literalExpression>
						<text>if count( Waiting ) > 1 
							  then
							       rebooked flights( remove( Waiting, 1 ),
							                         append( Rebooked, New Flight ),
							                         Flights )
							  else 
							       append( Rebooked, New Flight )
						</text>
					</literalExpression>
				</contextEntry>
			</context>
		</encapsulatedLogic>
		<variable name="rebooked flights" typeRef="kie:tPassengerTable"/>
	</businessKnowledgeModel>
</definitions>
