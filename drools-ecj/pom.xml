<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2020. Red Hat, Inc. and/or its affiliates.
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>drools</artifactId>
        <groupId>org.drools</groupId>
        <version>7.58.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <name>Drools :: ECJ</name>

    <artifactId>drools-ecj</artifactId>
    <packaging>bundle</packaging><!-- bundle = jar + OSGi metadata -->

    <properties>
        <java.module.name>org.drools.ecj</java.module.name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>ecj</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- shade ecj to allow the gwt compiler to use its own version -->
            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createSourcesJar>true</createSourcesJar>
                            <artifactSet>
                                <includes>
                                    <include>org.eclipse.jdt:ecj</include>
                                </includes>
                            </artifactSet>
                            <relocations>
                                <relocation>
                                    <pattern>org.eclipse.jdt</pattern>
                                    <shadedPattern>org.drools.compiler.shade.org.eclipse.jdt</shadedPattern>
                                </relocation>
                            </relocations>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <instructions>
                        <Import-Package>
                            <!-- Hack/workaround: relying on ECJ package version [0,1) is needed as ECJ does not export specific package
                                 versions (and thus the version defaults to 0.0.0). This is just a workaround as proper fix needs be done
                                 in ECJ directly to export the versions correctly in the MANIFEST.MF. -->
                            org.eclipse.jdt.*;version="[0,1)";resolution:=optional,
                            *
                        </Import-Package>
                        <Export-Package>
                            org.drools.ecj.*
                        </Export-Package>
                        <_removeheaders>Private-Package</_removeheaders>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>