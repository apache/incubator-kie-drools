{
    super("golfing", Collections.emptyList());
    pmmlMODEL = org.kie.pmml.api.enums.PMML_MODEL.TREE_MODEL;
    transformationDictionary = this.createTransformationDictionary();
    localTransformations = this.createLocalTransformations();
    miningFunction = org.kie.pmml.api.enums.MINING_FUNCTION.CLASSIFICATION;
    targetField = "whatIdo";
    miningFields.add(new org.kie.pmml.api.models.MiningField("temperature", org.kie.pmml.api.enums.FIELD_USAGE_TYPE.ACTIVE,
            null, org.kie.pmml.api.enums.DATA_TYPE.DOUBLE, null, org.kie.pmml.api.enums.INVALID_VALUE_TREATMENT_METHOD.RETURN_INVALID,
            null, null, java.util.Arrays.asList(), java.util.Arrays.asList()));
    miningFields.add(new org.kie.pmml.api.models.MiningField("humidity", org.kie.pmml.api.enums.FIELD_USAGE_TYPE.ACTIVE,
            null, org.kie.pmml.api.enums.DATA_TYPE.DOUBLE, null, org.kie.pmml.api.enums.INVALID_VALUE_TREATMENT_METHOD.RETURN_INVALID,
            null, null, java.util.Arrays.asList(), java.util.Arrays.asList()));
    miningFields.add(new org.kie.pmml.api.models.MiningField("windy", org.kie.pmml.api.enums.FIELD_USAGE_TYPE.ACTIVE,
            null, org.kie.pmml.api.enums.DATA_TYPE.STRING, null, org.kie.pmml.api.enums.INVALID_VALUE_TREATMENT_METHOD.RETURN_INVALID,
            null, null, java.util.Arrays.asList("true", "false"), java.util.Arrays.asList()));
    miningFields.add(new org.kie.pmml.api.models.MiningField("outlook", org.kie.pmml.api.enums.FIELD_USAGE_TYPE.ACTIVE,
            null, org.kie.pmml.api.enums.DATA_TYPE.STRING, null, org.kie.pmml.api.enums.INVALID_VALUE_TREATMENT_METHOD.RETURN_INVALID,
            null, null, java.util.Arrays.asList("sunny", "overcast", "rain"), java.util.Arrays.asList()));
    miningFields.add(new org.kie.pmml.api.models.MiningField("whatIdo", org.kie.pmml.api.enums.FIELD_USAGE_TYPE.TARGET,
            null, org.kie.pmml.api.enums.DATA_TYPE.STRING, null, org.kie.pmml.api.enums.INVALID_VALUE_TREATMENT_METHOD.RETURN_INVALID,
            null, null, java.util.Arrays.asList("will play", "may play", "no play"), java.util.Arrays.asList()));
}