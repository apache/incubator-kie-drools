/*
 * Copyright 2016 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.drools.testcoverage.functional

//list any import classes here.
import org.drools.testcoverage.common.model.AggregableFact
import org.drools.testcoverage.common.model.Message
import java.util.Map

//declare any global variables here
global Map results

rule "TestCount"
    when
        Number ( $result : doubleValue ) from
            accumulate (
                AggregableFact ( $value : value != 0 ), count ( $value )
            )
    then
        Message msg = new Message();
        msg.setMessage(Double.toString($result));

        results.put("count", msg);
end

rule "TestAverage"
    when
        Number ( $result : doubleValue ) from
            accumulate (
                AggregableFact ( $value : value != 0 ), average ( $value )
            )
    then
        Message msg = new Message();
        msg.setMessage(Double.toString($result));

        results.put("average", msg);
end

rule "TestMin"
    when
        Number ( $result : doubleValue ) from
            accumulate (
                AggregableFact ( $value : value != 0 ), min ( $value )
            )
    then
        Message msg = new Message();
        msg.setMessage(Double.toString($result));

        results.put("min", msg);
end

rule "TestMax"
    when
        Number ( $result : doubleValue ) from
            accumulate (
                AggregableFact ( $value : value != 0 ), max ( $value )
            )
    then
        Message msg = new Message();
        msg.setMessage(Double.toString($result));

        results.put("max", msg);
end
