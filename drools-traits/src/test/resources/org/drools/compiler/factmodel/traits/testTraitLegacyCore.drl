/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.drools.compiler.trait.test;


// Individual is an empty traitable, based solely on a property map.
import org.drools.base.factmodel.traits.Traitable;

import org.drools.traits.compiler.factmodel.traits.IRole
import org.drools.traits.compiler.factmodel.traits.Imp
import org.drools.traits.compiler.factmodel.traits.IRole;


global java.util.List list;

declare trait IRole

end

declare Imp
    @Traitable
    @PropertyReactive
end


declare Core
    @Traitable
end


// declared interface
declare trait Person
    name : String
    age  : int
end

rule "Init"
when
then
    Imp core = new Imp();
    insert( core );
end

rule "Trait"
when
    // use only pure Objs
    $core: Imp()
    not Person( age == 30 )
then
    Person p = don( $core, Person.class );

    modify( p ) {
        setName( "john" ),
        setAge( 30 );
    }
end

rule "Cloak"
no-loop
when
    $p    : Person( $core : core, name == "john" )
then
    list.add("OK");

    IRole role = don( $core, IRole.class );

    modify( role ) {
        setRoleName("myRole");
    }
end


rule "Role"
when
    $role : IRole( roleName == "myRole" )
then
    list.add("OK2");
end
