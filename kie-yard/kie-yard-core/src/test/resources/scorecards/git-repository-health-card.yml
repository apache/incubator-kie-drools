# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

specVersion: alpha
kind: YaRD
name: "Git Repository Completeness"
expressionLang: jshell
inputs:
  - name: "Repository Data"
    type: 'http://myapi.org/jsonSchema.json#GitRepositoryData'
elements:
  - name: Has Owners
    type: Decision
    logic:
      type: LiteralExpression
      expression: |
        `Git Data`.owners.size > 0
  - name: Has Description
    type: Decision
    logic:
      type: LiteralExpression
      expression: |
        !`Git Data`.description.trim.isEmpty()
  - name: Code of Conduct is Set
    type: Decision
    logic:
      type: LiteralExpression
      expression: |
        `Git Data`.codeOfConduct != null
        && !`Git Data`.codeOfConduct.trim.isEmpty()
  - name: Security Information is Set
    type: Decision
    logic:
      type: LiteralExpression
      expression: |
        `Git Data`.securityInformation != null
        && !`Git Data`.securityInformation.trim.isEmpty()
  - name: Weighted Score
    type: Decision
    logic:
      type: DecisionTable
      hitPolicy: COLLECT
      inputs: [ "true == {0}" ]
      outputComponents: [ "Line Score" ]
      rules:
        - when: [ 'Has Owners' ]
          then: 4
        - when: [ 'Has Description' ]
          then: 1
        - when: [ 'Code of Conduct is Set' ]
          then: 4
        - when: [ 'Security Information is Set' ]
          then: 2
  - name: Score
    type: Decision
    logic:
      type: LiteralExpression
      expression: |
        `Weighted Score`.stream.mapToInt(Integer::intValue).sum();