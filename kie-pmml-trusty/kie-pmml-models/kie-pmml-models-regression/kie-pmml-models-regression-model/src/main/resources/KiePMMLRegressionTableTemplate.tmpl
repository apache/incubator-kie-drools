/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.kie.pmml.models.regression.runtime;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.concurrent.atomic.AtomicReference;

import org.kie.pmml.api.iinterfaces.SerializableFunction;
import org.kie.pmml.models.regression.model.KiePMMLRegressionTable;

public class KiePMMLRegressionTableTemplate {

    public static KiePMMLRegressionTable getKiePMMLTable() {
        KiePMMLRegressionTable toReturn = KiePMMLRegressionTable.builder("", Collections.emptyList())
                                        .withNumericFunctionMap(numericFunctionMap)
                                        .withCategoricalFunctionMap(categoricalFunctionMap)
                                        .withPredictorTermsFunctionMap(predictorTermsFunctionMap)
                                        .withResultUpdater(resultUpdater)
                                        .withIntercept(intercept)
                                        .withTargetField(targetField)
                                        .withTargetCategory(targetCategory)
                                        .build();
        return toReturn;
    }

}
