@Library('jenkins-pipeline-shared-libraries')_

import org.kie.jenkins.MavenCommand

changeAuthor = env.ghprbAuthorRepoGitUrl ? util.getGroup(env.ghprbAuthorRepoGitUrl) : (env.ghprbPullAuthorLogin ?: CHANGE_AUTHOR)
changeBranch = env.ghprbSourceBranch ?: CHANGE_BRANCH

pipeline {
    agent {
        label 'kie-rhel8 && kie-mem16g && !built-in'
    }
    tools {
        maven env.BUILD_MAVEN_TOOL
        jdk env.BUILD_JDK_TOOL
    }
    options {
        timestamps()
        timeout(time: 180, unit: 'MINUTES')
    }
    stages {
        stage('Initialization') {
            steps {
                script {
                    cleanWs()

                    sh 'printenv > env_props'
                    archiveArtifacts artifacts: 'env_props'

                    dir(getRepoName()) {
                        checkout(githubscm.resolveRepository(getRepoName(), changeAuthor, changeBranch, false))
                        // need to manually checkout branch since on a detached branch after checkout command
                        sh "git checkout ${changeBranch}"
                    }
                }
            }
        }
        stage('Generate rewrite patch') {
            steps {
                script {
                    dir(getRepoName()) {
                        configFileProvider([configFile(fileId: env.MAVEN_SETTINGS_CONFIG_FILE_ID, variable: 'MAVEN_SETTINGS_FILE')]) {
                            env.BUILD_MVN_OPTS = "${env.BUILD_MVN_OPTS ?: ''} -s ${MAVEN_SETTINGS_FILE} -Dmaven.wagon.http.ssl.insecure=true -Dmaven.test.failure.ignore=true"
                            echo "BUILD_MVN_OPTS = ${BUILD_MVN_OPTS}"

                            sh '.ci/environments/quarkus-3/before.sh rewrite'
                        }
                    }
                }
            }
        }
        stage('Push changes') {
            steps {
                script {
                    dir(getRepoName()) {
                        githubscm.pushObject('origin', changeBranch, getGitAuthorCredsId())
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                cleanWs()
            }
        }
        unsuccessful {
            script {
                pullrequest.postComment(util.getMarkdownTestSummary('Rewrite quarkus-3 before.sh patch file', '', "${BUILD_URL}", 'GITHUB'))
            }
        }
    }
}

String getRepoName() {
    return env.REPO_NAME
}

String getGitAuthorCredsId() {
    return env.AUTHOR_CREDS_ID
}

MavenCommand getMavenCommand() {
    return new MavenCommand(this, ['-fae', '-ntp'])
                .withSettingsXmlId(env.MAVEN_SETTINGS_CONFIG_FILE_ID)
                .withProperty('full')
}
