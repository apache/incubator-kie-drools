/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.sample

import com.sample.DroolsTest.Message;
/*
//
// These rules have gaps
//
rule "Missing variable range 1a, warning"
    when
            $s :Something( )
            Foo1w( value > $s.a.b.c.d )
    then
        System.out.println( "Test" );
end

rule "Missing variable range 1b, warning"
    when
            $s :Something( )
            Foo1w( value < $s.a.b.c.d )
    then
        System.out.println( "Test" );
end

rule "Missing variable range 2a, warning"
    when
            $s :Something( )
            Foo2w( value > $s.bar )
    then
        System.out.println( "Test" );
end

rule "Missing variable range 2b, warning"
    when
            $s :Something( )
            Foo2w( value < $s.bar )
    then
        System.out.println( "Test" );
end

rule "Missing variable range 3a, warning"
    when
            Something( $bar :bar)
            Foo3w( value > $bar )
    then
        System.out.println( "Test" );
end

rule "Missing variable range 3b, warning"
    when
            Something( $bar :bar)
            Foo3w( value < $bar )
    then
        System.out.println( "Test" );
end

rule "Missing variable range 4a, warning"
    when
            Something( $bar :bar)
            Foo4w( value > $bar )
    then
        System.out.println( "Test" );
end

rule "Missing variable range 4b, warning"
    when
            Something( $bar :bar)
            Foo4w( value == $bar )
    then
        System.out.println( "Test" );
end

rule "Missing variable range 5a, warning"
    when
            Something( $bar :bar)
            Foo5w( value < $bar )
    then
        System.out.println( "Test" );
end

rule "Missing variable range 5b, warning"
    when
            Something( $bar :bar)
            Foo5w( value == $bar )
    then
        System.out.println( "Test" );
end
*/
//
// These rules have no gaps
//
rule "Missing variable range 1a, covers all"
    when
            $s :Something( )
            Foo1a( value >= $s.a.b.c.d )
    then
        System.out.println( "Test" );
end

rule "Missing variable range 1b, covers all"
    when
            $s :Something()
            Foo1a( value < $s.a.b.c.d )
    then
        System.out.println( "Test" );
end
/*
rule "Missing variable range 2a, covers all"
    when
            $s :Something()
            Foo2a( value > $s.bar )
    then
        System.out.println( "Test" );
end

rule "Missing variable range 2b, covers all"
    when
            $s :Something( )
            Foo2a( value =< $s.bar )
    then
        System.out.println( "Test" );
end

rule "Missing variable range 3a, covers all"
    when
            Something( $bar :bar)
            Foo3a( value > $bar )
    then
        System.out.println( "Test" );
end

rule "Missing variable range 3b, covers all"
    when
            Something( $bar :bar)
            Foo3a( value == $bar )
    then
        System.out.println( "Test" );
end
rule "Missing variable range 3c, covers all"
    when
            Something( $bar :bar)
            Foo3a( value < $bar )
    then
        System.out.println( "Test" );
end
*/
