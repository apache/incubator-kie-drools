<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.drools</groupId>
    <artifactId>drools</artifactId>
    <version>7.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>drools-compiler</artifactId>
  <packaging>bundle</packaging><!-- bundle = jar + OSGi metadata -->

  <name>Drools :: Compiler</name>

  <properties>
    <osgi.Bundle-SymbolicName>org.drools.compiler</osgi.Bundle-SymbolicName>
    <excludedGroups>org.drools.compiler.TurtleTestCategory</excludedGroups>
    <surefire.forkCount>2</surefire.forkCount>
  </properties>

  <dependencies>
    <!-- Internal dependencies -->
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-core</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-internal</artifactId>
    </dependency>
    <!-- External dependencies -->
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.compendium</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>gunit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jdt.core.compiler</groupId>
      <artifactId>ecj</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.mvel</groupId>
      <artifactId>mvel2</artifactId>
    </dependency>
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <!-- mdp temporary change, for kmodule.xml, undo once new format is chosen
          scope>test</scope-->
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
    </dependency>

    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-xjc</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.xml.bind</groupId>
      <artifactId>jboss-jaxb-api_2.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.xml.stream</groupId>
      <artifactId>stax-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.java.dev.glazedlists</groupId>
      <artifactId>glazedlists_java15</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency><!-- For unit test logging: configure in src/test/resources/logback-test.xml -->
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- test: byteman -->
    <dependency>
      <groupId>org.jboss.byteman</groupId>
      <artifactId>byteman</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.byteman</groupId>
      <artifactId>byteman-submit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.byteman</groupId>
      <artifactId>byteman-install</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.byteman</groupId>
      <artifactId>byteman-bmunit</artifactId>
      <scope>test</scope>
    </dependency>
    
    <!-- Required for TestListener in maven-surefire-plugin. -->
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-test-util</artifactId>
      <scope>test</scope>
    </dependency>
    
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <configuration>
            <excludeFilterFile>${project.basedir}/src/main/findbugs/findbugs-exclude.xml</excludeFilterFile>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <properties>
            <property>
              <name>listener</name>
              <value>org.kie.test.util.TestStatusListener</value>
            </property>
          </properties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jboss.byteman</groupId>
        <artifactId>byteman-rulecheck-maven-plugin</artifactId>
        <version>${version.org.jboss.byteman}</version>
        <executions>
          <execution>
            <id>rulecheck-test</id>
            <goals>
              <goal>rulecheck</goal>
            </goals>
            <phase>test-compile</phase>
            <configuration>
              <includes>
                <include>**/*.btm</include>
              </includes>
              <verbose>true</verbose>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <configuration>
          <instructions>
            <Import-Package>
              com.sun.tools.xjc.*;resolution:=optional,
              com.sun.codemodel;resolution:=optional,
              javax.enterprise.*;resolution:=optional,
              org.antlr.*;resolution:=optional,
              org.codehaus.janino.*;resolution:=optional,
              <!-- Hack/workaround: relying on ECJ package version [0,1) is needed as ECJ does not export specific package
                   versions (and thus the version defaults to 0.0.0). This is just a workaround as proper fix needs be done
                   in ECJ directly to export the versions correctly in the MANIFEST.MF. -->
              org.eclipse.jdt.*;version="[0,1)";resolution:=optional,
              org.osgi.*;resolution:=optional,
              org.drools.cdi;resolution:=optional,
              org.jbpm.process.instance.impl;resolution:=optional,
              org.kie.scanner;resolution:=optional,
              =org.kie.spring;resolution:=optional,
              *
            </Import-Package>
            <Export-Package>
              org.drools.compiler.*
            </Export-Package>
            <Bundle-Activator>org.drools.compiler.osgi.Activator</Bundle-Activator>
            <_removeheaders>Private-Package</_removeheaders>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>runTurtleTests</id>
      <activation>
        <property>
          <name>runTurtleTests</name>
        </property>
      </activation>
      <properties>
        <excludedGroups/>
      </properties>
    </profile>
    <profile>
      <id>grammarsProfile</id>
      <activation>
        <property>
          <name>grammars</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <phase>generate-sources</phase>
                <configuration>
                  <tasks>
                    <condition property="antlr.debugParser" value="-Xconversiontimeout 32000 -debug" else="">
                      <isset property="debugParser"/>
                    </condition>
                    <!-- path id="antlr.path">
                        <path refid="maven.compile.classpath"/>
                    </path -->
                    <echo message="Generating Lexer (${antlr.debugParser})"/>
                    <java classname="org.antlr.Tool" fork="true">
                      <jvmarg line="-Xmx750M -Xincgc"/>
                      <arg line="${antlr.debugParser} -lib src/main/resources/org/drools/compiler/lang src/main/resources/org/drools/compiler/lang/DRL5Lexer.g"/>
                      <classpath refid="maven.compile.classpath"/>
                    </java>
                    <java classname="org.antlr.Tool" fork="true">
                      <jvmarg line="-Xmx750M -Xincgc"/>
                      <arg line="${antlr.debugParser} -lib src/main/resources/org/drools/compiler/lang src/main/resources/org/drools/compiler/lang/DRL6Lexer.g"/>
                      <classpath refid="maven.compile.classpath"/>
                    </java>
                    <echo message="Generating Expressions Parser (${antlr.debugParser})"/>
                    <java classname="org.antlr.Tool" fork="true">
                      <jvmarg line="-Xmx750M -Xincgc"/>
                      <arg line="${antlr.debugParser} -lib src/main/resources/org/drools/compiler/lang src/main/resources/org/drools/compiler/lang/DRL5Expressions.g"/>
                      <classpath refid="maven.compile.classpath"/>
                    </java>
                    <java classname="org.antlr.Tool" fork="true">
                      <jvmarg line="-Xmx750M -Xincgc"/>
                      <arg line="${antlr.debugParser} -lib src/main/resources/org/drools/compiler/lang src/main/resources/org/drools/compiler/lang/DRL6Expressions.g"/>
                      <classpath refid="maven.compile.classpath"/>
                    </java>
                    <move todir="src/main/java/org/drools/compiler/lang/">
                      <fileset dir="src/main/resources/org/drools/compiler/lang">
                        <include name="**/*.java"/>
                      </fileset>
                    </move>
                    <echo message="Generating Antlr DSLMap.g and DSLMapWalker.g"/>
                    <java classname="org.antlr.Tool" fork="true">
                      <arg line="-lib src/main/resources/org/drools/compiler/lang/dsl src/main/resources/org/drools/compiler/lang/dsl/DSLMap.g src/main/resources/org/drools/compiler/lang/dsl/DSLMapWalker.g"/>
                      <classpath refid="maven.compile.classpath"/>
                    </java>
                    <move todir="src/main/java/org/drools/compiler/lang/dsl/">
                      <fileset dir="src/main/resources/org/drools/compiler/lang/dsl">
                        <include name="**/*.java"/>
                      </fileset>
                    </move>
                    <echo message="Generating Antlr Java.g"/>
                    <java classname="org.antlr.Tool" fork="true">
                      <arg line="-lib src/main/resources/org/drools/compiler/semantics/java/parser src/main/resources/org/drools/compiler/semantics/java/parser/Java.g"/>
                      <classpath refid="maven.compile.classpath"/>
                    </java>
                    <move todir="src/main/java/org/drools/compiler/rule/builder/dialect/java/parser">
                      <fileset dir="src/main/resources/org/drools/compiler/semantics/java/parser">
                        <include name="**/*.java"/>
                      </fileset>
                    </move>
                    <delete>
                      <fileset dir=".">
                        <include name="*.tokens"/>
                      </fileset>
                      <fileset dir="src/main/resources/org/drools/compiler/lang">
                        <include name="*.tokens"/>
                        <include name="DRL__.g"/>
                        <include name="dsl/DSLMap__.g"/>
                        <include name="__Test__.java"/>
                        <include name="classes"/>
                      </fileset>
                      <fileset dir="src/main/resources/org/drools/compiler/semantics/java/parser">
                        <include name="**/*.tokens"/>
                        <include name="Java__.g"/>
                      </fileset>
                    </delete>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
