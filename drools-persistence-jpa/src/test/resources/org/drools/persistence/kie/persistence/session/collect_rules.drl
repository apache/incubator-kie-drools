package org.drools.persistence.kie.persistence.session

import java.util.List

import org.drools.persistence.kie.persistence.session.JpaPersistentStatefulSessionTest.Door
import org.drools.persistence.kie.persistence.session.JpaPersistentStatefulSessionTest.Edible
import org.drools.persistence.kie.persistence.session.JpaPersistentStatefulSessionTest.ListHolder

global List list

declare Here
   place : String
end

declare Location
   thing : String
   location : String
end

query connect( String x, String y )
   Door(x, y;)
   or 
   Door(y, x;)
end

query whereFood( String x, String y )
   ( Location(x, y;) and
      Edible(x;) )
   or 
   ( Location(z, y;) and
      whereFood(x, z;) )
end

query look(String place, List things, List food, List exits)
   Here(place;)
   things := List() from accumulate( Location(thing, place;), collectList( thing ) )
   food := List() from accumulate( ?whereFood(thing, place;), collectList( thing ) )
   exits := List() from accumulate( ?connect(place, exit;), collectList( exit ) )
end

query isContainedIn( String x, String y ) 
    Location(x, y;)
    or 
    ( Location(z, y;) and isContainedIn(x, z;) )
end

rule reactiveLook 
   when
      listHolder : ListHolder()
      Here( $place : place)
      ?look($place, $things; $food := food, $exits := exits)
   then
      listHolder.setThings($things);
      listHolder.setFood($food);
      listHolder.setExits($exits);
end

rule "we have a list holder"
    when
        look($place, $things, $food, $exits;)
    then
        System.out.println("We are in the " + $place);
end

