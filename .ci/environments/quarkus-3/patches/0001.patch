Subject: [PATCH] [migration_20230327] Create openrewrite-based patch
---
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/main/java/org/kie/pmml/models/regression/compiler/executor/RegressionModelImplementationProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/main/java/org/kie/pmml/models/regression/compiler/executor/RegressionModelImplementationProvider.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/main/java/org/kie/pmml/models/regression/compiler/executor/RegressionModelImplementationProvider.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/main/java/org/kie/pmml/models/regression/compiler/executor/RegressionModelImplementationProvider.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/main/java/org/kie/pmml/models/regression/compiler/executor/RegressionModelImplementationProvider.java	(date 1680178598920)
@@ -191,7 +191,7 @@
         if (targetFields.size() != 1) {
             throw new KiePMMLException("Expected one target field, retrieved " + targetFields.size());
         }
-        if (toValidate.getTargetField() != null && !(Objects.equals(toValidate.getTargetField().getValue(),
+        if (toValidate.getTargetField() != null && !(Objects.equals(toValidate.getTargetField(),
                                                                     targetFields.get(0).getName()))) {
             throw new KiePMMLException(String.format("Not-matching target fields: %s %s", toValidate.getTargetField()
                     , targetFields.get(0).getName()));
@@ -206,7 +206,7 @@
         return fields.stream()
                 .filter(DataField.class::isInstance)
                 .map(DataField.class::cast)
-                .filter(dataField -> Objects.equals(dataField.getName().getValue(), categoricalFieldName)).mapToDouble(dataField -> dataField.getValues().size())
+                .filter(dataField -> Objects.equals(dataField.getName(), categoricalFieldName)).mapToDouble(dataField -> dataField.getValues().size())
                 .findFirst().orElse(0) == 2;
     }
 
@@ -214,7 +214,7 @@
         List<KiePMMLNameOpType> targetFields = getTargetFields(fields, toValidate);
         final List<String> categoricalFields = fields.stream()
                 .filter(dataField -> OpType.CATEGORICAL.equals(dataField.getOpType()))
-                .map(dataField -> dataField.getName().getValue())
+                .map(dataField ->dataField.getName())
                 .collect(Collectors.toList());
         final List<KiePMMLNameOpType> categoricalNameTypes =
                 targetFields.stream().filter(targetField -> categoricalFields.contains(targetField.getName())).collect(Collectors.toList());
Index: kie-internal/src/main/java/org/kie/internal/query/QueryFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/query/QueryFilter.java b/kie-internal/src/main/java/org/kie/internal/query/QueryFilter.java
--- a/kie-internal/src/main/java/org/kie/internal/query/QueryFilter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/query/QueryFilter.java	(date 1680178598870)
@@ -20,9 +20,9 @@
 import java.util.Map;
 import java.util.Map.Entry;
 
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlSchemaType;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlSchemaType;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.kie.internal.jaxb.StringKeyObjectValueMapXmlAdapter;
 
Index: kie-internal/src/main/java/org/kie/internal/query/QueryContext.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/query/QueryContext.java b/kie-internal/src/main/java/org/kie/internal/query/QueryContext.java
--- a/kie-internal/src/main/java/org/kie/internal/query/QueryContext.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/query/QueryContext.java	(date 1680178598870)
@@ -16,9 +16,9 @@
 
 package org.kie.internal.query;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlType;
 
 @XmlType
 @XmlAccessorType(XmlAccessType.FIELD)
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/main/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionTableFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/main/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionTableFactory.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/main/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionTableFactory.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/main/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionTableFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/main/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionTableFactory.java	(date 1680178598920)
@@ -203,7 +203,7 @@
      */
     static Map<String, SerializableFunction<Double, Double>> getNumericPredictorsMap(final List<NumericPredictor> numericPredictors) {
         return numericPredictors.stream()
-                .collect(Collectors.toMap(numericPredictor -> numericPredictor.getName().getValue(),
+                .collect(Collectors.toMap(numericPredictor ->numericPredictor.getField(),
                                           KiePMMLRegressionTableFactory::getNumericPredictorEntry));
     }
 
@@ -232,7 +232,7 @@
      */
     static Map<String, SerializableFunction<String, Double>> getCategoricalPredictorsMap(final List<CategoricalPredictor> categoricalPredictors) {
         final Map<String, List<CategoricalPredictor>> groupedCollectors = categoricalPredictors.stream()
-                .collect(groupingBy(categoricalPredictor -> categoricalPredictor.getField().getValue()));
+                .collect(groupingBy(categoricalPredictor ->categoricalPredictor.getField()));
         return groupedCollectors.entrySet().stream()
                 .map(entry -> {
                     Map<String, Double> groupedCategoricalPredictorMap =
@@ -273,7 +273,7 @@
         return predictorTerms.stream()
                 .map(predictorTerm -> {
                     int arity = predictorsArity.addAndGet(1);
-                    String variableName = predictorTerm.getName() != null ? predictorTerm.getName().getValue() :
+                    String variableName = predictorTerm.getName() != null ?predictorTerm.getName() :
                             "predictorTermFunction" + arity;
                     return new AbstractMap.SimpleEntry<>(variableName,
                                                          getPredictorTermSerializableFunction(predictorTerm));
@@ -292,7 +292,7 @@
         return resultMap -> {
             final AtomicReference<Double> result = new AtomicReference<>(1.0);
             final List<String> fieldRefs = predictorTerm.getFieldRefs().stream()
-                    .map(fieldRef -> fieldRef.getField().getValue())
+                    .map(fieldRef ->fieldRef.getField())
                     .collect(Collectors.toList());
             for (Map.Entry<String, Object> entry : resultMap.entrySet()) {
                 if (fieldRefs.contains(entry.getKey())) {
@@ -440,7 +440,7 @@
      */
     static Map<String, Expression> getNumericPredictorsExpressions(final List<NumericPredictor> numericPredictors) {
         return numericPredictors.stream()
-                .collect(Collectors.toMap(numericPredictor -> numericPredictor.getName().getValue(),
+                .collect(Collectors.toMap(numericPredictor ->numericPredictor.getField(),
                                           KiePMMLRegressionTableFactory::getNumericPredictorExpression));
     }
 
@@ -489,7 +489,7 @@
      */
     static Map<String, Expression> getCategoricalPredictorsExpressions(final List<CategoricalPredictor> categoricalPredictors, final BlockStmt body, final String variableName) {
         final Map<String, List<CategoricalPredictor>> groupedCollectors = categoricalPredictors.stream()
-                .collect(groupingBy(categoricalPredictor -> categoricalPredictor.getField().getValue()));
+                .collect(groupingBy(categoricalPredictor ->categoricalPredictor.getField()));
         final String categoricalPredictorMapNameBase = getSanitizedVariableName(String.format("%sMap", variableName));
         final AtomicInteger counter = new AtomicInteger();
         return groupedCollectors.entrySet().stream()
@@ -578,7 +578,7 @@
         return predictorTerms.stream()
                 .map(predictorTerm -> {
                     int arity = predictorsArity.addAndGet(1);
-                    String variableName = predictorTerm.getName() != null ? predictorTerm.getName().getValue() :
+                    String variableName = predictorTerm.getName() != null ?predictorTerm.getName() :
                             "predictorTermFunction" + arity;
                     return new AbstractMap.SimpleEntry<>(variableName,
                                                          getPredictorTermFunction(predictorTerm));
@@ -627,7 +627,7 @@
                     .orElseThrow(() -> new KiePMMLInternalException(String.format(MISSING_VARIABLE_IN_BODY,
                                                                                   "fieldRefs", body)));
             final List<Expression> nodeList = predictorTerm.getFieldRefs().stream()
-                    .map(fieldRef -> new StringLiteralExpr(fieldRef.getField().getValue()))
+                    .map(fieldRef -> new StringLiteralExpr(fieldRef.getField()))
                     .collect(Collectors.toList());
             NodeList<Expression> expressions = NodeList.nodeList(nodeList);
             MethodCallExpr methodCallExpr = new MethodCallExpr(new NameExpr("Arrays"), "asList", expressions);
Index: kie-internal/src/main/java/org/kie/internal/query/data/QueryParameters.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/query/data/QueryParameters.java b/kie-internal/src/main/java/org/kie/internal/query/data/QueryParameters.java
--- a/kie-internal/src/main/java/org/kie/internal/query/data/QueryParameters.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/query/data/QueryParameters.java	(date 1680178598871)
@@ -21,12 +21,12 @@
 import java.util.List;
 import java.util.Map;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlTransient;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlTransient;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.kie.internal.jaxb.StringKeyObjectValueMapXmlAdapter;
 
Index: kie-internal/src/main/java/org/kie/internal/query/data/QueryData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/query/data/QueryData.java b/kie-internal/src/main/java/org/kie/internal/query/data/QueryData.java
--- a/kie-internal/src/main/java/org/kie/internal/query/data/QueryData.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/query/data/QueryData.java	(date 1680178598871)
@@ -15,10 +15,10 @@
 
 package org.kie.internal.query.data;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlType;
 
 import org.kie.internal.query.QueryContext;
 
Index: drools-xml-support/src/test/java/org/drools/xml/support/CommandSerializationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-xml-support/src/test/java/org/drools/xml/support/CommandSerializationTest.java b/drools-xml-support/src/test/java/org/drools/xml/support/CommandSerializationTest.java
--- a/drools-xml-support/src/test/java/org/drools/xml/support/CommandSerializationTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-xml-support/src/test/java/org/drools/xml/support/CommandSerializationTest.java	(date 1680178598893)
@@ -31,9 +31,9 @@
 import java.util.UUID;
 import java.util.regex.Pattern;
 
-import javax.xml.bind.JAXBContext;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlElements;
+import jakarta.xml.bind.JAXBContext;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlElements;
 
 import org.drools.core.ClassObjectFilter;
 import org.drools.core.ClassObjectSerializationFilter;
Index: drools-traits/src/test/filtered-resources/META-INF/persistence.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-traits/src/test/filtered-resources/META-INF/persistence.xml b/drools-traits/src/test/filtered-resources/META-INF/persistence.xml
--- a/drools-traits/src/test/filtered-resources/META-INF/persistence.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-traits/src/test/filtered-resources/META-INF/persistence.xml	(date 1680178598902)
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<persistence version="2.1"
-             xmlns="http://xmlns.jcp.org/xml/ns/persistence"
+<persistence version="3.0"
+             xmlns="https://jakarta.ee/xml/ns/persistence"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
+             xsi:schemaLocation="https://jakarta.ee/xml/ns/persistence https://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd">
 
     <persistence-unit name="org.drools.persistence.jpa" transaction-type="JTA">
       <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionModelFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionModelFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionModelFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionModelFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionModelFactoryTest.java	(date 1680178598921)
@@ -164,7 +164,7 @@
         assertThat(retrieved).isNotNull();
         assertThat(retrieved.getName()).isEqualTo(regressionModel.getModelName());
         assertThat(retrieved.getMiningFunction()).isEqualTo(MINING_FUNCTION.byName(regressionModel.getMiningFunction().value()));
-        assertThat(retrieved.getTargetField()).isEqualTo(miningFields.get(0).getName().getValue());
+        assertThat(retrieved.getTargetField()).isEqualTo(miningFields.get(0).getName());
         final AbstractKiePMMLTable regressionTable = retrieved.getRegressionTable();
         assertThat(regressionTable).isNotNull();
         assertThat(regressionTable).isInstanceOf(KiePMMLClassificationTable.class);
@@ -225,7 +225,7 @@
         Map<Integer, Expression> superInvocationExpressionsMap = new HashMap<>();
         superInvocationExpressionsMap.put(0, new NameExpr(String.format("\"%s\"", regressionModel.getModelName())));
         Map<String, Expression> assignExpressionMap = new HashMap<>();
-        assignExpressionMap.put("targetField", new StringLiteralExpr(targetMiningField.getName().getValue()));
+        assignExpressionMap.put("targetField", new StringLiteralExpr(targetMiningField.getName()));
         assignExpressionMap.put("miningFunction",
                 new NameExpr(miningFunction.getClass().getName() + "." + miningFunction.name()));
         assignExpressionMap.put("pmmlMODEL",
@@ -258,17 +258,17 @@
         final Map<String, SerializableFunction<Double, Double>> numericFunctionMap =
                 regressionTable.getNumericFunctionMap();
         for (NumericPredictor numericPredictor : originalRegressionTable.getNumericPredictors()) {
-            assertThat(numericFunctionMap).containsKey(numericPredictor.getName().getValue());
+            assertThat(numericFunctionMap).containsKey(numericPredictor.getField());
         }
         final Map<String, SerializableFunction<String, Double>> categoricalFunctionMap =
                 regressionTable.getCategoricalFunctionMap();
         for (CategoricalPredictor categoricalPredictor : originalRegressionTable.getCategoricalPredictors()) {
-        	assertThat(categoricalFunctionMap).containsKey(categoricalPredictor.getName().getValue());
+        	assertThat(categoricalFunctionMap).containsKey(categoricalPredictor.getField());
         }
         final Map<String, SerializableFunction<Map<String, Object>, Double>> predictorTermsFunctionMap =
                 regressionTable.getPredictorTermsFunctionMap();
         for (PredictorTerm predictorTerm : originalRegressionTable.getPredictorTerms()) {
-        	assertThat(predictorTermsFunctionMap).containsKey(predictorTerm.getName().getValue());
+        	assertThat(predictorTermsFunctionMap).containsKey(predictorTerm.getName());
         }
     }
 }
\ No newline at end of file
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/pom.xml	(date 1680177977049)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-drools</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionTableFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionTableFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionTableFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionTableFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLRegressionTableFactoryTest.java	(date 1680178598922)
@@ -41,7 +41,6 @@
 import org.assertj.core.data.Offset;
 import org.dmg.pmml.DataDictionary;
 import org.dmg.pmml.DataField;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.MiningField;
 import org.dmg.pmml.MiningSchema;
 import org.dmg.pmml.OpType;
@@ -111,7 +110,7 @@
         regressionModel.setModelName(getGeneratedClassName("RegressionModel"));
         String targetField = "targetField";
         DataField dataField = new DataField();
-        dataField.setName(FieldName.create(targetField));
+        dataField.setName(targetField);
         dataField.setOpType(OpType.CATEGORICAL);
         DataDictionary dataDictionary = new DataDictionary();
         dataDictionary.addDataFields(dataField);
@@ -154,7 +153,7 @@
         regressionModel.setModelName(getGeneratedClassName("RegressionModel"));
         String targetField = "targetField";
         DataField dataField = new DataField();
-        dataField.setName(FieldName.create(targetField));
+        dataField.setName(targetField);
         dataField.setOpType(OpType.CATEGORICAL);
         DataDictionary dataDictionary = new DataDictionary();
         dataDictionary.addDataFields(dataField);
@@ -192,7 +191,7 @@
         regressionModel.setModelName(getGeneratedClassName("RegressionModel"));
         String targetField = "targetField";
         DataField dataField = new DataField();
-        dataField.setName(FieldName.create(targetField));
+        dataField.setName(targetField);
         dataField.setOpType(OpType.CATEGORICAL);
         DataDictionary dataDictionary = new DataDictionary();
         dataDictionary.addDataFields(dataField);
@@ -231,7 +230,7 @@
         regressionModel.setModelName(getGeneratedClassName("RegressionModel"));
         String targetField = "targetField";
         DataField dataField = new DataField();
-        dataField.setName(FieldName.create(targetField));
+        dataField.setName(targetField);
         dataField.setOpType(OpType.CATEGORICAL);
         DataDictionary dataDictionary = new DataDictionary();
         dataDictionary.addDataFields(dataField);
@@ -316,7 +315,7 @@
         Map<String, SerializableFunction<String, Double>> retrieved =
                 KiePMMLRegressionTableFactory.getCategoricalPredictorsMap(categoricalPredictors);
         final Map<String, List<CategoricalPredictor>> groupedCollectors = categoricalPredictors.stream()
-                .collect(groupingBy(categoricalPredictor -> categoricalPredictor.getField().getValue()));
+                .collect(groupingBy(categoricalPredictor ->categoricalPredictor.getField()));
         assertThat(retrieved).hasSameSizeAs(groupedCollectors);
         groupedCollectors.keySet().forEach(predictName -> assertThat(retrieved).containsKey(predictName));
     }
@@ -355,7 +354,7 @@
         assertThat(retrieved).hasSameSizeAs(predictorTerms);
         IntStream.range(0, predictorTerms.size()).forEach(index -> {
             PredictorTerm predictorTerm = predictorTerms.get(index);
-            assertThat(retrieved).containsKey(predictorTerm.getName().getValue());
+            assertThat(retrieved).containsKey(predictorTerm.getName());
         });
     }
 
@@ -392,7 +391,7 @@
         regressionModel.setModelName(getGeneratedClassName("RegressionModel"));
         String targetField = "targetField";
         DataField dataField = new DataField();
-        dataField.setName(FieldName.create(targetField));
+        dataField.setName(targetField);
         dataField.setOpType(OpType.CATEGORICAL);
         DataDictionary dataDictionary = new DataDictionary();
         dataDictionary.addDataFields(dataField);
@@ -531,7 +530,7 @@
                         "variableName");
         assertThat(retrieved).hasSize(3);
         final Map<String, List<CategoricalPredictor>> groupedCollectors = categoricalPredictors.stream()
-                .collect(groupingBy(categoricalPredictor -> categoricalPredictor.getField().getValue()));
+                .collect(groupingBy(categoricalPredictor ->categoricalPredictor.getField()));
 
         groupedCollectors.values().forEach(categoricalPredictors12 -> commonEvaluateCategoryPredictors(body,
                 categoricalPredictors12, "variableName"));
@@ -586,7 +585,7 @@
         assertThat(retrieved).hasSameSizeAs(predictorTerms);
         IntStream.range(0, predictorTerms.size()).forEach(index -> {
             PredictorTerm predictorTerm = predictorTerms.get(index);
-            assertThat(retrieved).containsKey(predictorTerm.getName().getValue());
+            assertThat(retrieved).containsKey(predictorTerm.getName());
         });
     }
 
@@ -607,17 +606,17 @@
     private void commonEvaluateRegressionTable(KiePMMLRegressionTable retrieved, RegressionTable source) {
         Map<String, SerializableFunction<Double, Double>> numericFunctionMap = retrieved.getNumericFunctionMap();
         assertThat(numericFunctionMap).hasSameSizeAs(source.getNumericPredictors());
-        source.getNumericPredictors().forEach(numericPredictor -> assertThat(numericFunctionMap).containsKey(numericPredictor.getName().getValue()));
+        source.getNumericPredictors().forEach(numericPredictor -> assertThat(numericFunctionMap).containsKey(numericPredictor.getField()));
         Map<String, SerializableFunction<String, Double>> categoricalFunctionMap =
                 retrieved.getCategoricalFunctionMap();
         Map<String, List<CategoricalPredictor>> groupedCollectors = categoricalPredictors.stream()
-                .collect(groupingBy(categoricalPredictor -> categoricalPredictor.getField().getValue()));
+                .collect(groupingBy(categoricalPredictor ->categoricalPredictor.getField()));
         assertThat(categoricalFunctionMap).hasSameSizeAs(groupedCollectors);
         groupedCollectors.keySet().forEach(categorical -> assertThat(categoricalFunctionMap).containsKey(categorical));
         Map<String, SerializableFunction<Map<String, Object>, Double>> predictorTermsFunctionMap =
                 retrieved.getPredictorTermsFunctionMap();
         assertThat(predictorTermsFunctionMap).hasSameSizeAs(source.getPredictorTerms());
-        source.getPredictorTerms().forEach(predictorTerm -> assertThat(predictorTermsFunctionMap).containsKey(predictorTerm.getName().getValue()));
+        source.getPredictorTerms().forEach(predictorTerm -> assertThat(predictorTermsFunctionMap).containsKey(predictorTerm.getName()));
     }
 
     private void commonEvaluateCategoryPredictors(final BlockStmt toVerify,
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/AbstractKiePMMLRegressionTableRegressionFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/AbstractKiePMMLRegressionTableRegressionFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/AbstractKiePMMLRegressionTableRegressionFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/AbstractKiePMMLRegressionTableRegressionFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/AbstractKiePMMLRegressionTableRegressionFactoryTest.java	(date 1680178598922)
@@ -64,8 +64,7 @@
             IntStream.range(0, 2).forEach(j -> categoricalPredictors.add(getCategoricalPredictor("CatPred-" + i, 27.12, 3.46)));
             numericPredictors.add(getNumericPredictor("NumPred-" + i, 2, 13.11));
             predictorTerms.add(getPredictorTerm("PredTerm-" + i, 32.29,
-                                                Arrays.asList(categoricalPredictors.get(0).getName().getValue(),
-                                                              numericPredictors.get(0).getName().getValue())));
+                                                Arrays.asList(categoricalPredictors.get(0).getField(),numericPredictors.get(0).getField())));
         });
         return PMMLModelTestUtils.getRegressionTable(categoricalPredictors, numericPredictors, predictorTerms, intercept, targetCategory);
     }
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/pom.xml	(date 1680177977063)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-drools</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
   <packaging>pom</packaging>
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLClassificationTableFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLClassificationTableFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLClassificationTableFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLClassificationTableFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/src/test/java/org/kie/pmml/models/regression/compiler/factories/KiePMMLClassificationTableFactoryTest.java	(date 1680178598921)
@@ -28,7 +28,6 @@
 import com.github.javaparser.ast.expr.MethodReferenceExpr;
 import org.dmg.pmml.DataDictionary;
 import org.dmg.pmml.DataField;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.MiningField;
 import org.dmg.pmml.MiningSchema;
 import org.dmg.pmml.OpType;
@@ -88,7 +87,7 @@
 
         String targetField = "targetField";
         DataField dataField = new DataField();
-        dataField.setName(FieldName.create(targetField));
+        dataField.setName(targetField);
         dataField.setOpType(OpType.CATEGORICAL);
         DataDictionary dataDictionary = new DataDictionary();
         dataDictionary.addDataFields(dataField);
@@ -129,7 +128,7 @@
         boolean isBinary = regressionModel.getRegressionTables().size() == 2;
         assertThat(retrieved.isBinary()).isEqualTo(isBinary);
         assertThat(retrieved.isBinary()).isEqualTo(isBinary);
-        assertThat(retrieved.getTargetField()).isEqualTo(targetMiningField.getName().getValue());
+        assertThat(retrieved.getTargetField()).isEqualTo(targetMiningField.getName());
     }
 
     @Test
@@ -142,7 +141,7 @@
 
         String targetField = "targetField";
         DataField dataField = new DataField();
-        dataField.setName(FieldName.create(targetField));
+        dataField.setName(targetField);
         dataField.setOpType(OpType.CATEGORICAL);
         DataDictionary dataDictionary = new DataDictionary();
         dataDictionary.addDataFields(dataField);
@@ -193,7 +192,7 @@
 
         String targetField = "targetField";
         DataField dataField = new DataField();
-        dataField.setName(FieldName.create(targetField));
+        dataField.setName(targetField);
         dataField.setOpType(OpType.CATEGORICAL);
         DataDictionary dataDictionary = new DataDictionary();
         dataDictionary.addDataFields(dataField);
@@ -279,7 +278,7 @@
 
         String targetField = "targetField";
         DataField dataField = new DataField();
-        dataField.setName(FieldName.create(targetField));
+        dataField.setName(targetField);
         dataField.setOpType(OpType.CATEGORICAL);
         DataDictionary dataDictionary = new DataDictionary();
         dataDictionary.addDataFields(dataField);
@@ -371,10 +370,10 @@
 
     private OutputField getOutputField(String name, ResultFeature resultFeature, String targetField) {
         OutputField toReturn = new OutputField();
-        toReturn.setName(FieldName.create(name));
+        toReturn.setName(name);
         toReturn.setResultFeature(resultFeature);
         if (targetField != null) {
-            toReturn.setTargetField(FieldName.create(targetField));
+            toReturn.setTargetField(targetField);
         }
         return toReturn;
     }
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/pom.xml	(date 1680177977056)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-drools</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
   <packaging>pom</packaging>
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/src/test/java/org/kie/pmml/models/clustering/compiler/factories/KiePMMLClusteringModelFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/src/test/java/org/kie/pmml/models/clustering/compiler/factories/KiePMMLClusteringModelFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/src/test/java/org/kie/pmml/models/clustering/compiler/factories/KiePMMLClusteringModelFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/src/test/java/org/kie/pmml/models/clustering/compiler/factories/KiePMMLClusteringModelFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/src/test/java/org/kie/pmml/models/clustering/compiler/factories/KiePMMLClusteringModelFactoryTest.java	(date 1680178598929)
@@ -35,7 +35,6 @@
 import org.dmg.pmml.DataField;
 import org.dmg.pmml.DataType;
 import org.dmg.pmml.Euclidean;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.MiningField;
 import org.dmg.pmml.MiningFunction;
 import org.dmg.pmml.MiningSchema;
@@ -105,7 +104,7 @@
         IntStream.range(0, 3).forEach(i -> {
             ClusteringField clusteringField = getRandomClusteringField();
             clusteringFields.add(clusteringField);
-            fieldNames.add(clusteringField.getField().getValue());
+            fieldNames.add(clusteringField.getField());
             clusters.add(getRandomCluster());
         });
 
@@ -190,7 +189,7 @@
     void getKiePMMLClusteringField() {
         ClusteringField clusteringField = new ClusteringField();
         final Random random = new Random();
-        clusteringField.setField(FieldName.create("TEXT"));
+        clusteringField.setField("TEXT");
         clusteringField.setFieldWeight(random.nextDouble());
         clusteringField.setCenterField(getRandomEnum(ClusteringField.CenterField.values()));
         clusteringField.setCompareFunction(getRandomEnum(CompareFunction.values()));
@@ -253,7 +252,7 @@
 
         String expectedCompareFunction =
                 KiePMMLCompareFunction.class.getCanonicalName() + "." + comparisonMeasure.getCompareFunction().name();
-        String expectedTargetField = targetMiningField.getName().getValue();
+        String expectedTargetField =targetMiningField.getName();
 
         KiePMMLClusteringModelFactory.setStaticGetter(compilationDTO,
                 modelTemplate);
@@ -282,7 +281,7 @@
                                                       ClusteringField clusteringField) {
         assertThat(retrieved).isNotNull();
         boolean isCenterField = clusteringField.getCenterField() == ClusteringField.CenterField.TRUE;
-        assertThat(retrieved.getField()).isEqualTo(clusteringField.getField().getValue());
+        assertThat(retrieved.getField()).isEqualTo(clusteringField.getField());
         assertThat(retrieved.getFieldWeight()).isEqualTo(clusteringField.getFieldWeight());
         assertThat(retrieved.getCenterField()).isEqualTo(isCenterField);
         assertThat(retrieved.getCompareFunction()).isPresent();
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/mocks/TestModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/mocks/TestModel.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/mocks/TestModel.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/mocks/TestModel.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/mocks/TestModel.java	(date 1680178598906)
@@ -122,4 +122,14 @@
     public VisitorAction accept(Visitor visitor) {
         return null;
     }
+
+    @Override
+    public MiningFunction requireMiningFunction() {
+        return null;
+    }
+
+    @Override
+    public MiningSchema requireMiningSchema() {
+        return null;
+    }
 }
Index: kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/src/main/java/org/kie/dmn/ruleset2dmn/SimpleRuleRow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/src/main/java/org/kie/dmn/ruleset2dmn/SimpleRuleRow.java b/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/src/main/java/org/kie/dmn/ruleset2dmn/SimpleRuleRow.java
--- a/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/src/main/java/org/kie/dmn/ruleset2dmn/SimpleRuleRow.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/src/main/java/org/kie/dmn/ruleset2dmn/SimpleRuleRow.java	(date 1680178598932)
@@ -37,7 +37,7 @@
         Predicate rootPredicate = r.getPredicate();
         if (rootPredicate instanceof SimplePredicate) {
             SimplePredicate sp = (SimplePredicate) rootPredicate;
-            map.computeIfAbsent(sp.getField().getValue(), k -> new ArrayList<SimplePredicate>()).add(sp);
+            map.computeIfAbsent(sp.getField(), k -> new ArrayList<SimplePredicate>()).add(sp);
         } else {
             if (!(rootPredicate instanceof CompoundPredicate)) {
                 throw new UnsupportedOperationException("Was expecting a CompoundPredicate, found: "+rootPredicate.getClass());
@@ -48,7 +48,7 @@
             }
             for (Predicate c : cPredicate.getPredicates()) {
                 SimplePredicate sp = (SimplePredicate) c;
-                map.computeIfAbsent(sp.getField().getValue(), k -> new ArrayList<SimplePredicate>()).add(sp);
+                map.computeIfAbsent(sp.getField(), k -> new ArrayList<SimplePredicate>()).add(sp);
             }
         }
     }
Index: drools-compiler/src/main/java/org/drools/compiler/runtime/pipeline/impl/DroolsJaxbHelperProviderImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-compiler/src/main/java/org/drools/compiler/runtime/pipeline/impl/DroolsJaxbHelperProviderImpl.java b/drools-compiler/src/main/java/org/drools/compiler/runtime/pipeline/impl/DroolsJaxbHelperProviderImpl.java
--- a/drools-compiler/src/main/java/org/drools/compiler/runtime/pipeline/impl/DroolsJaxbHelperProviderImpl.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-compiler/src/main/java/org/drools/compiler/runtime/pipeline/impl/DroolsJaxbHelperProviderImpl.java	(date 1680178598880)
@@ -28,8 +28,8 @@
 import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
-import javax.xml.bind.JAXBContext;
-import javax.xml.bind.JAXBException;
+import jakarta.xml.bind.JAXBContext;
+import jakarta.xml.bind.JAXBException;
 
 import com.sun.codemodel.CodeWriter;
 import com.sun.codemodel.JCodeModel;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimpleSetPredicateASTFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimpleSetPredicateASTFactory.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimpleSetPredicateASTFactory.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimpleSetPredicateASTFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimpleSetPredicateASTFactory.java	(date 1680178598923)
@@ -72,11 +72,11 @@
         logger.trace("declareRuleFromSimpleSetPredicate {}", statusToSet);
         String statusConstraint = StringUtils.isEmpty(predicateASTFactoryData.getParentPath()) ? STATUS_NULL : String.format(STATUS_PATTERN, predicateASTFactoryData.getParentPath());
         SimpleSetPredicate simpleSetPredicate = (SimpleSetPredicate) predicateASTFactoryData.getPredicate();
-        String key = predicateASTFactoryData.getFieldTypeMap().get(simpleSetPredicate.getField().getValue()).getGeneratedType();
+        String key = predicateASTFactoryData.getFieldTypeMap().get(simpleSetPredicate.getField()).getGeneratedType();
         String stringValue = (String) simpleSetPredicate.getArray().getValue();
         String[] valuesArray = stringValue.split(" ");
         List<Object> value = Arrays.stream(valuesArray).map(rawValue -> {
-            String originalType = predicateASTFactoryData.getFieldTypeMap().get(simpleSetPredicate.getField().getValue()).getOriginalType();
+            String originalType = predicateASTFactoryData.getFieldTypeMap().get(simpleSetPredicate.getField()).getOriginalType();
             switch (originalType) {
                 case "string":
                     return "\"" + rawValue + "\"";
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimplePredicateASTFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimplePredicateASTFactory.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimplePredicateASTFactory.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimplePredicateASTFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimplePredicateASTFactory.java	(date 1680178598924)
@@ -55,7 +55,7 @@
             final KiePMMLReasonCodeAndValue reasonCodeAndValue,
             final boolean isLastCharacteristic) {
         logger.trace("declareRuleFromSimplePredicateSurrogate {} {} {} {}", agendaActivationGroup, toAccumulate, statusToSet, isLastCharacteristic);
-        String fieldName = predicateASTFactoryData.getFieldTypeMap().get(((SimplePredicate) predicateASTFactoryData.getPredicate()).getField().getValue()).getGeneratedType();
+        String fieldName = predicateASTFactoryData.getFieldTypeMap().get(((SimplePredicate) predicateASTFactoryData.getPredicate()).getField()).getGeneratedType();
         String surrogateCurrentRule = String.format(KiePMMLAbstractModelASTFactory.SURROGATE_RULENAME_PATTERN, predicateASTFactoryData.getCurrentRule(), fieldName);
         final List<KiePMMLFieldOperatorValue> constraints = Collections.singletonList(KiePMMLASTFactoryUtils.getConstraintEntryFromSimplePredicates(fieldName, BOOLEAN_OPERATOR.SURROGATE, Collections.singletonList((SimplePredicate) predicateASTFactoryData.getPredicate()), predicateASTFactoryData.getFieldTypeMap()));
         // Create "TRUE" matcher
@@ -79,7 +79,7 @@
             final Object result,
             boolean isFinalLeaf) {
         logger.trace("declareRuleFromSimplePredicateSurrogate {} {} {}", agendaActivationGroup, result, isFinalLeaf);
-        String fieldName = predicateASTFactoryData.getFieldTypeMap().get(((SimplePredicate) predicateASTFactoryData.getPredicate()).getField().getValue()).getGeneratedType();
+        String fieldName = predicateASTFactoryData.getFieldTypeMap().get(((SimplePredicate) predicateASTFactoryData.getPredicate()).getField()).getGeneratedType();
         String surrogateCurrentRule = String.format(KiePMMLAbstractModelASTFactory.SURROGATE_RULENAME_PATTERN, predicateASTFactoryData.getCurrentRule(), fieldName);
         final List<KiePMMLFieldOperatorValue> constraints = Collections.singletonList(KiePMMLASTFactoryUtils.getConstraintEntryFromSimplePredicates(fieldName, BOOLEAN_OPERATOR.SURROGATE, Collections.singletonList((SimplePredicate) predicateASTFactoryData.getPredicate()), predicateASTFactoryData.getFieldTypeMap()));
         String statusToSet = isFinalLeaf ? DONE : predicateASTFactoryData.getCurrentRule();
@@ -215,7 +215,7 @@
     protected KiePMMLDroolsRule.Builder getBuilderForSimplePredicate(final String statusToSet) {
         logger.trace("getBuilderForSimplePredicate {}", statusToSet);
         String statusConstraint = StringUtils.isEmpty(predicateASTFactoryData.getParentPath()) ? KiePMMLAbstractModelASTFactory.STATUS_NULL : String.format(STATUS_PATTERN, predicateASTFactoryData.getParentPath());
-        String key = predicateASTFactoryData.getFieldTypeMap().get(((SimplePredicate) predicateASTFactoryData.getPredicate()).getField().getValue()).getGeneratedType();
+        String key = predicateASTFactoryData.getFieldTypeMap().get(((SimplePredicate) predicateASTFactoryData.getPredicate()).getField()).getGeneratedType();
         OPERATOR operator = OPERATOR.byName(((SimplePredicate) predicateASTFactoryData.getPredicate()).getOperator().value());
         Object value = KiePMMLASTFactoryUtils.getCorrectlyFormattedObject(((SimplePredicate) predicateASTFactoryData.getPredicate()), predicateASTFactoryData.getFieldTypeMap());
         List<KiePMMLFieldOperatorValue> andConstraints = Collections.singletonList(new KiePMMLFieldOperatorValue(key, BOOLEAN_OPERATOR.AND, Collections.singletonList(new KiePMMLOperatorValue(operator, value)), null));
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDataDictionaryASTFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDataDictionaryASTFactory.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDataDictionaryASTFactory.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDataDictionaryASTFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDataDictionaryASTFactory.java	(date 1680178598923)
@@ -63,8 +63,8 @@
      * @param field
      */
     public KiePMMLDroolsType declareType(Field field) {
-        String generatedType = getGeneratedClassName(field.getName().getValue());
-        String fieldName = field.getName().getValue();
+        String generatedType = getGeneratedClassName(field.getName());
+        String fieldName =field.getName();
         String fieldType = field.getDataType().value();
         fieldTypeMap.put(fieldName, new KiePMMLOriginalTypeGeneratedType(fieldType, generatedType));
         return new KiePMMLDroolsType(generatedType, DATA_TYPE.byName(fieldType).getMappedClass().getSimpleName());
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/pom.xml	(date 1680177976973)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-clustering</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDerivedFieldASTFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDerivedFieldASTFactory.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDerivedFieldASTFactory.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDerivedFieldASTFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDerivedFieldASTFactory.java	(date 1680178598924)
@@ -60,8 +60,8 @@
      * @param derivedField
      */
     public KiePMMLDroolsType declareType(DerivedField derivedField) {
-        String generatedType = getSanitizedClassName(derivedField.getName().getValue().toUpperCase());
-        String fieldName = derivedField.getName().getValue();
+        String generatedType = getSanitizedClassName(derivedField.getName().toUpperCase());
+        String fieldName =derivedField.getName();
         String fieldType = derivedField.getDataType().value();
         fieldTypeMap.put(fieldName, new KiePMMLOriginalTypeGeneratedType(fieldType, generatedType));
         return new KiePMMLDroolsType(generatedType, DATA_TYPE.byName(fieldType).getMappedClass().getSimpleName());
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-model/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-model/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-model/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-model/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-model/pom.xml	(date 1680177976992)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-clustering</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-tests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-tests/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-tests/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-tests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-tests/pom.xml	(date 1680177977024)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-clustering</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-evaluator/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-evaluator/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-evaluator/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-evaluator/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-evaluator/pom.xml	(date 1680177976982)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-clustering</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_3/dmndi/DiagramElement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_3/dmndi/DiagramElement.java b/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_3/dmndi/DiagramElement.java
--- a/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_3/dmndi/DiagramElement.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_3/dmndi/DiagramElement.java	(date 1680178598904)
@@ -19,7 +19,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import javax.xml.bind.JAXBElement;
+import jakarta.xml.bind.JAXBElement;
 
 import org.kie.dmn.model.v1_3.KieDMNModelInstrumentedBase;
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/utils/KiePMMLASTFactoryUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/utils/KiePMMLASTFactoryUtils.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/utils/KiePMMLASTFactoryUtils.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/utils/KiePMMLASTFactoryUtils.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/utils/KiePMMLASTFactoryUtils.java	(date 1680178598923)
@@ -55,7 +55,7 @@
         }
         final Map<String, List<SimplePredicate>> predicatesByField = simplePredicates.stream()
                 .map(child -> (SimplePredicate) child)
-                .collect(groupingBy(child -> fieldTypeMap.get(child.getField().getValue()).getGeneratedType()));
+                .collect(groupingBy(child -> fieldTypeMap.get(child.getField()).getGeneratedType()));
         final List<KiePMMLFieldOperatorValue> toReturn = new LinkedList<>();
         populateKiePMMLFieldOperatorValueListWithSimplePredicates(toReturn, compoundPredicate.getBooleanOperator(), predicatesByField, fieldTypeMap);
         final List<CompoundPredicate> compoundPredicates = compoundPredicate.getPredicates().stream()
@@ -113,7 +113,7 @@
                 .filter(predicate -> predicate instanceof SimplePredicate)
                 .map(predicate -> {
                     SimplePredicate simplePredicate = (SimplePredicate) predicate;
-                    String fieldName = fieldTypeMap.get(simplePredicate.getField().getValue()).getGeneratedType();
+                    String fieldName = fieldTypeMap.get(simplePredicate.getField()).getGeneratedType();
                     OPERATOR operator = OPERATOR.byName(simplePredicate.getOperator().value());
                     Object value = getCorrectlyFormattedObject(simplePredicate, fieldTypeMap);
                     return new KiePMMLFieldOperatorValue(fieldName, null, Collections.singletonList(new KiePMMLOperatorValue(operator, value)), null);
@@ -121,7 +121,7 @@
     }
 
     public static Object getCorrectlyFormattedObject(final SimplePredicate simplePredicate, final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap) {
-        DATA_TYPE dataType = DATA_TYPE.byName(fieldTypeMap.get(simplePredicate.getField().getValue()).getOriginalType());
+        DATA_TYPE dataType = DATA_TYPE.byName(fieldTypeMap.get(simplePredicate.getField()).getOriginalType());
         return getCorrectlyFormattedResult(simplePredicate.getValue(), dataType);
     }
 
Index: kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_3/dmndi/DMNDiagram.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_3/dmndi/DMNDiagram.java b/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_3/dmndi/DMNDiagram.java
--- a/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_3/dmndi/DMNDiagram.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_3/dmndi/DMNDiagram.java	(date 1680178598904)
@@ -19,7 +19,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import javax.xml.bind.JAXBElement;
+import jakarta.xml.bind.JAXBElement;
 
 public class DMNDiagram extends Diagram implements org.kie.dmn.model.api.dmndi.DMNDiagram {
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/pom.xml	(date 1680177976785)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
   <packaging>pom</packaging>
Index: kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/pmml/PMMLInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/pmml/PMMLInfo.java b/kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/pmml/PMMLInfo.java
--- a/kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/pmml/PMMLInfo.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/pmml/PMMLInfo.java	(date 1680178598922)
@@ -24,7 +24,7 @@
 import java.util.List;
 import java.util.Map;
 
-import javax.xml.bind.JAXBException;
+import jakarta.xml.bind.JAXBException;
 
 import org.dmg.pmml.Extension;
 import org.dmg.pmml.Header;
@@ -73,15 +73,15 @@
         miningSchema.getMiningFields()
                     .stream()
                     .filter(mf -> mf.getUsageType() == UsageType.ACTIVE)
-                    .forEach(fn -> inputFields.add(fn.getName().getValue()));
+                    .forEach(fn -> inputFields.add(fn.getName()));
         Collection<String> targetFields = new ArrayList<>();
         miningSchema.getMiningFields()
                     .stream()
                     .filter(mf -> mf.getUsageType() == UsageType.PREDICTED)
-                    .forEach(fn -> targetFields.add(fn.getName().getValue()));
+                    .forEach(fn -> targetFields.add(fn.getName()));
         Collection<String> outputFields = new ArrayList<>();
         if (pm.getOutput() != null && pm.getOutput().getOutputFields() != null) {
-            pm.getOutput().getOutputFields().forEach(of -> outputFields.add(of.getName().getValue()));
+            pm.getOutput().getOutputFields().forEach(of -> outputFields.add(of.getName()));
         }
         return new PMMLModelInfo(pm.getModelName(), pm.getClass().getSimpleName(), inputFields, targetFields, outputFields);
     }
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/pom.xml	(date 1680177976771)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/pom.xml	(date 1680177976778)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
   <packaging>pom</packaging>
Index: kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/pmml/DMNImportPMMLInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/pmml/DMNImportPMMLInfo.java b/kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/pmml/DMNImportPMMLInfo.java
--- a/kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/pmml/DMNImportPMMLInfo.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/pmml/DMNImportPMMLInfo.java	(date 1680178598922)
@@ -62,7 +62,7 @@
             final PMML pmml = org.jpmml.model.PMMLUtil.unmarshal(is);
             PMMLHeaderInfo h = PMMLInfo.pmmlToHeaderInfo(pmml, pmml.getHeader());
             for (DataField df : pmml.getDataDictionary().getDataFields()) {
-                String dfName = df.getName().getValue();
+                String dfName =df.getName();
                 BuiltInType ft = getBuiltInTypeByDataType(df.getDataType());
                 List<FEELProfile> helperFEELProfiles = cc.getFeelProfiles();
                 DMNFEELHelper feel = new DMNFEELHelper(cc.getRootClassLoader(), helperFEELProfiles);
@@ -118,7 +118,7 @@
                 // register <import name>.<pmml MODEL name>, being a composite type of the different model outputs fields
                 Map<String, DMNType> typeMap = new HashMap<>();
                 outputFields.stream().forEach(field -> {
-                    String fieldName = field.getName().getValue();
+                    String fieldName =field.getName();
                     BuiltInType ft = getBuiltInTypeByDataType(field.getDataType());
                     DMNType type = new SimpleTypeImpl(i.getNamespace(), fieldName, null, false, null, dmnModel.getTypeRegistry().resolveType(dmnModel.getDefinitions().getURIFEEL(), ft.getName()), ft);
                     typeMap.put(fieldName, type);
Index: drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/main/java/org/drools/quarkus/ruleunit/test/TestableResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/main/java/org/drools/quarkus/ruleunit/test/TestableResource.java b/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/main/java/org/drools/quarkus/ruleunit/test/TestableResource.java
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/main/java/org/drools/quarkus/ruleunit/test/TestableResource.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/main/java/org/drools/quarkus/ruleunit/test/TestableResource.java	(date 1680178598934)
@@ -17,10 +17,10 @@
 
 import static org.assertj.core.api.Assertions.assertThat;
 
-import javax.inject.Inject;
-import javax.ws.rs.GET;
-import javax.ws.rs.Path;
-import javax.ws.rs.core.Response;
+import jakarta.inject.Inject;
+import jakarta.ws.rs.GET;
+import jakarta.ws.rs.Path;
+import jakarta.ws.rs.core.Response;
 
 import org.drools.ruleunits.api.RuleUnit;
 import org.drools.ruleunits.api.RuleUnitInstance;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/pom.xml	(date 1680177976816)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
   <packaging>pom</packaging>
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/pom.xml	(date 1680177976750)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
   <packaging>pom</packaging>
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLCompoundPredicateASTFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLCompoundPredicateASTFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLCompoundPredicateASTFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLCompoundPredicateASTFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLCompoundPredicateASTFactoryTest.java	(date 1680178598926)
@@ -170,7 +170,7 @@
                         .findFirst();
                 if (fieldName.isPresent()) {
                     SimplePredicate mappedPredicate = predicates.stream()
-                            .filter(pred -> fieldName.get().equals(pred.getField().getValue()))
+                            .filter(pred -> fieldName.get().equals(pred.getField()))
                             .findFirst()
                             .orElse(null);
                     assertThat(mappedPredicate).isNotNull();
@@ -235,7 +235,7 @@
                         .findFirst();
                 if (fieldName.isPresent()) {
                     SimplePredicate mappedPredicate = predicates.stream()
-                            .filter(pred -> fieldName.get().equals(pred.getField().getValue())).findFirst().orElse(null);
+                            .filter(pred -> fieldName.get().equals(pred.getField())).findFirst().orElse(null);
                     assertThat(mappedPredicate).isNotNull();
                     assertThat(retrieved.getStatusConstraint()).isNull();
                     assertThat(retrieved.getActivationGroup()).isEqualTo(agendaActivationGroup);
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDerivedFieldASTFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDerivedFieldASTFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDerivedFieldASTFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDerivedFieldASTFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDerivedFieldASTFactoryTest.java	(date 1680178598926)
@@ -25,7 +25,6 @@
 
 import org.dmg.pmml.DataType;
 import org.dmg.pmml.DerivedField;
-import org.dmg.pmml.FieldName;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 import org.kie.pmml.api.enums.DATA_TYPE;
@@ -67,7 +66,7 @@
     }
 
     private void commonValidateKiePMMLDroolsType(KiePMMLDroolsType toValidate, DerivedField derivedField) {
-        String derivedFieldName = derivedField.getName().getValue();
+        String derivedFieldName =derivedField.getName();
         String expectedName = getSanitizedClassName(derivedFieldName.toUpperCase());
         assertThat(toValidate.getName()).isEqualTo(expectedName);
         String expectedType = DATA_TYPE.byName(derivedField.getDataType().value()).getMappedClass().getSimpleName();
@@ -80,7 +79,7 @@
 
     private DerivedField getDerivedField(String fieldName) {
         DerivedField toReturn = new DerivedField();
-        toReturn.setName(FieldName.create(fieldName));
+        toReturn.setName(fieldName);
         final DATA_TYPE[] values = DATA_TYPE.values();
         int rndInt = new Random().nextInt(values.length - 1);
         DATA_TYPE dataType = values[rndInt];
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDataDictionaryASTFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDataDictionaryASTFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDataDictionaryASTFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDataDictionaryASTFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLDataDictionaryASTFactoryTest.java	(date 1680178598927)
@@ -40,7 +40,7 @@
     @Test
     void declareTypes() {
         List<DataField> dataFields = Arrays.asList(getTypeDataField(), getDottedTypeDataField(), getTypeDataField(), getDottedTypeDataField());
-        DataDictionary dataDictionary = new DataDictionary(dataFields);
+        DataDictionary dataDictionary = new DataDictionary().addDataFields(dataFields.toArray(new org.dmg.pmml.DataField[0]));
         final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap = new HashMap<>();
         List<KiePMMLDroolsType> retrieved = KiePMMLDataDictionaryASTFactory.factory(fieldTypeMap).declareTypes(getFieldsFromDataDictionary(dataDictionary));
         assertThat(retrieved).isNotNull();
@@ -58,12 +58,12 @@
     }
 
     private void commonVerifyTypeDeclarationDescr(DataField dataField, Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final KiePMMLDroolsType kiePMMLDroolsType) {
-        String expectedGeneratedType = getSanitizedClassName(dataField.getName().getValue());
+        String expectedGeneratedType = getSanitizedClassName(dataField.getName());
         String expectedMappedOriginalType = DATA_TYPE.byName(dataField.getDataType().value()).getMappedClass().getSimpleName();
         assertThat(kiePMMLDroolsType.getName()).startsWith(expectedGeneratedType);
         assertThat(kiePMMLDroolsType.getType()).isEqualTo(expectedMappedOriginalType);
-        assertThat(fieldTypeMap).containsKey(dataField.getName().getValue());
-        KiePMMLOriginalTypeGeneratedType kiePMMLOriginalTypeGeneratedType = fieldTypeMap.get(dataField.getName().getValue());
+        assertThat(fieldTypeMap).containsKey(dataField.getName());
+        KiePMMLOriginalTypeGeneratedType kiePMMLOriginalTypeGeneratedType = fieldTypeMap.get(dataField.getName());
         assertThat(kiePMMLOriginalTypeGeneratedType.getOriginalType()).isEqualTo(dataField.getDataType().value());
         assertThat(kiePMMLOriginalTypeGeneratedType.getGeneratedType()).startsWith(expectedGeneratedType);
     }
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimplePredicateASTFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimplePredicateASTFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimplePredicateASTFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimplePredicateASTFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/ast/factories/KiePMMLSimplePredicateASTFactoryTest.java	(date 1680178598926)
@@ -65,7 +65,7 @@
         assertThat(retrieved).isNotNull();
         String baseExpectedRule = String.format(KiePMMLAbstractModelASTFactory.SURROGATE_RULENAME_PATTERN,
                 currentRule,
-                fieldTypeMap.get(simplePredicate.getField().getValue()).getGeneratedType());
+                fieldTypeMap.get(simplePredicate.getField()).getGeneratedType());
         String expectedRule = baseExpectedRule + "_TRUE";
         assertThat(retrieved.getName()).isEqualTo(expectedRule);
         assertThat(retrieved.getStatusToSet()).isEqualTo(DONE);
@@ -133,7 +133,7 @@
         assertThat(retrieved).isNotNull();
         String baseExpectedRule = String.format(KiePMMLAbstractModelASTFactory.SURROGATE_RULENAME_PATTERN,
                 currentRule,
-                fieldTypeMap.get(simplePredicate.getField().getValue()).getGeneratedType());
+                fieldTypeMap.get(simplePredicate.getField()).getGeneratedType());
         String expectedRule = baseExpectedRule + "_TRUE";
         assertThat(retrieved.getName()).isEqualTo(expectedRule);
         assertThat(retrieved.getStatusToSet()).isEqualTo(currentRule);
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/pom.xml	(date 1680177976792)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
   <packaging>pom</packaging>
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLDroolsModelFactoryUtilsTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLDroolsModelFactoryUtilsTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLDroolsModelFactoryUtilsTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLDroolsModelFactoryUtilsTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLDroolsModelFactoryUtilsTest.java	(date 1680178598925)
@@ -42,7 +42,6 @@
 import org.dmg.pmml.DataDictionary;
 import org.dmg.pmml.DataField;
 import org.dmg.pmml.DataType;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.MiningField;
 import org.dmg.pmml.MiningFunction;
 import org.dmg.pmml.MiningSchema;
@@ -84,7 +83,7 @@
     void getKiePMMLModelCompilationUnit() {
         DataDictionary dataDictionary = new DataDictionary();
         String targetFieldString = "target.field";
-        FieldName targetFieldName = FieldName.create(targetFieldString);
+         String targetFieldName =targetFieldString;
         dataDictionary.addDataFields(new DataField(targetFieldName, OpType.CONTINUOUS, DataType.DOUBLE));
         String modelName = "ModelName";
         TreeModel model = new TreeModel();
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLASTFactoryUtilsTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLASTFactoryUtilsTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLASTFactoryUtilsTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLASTFactoryUtilsTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLASTFactoryUtilsTest.java	(date 1680178598925)
@@ -195,7 +195,7 @@
                             kiePMMLFieldOperatorValue.getKiePMMLOperatorValues().get(0);
                     SimplePredicate simplePredicate = nestedPredicates.stream()
                             .map(predicate -> (SimplePredicate) predicate)
-                            .filter(predicate -> predicate.getField().getValue().equals(getOriginalPredicateName(kiePMMLFieldOperatorValue.getName())))
+                            .filter(predicate -> predicate.getField().equals(getOriginalPredicateName(kiePMMLFieldOperatorValue.getName())))
                             .findFirst()
                             .orElseThrow(() -> new RuntimeException("Failed to find SimplePredicate for " + kiePMMLFieldOperatorValue.getName()));
                     commonVerifyKiePMMLOperatorValue(kiePMMLOperatorValue, simplePredicate);
@@ -208,7 +208,7 @@
 
     private void commonPopulateKiePMMLFieldOperatorValueListWithSimplePredicates(CompoundPredicate.BooleanOperator compoundBooleanOperator, BOOLEAN_OPERATOR booleanOperator) {
         final Map<String, List<SimplePredicate>> predicatesByField = simplePredicates.stream()
-                .collect(groupingBy(child -> fieldTypeMap.get(child.getField().getValue()).getGeneratedType()));
+                .collect(groupingBy(child -> fieldTypeMap.get(child.getField()).getGeneratedType()));
         final List<KiePMMLFieldOperatorValue> toPopulate = new ArrayList<>();
         KiePMMLASTFactoryUtils.populateKiePMMLFieldOperatorValueListWithSimplePredicates(toPopulate,
                                                                                          compoundBooleanOperator,
@@ -258,7 +258,7 @@
     private SimplePredicate getSimplePredicate(String generatedType) {
         String predicateName = getOriginalPredicateName(generatedType);
         return simplePredicates.stream()
-                .filter(simplePredicate -> simplePredicate.getField().getValue().equals(predicateName))
+                .filter(simplePredicate -> simplePredicate.getField().equals(predicateName))
                 .findFirst()
                 .orElseThrow(() -> new RuntimeException("Failed to find SimplePredicate for " + predicateName));
     }
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLASTTestUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLASTTestUtils.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLASTTestUtils.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLASTTestUtils.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/utils/KiePMMLASTTestUtils.java	(date 1680178598925)
@@ -22,7 +22,6 @@
 import org.dmg.pmml.DataDictionary;
 import org.dmg.pmml.DataField;
 import org.dmg.pmml.DataType;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.LocalTransformations;
 import org.dmg.pmml.OpType;
 import org.dmg.pmml.OutputField;
@@ -67,7 +66,7 @@
         DataField toReturn = new DataField();
         toReturn.setOpType(OpType.CONTINUOUS);
         toReturn.setDataType(DataType.DATE);
-        toReturn.setName(FieldName.create("dataField"));
+        toReturn.setName("dataField");
         return toReturn;
     }
 
@@ -75,7 +74,7 @@
         DataField toReturn = new DataField();
         toReturn.setOpType(OpType.CONTINUOUS);
         toReturn.setDataType(DataType.BOOLEAN);
-        toReturn.setName(FieldName.create("dotted.field"));
+        toReturn.setName("dotted.field");
         return toReturn;
     }
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-compiler/src/test/java/org/kie/pmml/models/scorecard/compiler/factories/KiePMMLComplexPartialScoreFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-compiler/src/test/java/org/kie/pmml/models/scorecard/compiler/factories/KiePMMLComplexPartialScoreFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-compiler/src/test/java/org/kie/pmml/models/scorecard/compiler/factories/KiePMMLComplexPartialScoreFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-compiler/src/test/java/org/kie/pmml/models/scorecard/compiler/factories/KiePMMLComplexPartialScoreFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-compiler/src/test/java/org/kie/pmml/models/scorecard/compiler/factories/KiePMMLComplexPartialScoreFactoryTest.java	(date 1680178598927)
@@ -24,7 +24,6 @@
 import com.github.javaparser.ast.stmt.Statement;
 import org.dmg.pmml.Apply;
 import org.dmg.pmml.Constant;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.FieldRef;
 import org.dmg.pmml.scorecard.ComplexPartialScore;
 import org.junit.jupiter.api.Test;
@@ -69,14 +68,14 @@
     void getComplexPartialScoreVariableDeclarationWithFieldRef() throws IOException {
         final String variableName = "variableName";
         FieldRef fieldRef = new FieldRef();
-        fieldRef.setField(FieldName.create("FIELD_REF"));
+        fieldRef.setField("FIELD_REF");
         ComplexPartialScore complexPartialScore = new ComplexPartialScore();
         complexPartialScore.setExpression(fieldRef);
         BlockStmt retrieved =
                 KiePMMLComplexPartialScoreFactory.getComplexPartialScoreVariableDeclaration(variableName,
                         complexPartialScore);
         String text = getFileContent(TEST_02_SOURCE);
-        Statement expected = JavaParserUtils.parseBlock(String.format(text, fieldRef.getField().getValue(),
+        Statement expected = JavaParserUtils.parseBlock(String.format(text,fieldRef.getField(),
                 variableName));
         assertThat(retrieved).isEqualTo(expected);
         List<Class<?>> imports = Arrays.asList(KiePMMLFieldRef.class,
@@ -91,7 +90,7 @@
         Constant constant = new Constant();
         constant.setValue(value1);
         FieldRef fieldRef = new FieldRef();
-        fieldRef.setField(FieldName.create("FIELD_REF"));
+        fieldRef.setField("FIELD_REF");
         Apply apply = new Apply();
         apply.setFunction("/");
         apply.addExpressions(constant, fieldRef);
@@ -102,8 +101,7 @@
                         complexPartialScore);
         String text = getFileContent(TEST_03_SOURCE);
         Statement expected = JavaParserUtils.parseBlock(String.format(text,
-                constant.getValue(),
-                fieldRef.getField().getValue(),
+                constant.getValue(),fieldRef.getField(),
                 apply.getFunction(),
                 apply.getInvalidValueTreatment().value(),
                 variableName));
Index: drools-test-coverage/test-compiler-integration/src/test/java/org/drools/mvel/integrationtests/QueryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/test-compiler-integration/src/test/java/org/drools/mvel/integrationtests/QueryTest.java b/drools-test-coverage/test-compiler-integration/src/test/java/org/drools/mvel/integrationtests/QueryTest.java
--- a/drools-test-coverage/test-compiler-integration/src/test/java/org/drools/mvel/integrationtests/QueryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/test-compiler-integration/src/test/java/org/drools/mvel/integrationtests/QueryTest.java	(date 1680178598903)
@@ -29,7 +29,7 @@
 import java.util.TreeSet;
 import java.util.stream.Collectors;
 import java.util.stream.StreamSupport;
-import javax.xml.bind.JAXBContext;
+import jakarta.xml.bind.JAXBContext;
 
 import org.drools.core.QueryResultsImpl;
 import org.drools.core.base.ClassObjectType;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/commons/factories/KiePMMLDescrRhsFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/commons/factories/KiePMMLDescrRhsFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/commons/factories/KiePMMLDescrRhsFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/commons/factories/KiePMMLDescrRhsFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/commons/factories/KiePMMLDescrRhsFactoryTest.java	(date 1680178598924)
@@ -20,7 +20,6 @@
 import java.util.List;
 import java.util.StringJoiner;
 
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.OutputField;
 import org.dmg.pmml.ResultFeature;
 import org.drools.drl.ast.dsl.DescrFactory;
@@ -164,7 +163,7 @@
         String outputFieldName = "OUTPUTFIELDNAME";
         Object result = "RESULT";
         OutputField outputField = new OutputField();
-        outputField.setName(FieldName.create(outputFieldName));
+        outputField.setName(outputFieldName);
         outputField.setResultFeature(ResultFeature.PREDICTED_VALUE);
         List<OutputField> outputFields = Collections.singletonList(outputField);
         KiePMMLDroolsRule.Builder builder = KiePMMLDroolsRule.builder(ruleName, statusToSet, outputFields);
@@ -209,7 +208,7 @@
         String outputFieldName = "OUTPUTFIELDNAME";
         Object result = "RESULT";
         OutputField outputField = new OutputField();
-        outputField.setName(FieldName.create(outputFieldName));
+        outputField.setName(outputFieldName);
         outputField.setResultFeature(ResultFeature.PREDICTED_VALUE);
         List<OutputField> outputFields = Collections.singletonList(outputField);
         StringJoiner joiner = new StringJoiner("");
Index: drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/src/main/java/org/drools/quarkus/test/TestableResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/src/main/java/org/drools/quarkus/test/TestableResource.java b/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/src/main/java/org/drools/quarkus/test/TestableResource.java
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/src/main/java/org/drools/quarkus/test/TestableResource.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/src/main/java/org/drools/quarkus/test/TestableResource.java	(date 1680178598933)
@@ -22,10 +22,10 @@
 import java.util.concurrent.TimeUnit;
 import java.util.stream.Collectors;
 
-import javax.inject.Inject;
-import javax.ws.rs.GET;
-import javax.ws.rs.Path;
-import javax.ws.rs.core.Response;
+import jakarta.inject.Inject;
+import jakarta.ws.rs.GET;
+import jakarta.ws.rs.Path;
+import jakarta.ws.rs.core.Response;
 
 import org.kie.api.KieBase;
 import org.kie.api.definition.KiePackage;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/provider/DroolsModelProviderTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/provider/DroolsModelProviderTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/provider/DroolsModelProviderTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/provider/DroolsModelProviderTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/provider/DroolsModelProviderTest.java	(date 1680178598925)
@@ -181,7 +181,7 @@
     private void commonVerifyTypesList(Field<?> toVerify, final List<KiePMMLDroolsType> types) {
         assertThat(types.stream()
                            .anyMatch(type -> {
-                               String expectedName = getSanitizedClassName(toVerify.getName().getValue());
+                               String expectedName = getSanitizedClassName(toVerify.getName());
                                if (!type.getName().startsWith(expectedName)) {
                                    return false;
                                }
@@ -206,13 +206,13 @@
                                           final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap) {
         assertThat(fieldTypeMap.entrySet().stream()
                            .anyMatch(entry -> {
-                               if (!entry.getKey().equals(toVerify.getName().getValue())) {
+                               if (!entry.getKey().equals(toVerify.getName())) {
                                    return false;
                                }
                                KiePMMLOriginalTypeGeneratedType value = entry.getValue();
                                assertThat(value.getOriginalType()).isEqualTo(toVerify.getDataType().value());
                                String expectedGeneratedType =
-                                       getSanitizedClassName(toVerify.getName().getValue());
+                                       getSanitizedClassName(toVerify.getName());
                                assertThat(value.getGeneratedType()).startsWith(expectedGeneratedType);
                                return true;
                            })).isTrue();
Index: drools-wiring/drools-wiring-static/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-wiring/drools-wiring-static/pom.xml b/drools-wiring/drools-wiring-static/pom.xml
--- a/drools-wiring/drools-wiring-static/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-wiring/drools-wiring-static/pom.xml	(date 1680177975440)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-wiring</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <groupId>org.drools</groupId>
Index: drools-wiring/drools-wiring-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-wiring/drools-wiring-api/pom.xml b/drools-wiring/drools-wiring-api/pom.xml
--- a/drools-wiring/drools-wiring-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-wiring/drools-wiring-api/pom.xml	(date 1680177975407)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.drools</groupId>
         <artifactId>drools-wiring</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <groupId>org.drools</groupId>
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tests/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tests/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tests/pom.xml	(date 1680177976809)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>kie-pmml-models</artifactId>
     <groupId>org.kie</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-wiring/drools-wiring-dynamic/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-wiring/drools-wiring-dynamic/pom.xml b/drools-wiring/drools-wiring-dynamic/pom.xml
--- a/drools-wiring/drools-wiring-dynamic/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-wiring/drools-wiring-dynamic/pom.xml	(date 1680178598875)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-wiring</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <groupId>org.drools</groupId>
@@ -31,11 +31,6 @@
     <dependency>
       <groupId>com.sun.xml.bind</groupId>
       <artifactId>jaxb-core</artifactId>
-      <scope>provided</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.sun.xml.bind</groupId>
-      <artifactId>jaxb-impl</artifactId>
       <scope>provided</scope>
     </dependency>
     <dependency>
Index: drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/test/java/org/drools/quarkus/ruleunit/test/RuntimeTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/test/java/org/drools/quarkus/ruleunit/test/RuntimeTest.java b/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/test/java/org/drools/quarkus/ruleunit/test/RuntimeTest.java
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/test/java/org/drools/quarkus/ruleunit/test/RuntimeTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/test/java/org/drools/quarkus/ruleunit/test/RuntimeTest.java	(date 1680178598934)
@@ -20,7 +20,7 @@
 import org.drools.ruleunits.api.RuleUnitInstance;
 import org.junit.jupiter.api.Test;
 
-import javax.inject.Inject;
+import jakarta.inject.Inject;
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
 
Index: build-parent/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build-parent/pom.xml b/build-parent/pom.xml
--- a/build-parent/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/build-parent/pom.xml	(date 1680178602121)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>drools-parent</artifactId>
     <groupId>org.kie</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
@@ -54,9 +54,9 @@
     <version.com.thoughtworks.xstream>1.4.20</version.com.thoughtworks.xstream>
     <version.guru.nidi>0.18.0</version.guru.nidi>
     <version.info.picocli>4.7.1</version.info.picocli>
-    <version.io.micrometer>1.10.2</version.io.micrometer>
-    <version.io.quarkus>2.16.5.Final</version.io.quarkus>
-    <version.io.smallrye.openapi.core>3.1.1</version.io.smallrye.openapi.core>
+    <version.io.micrometer>1.10.4</version.io.micrometer>
+    <version.io.quarkus>3.0.0.Alpha5</version.io.quarkus>
+    <version.io.smallrye.openapi.core>3.2.0</version.io.smallrye.openapi.core>
     <version.it.unimi.dsi.fastutil>8.5.11</version.it.unimi.dsi.fastutil>
     <version.junit>4.13.1</version.junit>
     <version.net.java.dev.glazedlists>1.8.0</version.net.java.dev.glazedlists>
@@ -69,12 +69,12 @@
     <version.org.apache.httpcomponents.httpcore>4.4.15</version.org.apache.httpcomponents.httpcore>
     <version.org.apache.maven>3.8.6</version.org.apache.maven>
     <version.org.apache.maven.resolver>1.7.3</version.org.apache.maven.resolver>
-    <version.org.apache.maven.wagon>3.5.1</version.org.apache.maven.wagon>
+    <version.org.apache.maven.wagon>3.5.3</version.org.apache.maven.wagon>
     <version.org.apache.poi>5.1.0</version.org.apache.poi>
-    <version.org.apache.tomcat.tomcat-dbcp>9.0.21</version.org.apache.tomcat.tomcat-dbcp>
+    <version.org.apache.tomcat.tomcat-dbcp>10.1.2</version.org.apache.tomcat.tomcat-dbcp>
     <version.org.assertj>3.23.1</version.org.assertj>
     <version.org.eclipse.jdt>3.18.0</version.org.eclipse.jdt>
-    <version.org.glassfish.jaxb>2.3.6</version.org.glassfish.jaxb>
+    <version.org.glassfish.jaxb>3.0.2</version.org.glassfish.jaxb>
     <!--This needs to be in sync with JUnit-->
     <version.org.hamcrest>1.3</version.org.hamcrest>
     <version.org.hibernate>5.6.12.Final</version.org.hibernate>
@@ -83,23 +83,23 @@
     <version.org.jboss.narayana.tomcat>5.13.1.Final</version.org.jboss.narayana.tomcat>
     <version.org.jboss.transaction.spi>7.6.1.Final</version.org.jboss.transaction.spi>
     <version.org.jboss.weld.weld>3.1.6.Final</version.org.jboss.weld.weld>
-    <version.jakarta.enterprise.cdi-api>2.0.2</version.jakarta.enterprise.cdi-api>
-    <version.jakarta.activation>1.2.1</version.jakarta.activation>
-    <version.jakarta.activation-api>1.2.1</version.jakarta.activation-api>
-    <version.jakarta.inject-api>1.0</version.jakarta.inject-api>
-    <version.jakarta.annotation-api>1.3.5</version.jakarta.annotation-api>
+    <version.jakarta.enterprise.cdi-api>4.0.1</version.jakarta.enterprise.cdi-api>
+    <version.jakarta.activation>2.0.1</version.jakarta.activation>
+    <version.jakarta.activation-api>2.1.1</version.jakarta.activation-api>
+    <version.jakarta.inject-api>2.0.1</version.jakarta.inject-api>
+    <version.jakarta.annotation-api>2.1.1</version.jakarta.annotation-api>
     <version.jakarta.ejb-api>3.2.6</version.jakarta.ejb-api>
     <version.jakarta.servlet.jsp-api>2.3.6</version.jakarta.servlet.jsp-api>
     <version.jakarta.servlet.jsp.jstl-api>2.0.0</version.jakarta.servlet.jsp.jstl-api>
-    <version.jakarta.transaction-api>1.3.3</version.jakarta.transaction-api>
-    <version.jakarta.ws.rs-api>2.1.6</version.jakarta.ws.rs-api>
-    <version.jakarta.xml.ws-api>2.3.3</version.jakarta.xml.ws-api>
-    <version.jakarta.persistence-api>2.2.3</version.jakarta.persistence-api>
-    <version.jakarta.servlet-api>4.0.3</version.jakarta.servlet-api>
-    <version.jakarta.xml.bind-api>2.3.3</version.jakarta.xml.bind-api>
-    <version.jakarta.json.bind-api>1.0.2</version.jakarta.json.bind-api>
-    <version.jakarta.json-api>1.1.6</version.jakarta.json-api>
-    <version.org.jpmml.model>1.5.1</version.org.jpmml.model> <!-- jpmml-model BSD 3C license - ATTENTION 1.5.1 intentional, because 1.5.1 evaluators works with 1.5.1 -->
+    <version.jakarta.transaction-api>2.0.1</version.jakarta.transaction-api>
+    <version.jakarta.ws.rs-api>3.1.0</version.jakarta.ws.rs-api>
+    <version.jakarta.xml.ws-api>3.0.1</version.jakarta.xml.ws-api>
+    <version.jakarta.persistence-api>3.1.0</version.jakarta.persistence-api>
+    <version.jakarta.servlet-api>6.0.0</version.jakarta.servlet-api>
+    <version.jakarta.xml.bind-api>4.0.0</version.jakarta.xml.bind-api>
+    <version.jakarta.json.bind-api>3.0.0</version.jakarta.json.bind-api>
+    <version.jakarta.json-api>2.1.1</version.jakarta.json-api>
+    <version.org.jpmml.model>1.6.4</version.org.jpmml.model> <!-- jpmml-model BSD 3C license - ATTENTION 1.5.1 intentional, because 1.5.1 evaluators works with 1.5.1 -->
     <version.org.junit>5.9.2</version.org.junit>
     <version.org.mvel>2.4.15.Final</version.org.mvel>
     <version.org.powermock>2.0.7</version.org.powermock>
@@ -128,7 +128,7 @@
     <version.org.asciidoctor.asciidoctorj>2.2.0</version.org.asciidoctor.asciidoctorj>
     <version.org.asciidoctor.asciidoctorj-pdf>1.5.0</version.org.asciidoctor.asciidoctorj-pdf>
     <version.org.w3c.dom>2.3.0-jaxb-1.0.6</version.org.w3c.dom>
-    <version.org.mockito>4.11.0</version.org.mockito>
+    <version.org.mockito>5.1.1</version.org.mockito>
     <!-- Version of JMH -->
     <version.org.openjdk.jmh>1.21</version.org.openjdk.jmh>
 
@@ -183,9 +183,9 @@
     <version.ch.obermuhlner>2.0.1</version.ch.obermuhlner>
     <version.io.smallrye.jandex>3.0.5</version.io.smallrye.jandex>
     <version.io.smallrye.jandex-maven-plugin>${version.io.smallrye.jandex}</version.io.smallrye.jandex-maven-plugin>
-    <version.org.eclipse.yasson>1.0.11</version.org.eclipse.yasson>
+    <version.org.eclipse.yasson>3.0.2</version.org.eclipse.yasson>
 
-    <version.com.github.javaparser>3.24.2</version.com.github.javaparser>
+    <version.com.github.javaparser>3.25.1</version.com.github.javaparser>
 
     <!-- JaCoCo coverage data file location -->
     <!--suppress UnresolvedMavenProperty -->
@@ -1022,18 +1022,8 @@
 
       <dependency>
         <groupId>org.jboss.narayana.jta</groupId>
-        <artifactId>narayana-jta</artifactId>
+        <artifactId>narayana-jta-jakarta</artifactId>
         <version>${version.org.jboss.narayana.tomcat}</version>
-        <exclusions>
-          <exclusion>
-            <groupId>org.jboss.spec.javax.resource</groupId>
-            <artifactId>jboss-connector-api_1.7_spec</artifactId>
-          </exclusion>
-          <exclusion>
-            <groupId>org.jboss</groupId>
-            <artifactId>jboss-transaction-spi</artifactId>
-          </exclusion>
-        </exclusions>
       </dependency>
       <dependency>
         <groupId>org.jboss</groupId>
@@ -1072,7 +1062,7 @@
 
       <dependency>
         <groupId>org.hibernate</groupId>
-        <artifactId>hibernate-core</artifactId>
+        <artifactId>hibernate-core-jakarta</artifactId>
         <version>${version.org.hibernate}</version>
         <exclusions>
           <exclusion>
Index: bom/drools-bom/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bom/drools-bom/pom.xml b/bom/drools-bom/pom.xml
--- a/bom/drools-bom/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/bom/drools-bom/pom.xml	(date 1680177972819)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-core-bom</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../kie-core-bom/pom.xml</relativePath>
   </parent>
 
Index: bom/kie-core-bom/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bom/kie-core-bom/pom.xml b/bom/kie-core-bom/pom.xml
--- a/bom/kie-core-bom/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/bom/kie-core-bom/pom.xml	(date 1680177972384)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../../pom.xml</relativePath>
   </parent>
 
Index: bom/kie-dmn-bom/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bom/kie-dmn-bom/pom.xml b/bom/kie-dmn-bom/pom.xml
--- a/bom/kie-dmn-bom/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/bom/kie-dmn-bom/pom.xml	(date 1680177974006)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-core-bom</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../kie-core-bom/pom.xml</relativePath>
   </parent>
 
Index: bom/kie-efesto-bom/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bom/kie-efesto-bom/pom.xml b/bom/kie-efesto-bom/pom.xml
--- a/bom/kie-efesto-bom/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/bom/kie-efesto-bom/pom.xml	(date 1680177974106)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-core-bom</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../kie-core-bom/pom.xml</relativePath>
   </parent>
 
Index: bom/kie-pmml-bom/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bom/kie-pmml-bom/pom.xml b/bom/kie-pmml-bom/pom.xml
--- a/bom/kie-pmml-bom/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/bom/kie-pmml-bom/pom.xml	(date 1680177974426)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-core-bom</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../kie-core-bom/pom.xml</relativePath>
   </parent>
 
Index: kie-pmml-trusty/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/pom.xml b/kie-pmml-trusty/pom.xml
--- a/kie-pmml-trusty/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/pom.xml	(date 1680177974472)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-scenario-simulation/drools-scenario-simulation-backend/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-scenario-simulation/drools-scenario-simulation-backend/pom.xml b/drools-scenario-simulation/drools-scenario-simulation-backend/pom.xml
--- a/drools-scenario-simulation/drools-scenario-simulation-backend/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-scenario-simulation/drools-scenario-simulation-backend/pom.xml	(date 1680177975305)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>drools-scenario-simulation</artifactId>
     <groupId>org.drools</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-scenario-simulation/drools-scenario-simulation-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-scenario-simulation/drools-scenario-simulation-api/pom.xml b/drools-scenario-simulation/drools-scenario-simulation-api/pom.xml
--- a/drools-scenario-simulation/drools-scenario-simulation-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-scenario-simulation/drools-scenario-simulation-api/pom.xml	(date 1680177975276)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>drools-scenario-simulation</artifactId>
     <groupId>org.drools</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-scenario-simulation/drools-scenario-simulation-integrationtest/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-scenario-simulation/drools-scenario-simulation-integrationtest/pom.xml b/drools-scenario-simulation/drools-scenario-simulation-integrationtest/pom.xml
--- a/drools-scenario-simulation/drools-scenario-simulation-integrationtest/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-scenario-simulation/drools-scenario-simulation-integrationtest/pom.xml	(date 1680177975340)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>drools-scenario-simulation</artifactId>
     <groupId>org.drools</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/test/java/org/drools/quarkus/ruleunit/test/RuntimeDslRuleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/test/java/org/drools/quarkus/ruleunit/test/RuntimeDslRuleUnitTest.java b/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/test/java/org/drools/quarkus/ruleunit/test/RuntimeDslRuleUnitTest.java
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/test/java/org/drools/quarkus/ruleunit/test/RuntimeDslRuleUnitTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/src/test/java/org/drools/quarkus/ruleunit/test/RuntimeDslRuleUnitTest.java	(date 1680178598934)
@@ -5,7 +5,7 @@
 import org.drools.ruleunits.api.RuleUnitInstance;
 import org.junit.jupiter.api.Test;
 
-import javax.inject.Inject;
+import jakarta.inject.Inject;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
Index: kie-dmn/kie-dmn-core/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-core/pom.xml b/kie-dmn/kie-dmn-core/pom.xml
--- a/kie-dmn/kie-dmn-core/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-core/pom.xml	(date 1680177975703)
@@ -7,7 +7,7 @@
   <parent>
     <artifactId>kie-dmn</artifactId>
     <groupId>org.kie</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>kie-dmn-core</artifactId>
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/pom.xml	(date 1680177971437)
@@ -17,7 +17,7 @@
   <groupId>org.kie</groupId>
   <artifactId>drools-parent</artifactId>
   <packaging>pom</packaging>
-  <version>8.37.0-SNAPSHOT</version>
+  <version>quarkus-3-SNAPSHOT</version>
 
   <name>Drools :: Parent</name>
   <description>
Index: kie-internal/src/main/java/org/kie/internal/builder/help/KnowledgeBuilderHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/builder/help/KnowledgeBuilderHelper.java b/kie-internal/src/main/java/org/kie/internal/builder/help/KnowledgeBuilderHelper.java
--- a/kie-internal/src/main/java/org/kie/internal/builder/help/KnowledgeBuilderHelper.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/builder/help/KnowledgeBuilderHelper.java	(date 1680178598871)
@@ -20,8 +20,8 @@
 import java.util.Collections;
 import java.util.Map;
 
-import javax.xml.bind.JAXBContext;
-import javax.xml.bind.JAXBException;
+import jakarta.xml.bind.JAXBContext;
+import jakarta.xml.bind.JAXBException;
 
 import com.sun.tools.xjc.Options;
 import org.kie.api.KieBase;
Index: kie-pmml-trusty/kie-pmml-commons/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-commons/pom.xml b/kie-pmml-trusty/kie-pmml-commons/pom.xml
--- a/kie-pmml-trusty/kie-pmml-commons/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-commons/pom.xml	(date 1680177976216)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-trusty</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-internal/src/main/java/org/kie/internal/builder/help/DroolsJaxbHelperProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/builder/help/DroolsJaxbHelperProvider.java b/kie-internal/src/main/java/org/kie/internal/builder/help/DroolsJaxbHelperProvider.java
--- a/kie-internal/src/main/java/org/kie/internal/builder/help/DroolsJaxbHelperProvider.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/builder/help/DroolsJaxbHelperProvider.java	(date 1680178598871)
@@ -19,8 +19,8 @@
 import java.io.IOException;
 import java.util.Map;
 
-import javax.xml.bind.JAXBContext;
-import javax.xml.bind.JAXBException;
+import jakarta.xml.bind.JAXBContext;
+import jakarta.xml.bind.JAXBException;
 
 import com.sun.tools.xjc.Options;
 import org.kie.api.KieBase;
Index: kie-pmml-trusty/kie-pmml-compiler/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/pom.xml b/kie-pmml-trusty/kie-pmml-compiler/pom.xml
--- a/kie-pmml-trusty/kie-pmml-compiler/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/pom.xml	(date 1680177976222)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-trusty</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-models/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/pom.xml b/kie-pmml-trusty/kie-pmml-models/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/pom.xml	(date 1680177976272)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-trusty</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-evaluator/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-evaluator/pom.xml b/kie-pmml-trusty/kie-pmml-evaluator/pom.xml
--- a/kie-pmml-trusty/kie-pmml-evaluator/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-evaluator/pom.xml	(date 1680177976264)
@@ -4,7 +4,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-trusty</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
   <packaging>pom</packaging>
Index: kie-pmml-trusty/kie-pmml-dependencies/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-dependencies/pom.xml b/kie-pmml-trusty/kie-pmml-dependencies/pom.xml
--- a/kie-pmml-trusty/kie-pmml-dependencies/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-dependencies/pom.xml	(date 1680177976257)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-trusty</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-drl-quarkus-extension/drools-drl-quarkus-deployment/src/main/java/org/drools/drl/quarkus/deployment/DroolsAssetsProcessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-deployment/src/main/java/org/drools/drl/quarkus/deployment/DroolsAssetsProcessor.java b/drools-drl-quarkus-extension/drools-drl-quarkus-deployment/src/main/java/org/drools/drl/quarkus/deployment/DroolsAssetsProcessor.java
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-deployment/src/main/java/org/drools/drl/quarkus/deployment/DroolsAssetsProcessor.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-deployment/src/main/java/org/drools/drl/quarkus/deployment/DroolsAssetsProcessor.java	(date 1680178598933)
@@ -18,7 +18,7 @@
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.List;
-import javax.inject.Inject;
+import jakarta.inject.Inject;
 
 import io.quarkus.arc.deployment.GeneratedBeanBuildItem;
 import io.quarkus.deployment.annotations.BuildProducer;
Index: kie-pmml-trusty/kie-pmml-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-api/pom.xml b/kie-pmml-trusty/kie-pmml-api/pom.xml
--- a/kie-pmml-trusty/kie-pmml-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-api/pom.xml	(date 1680177976195)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>kie-pmml-trusty</artifactId>
     <groupId>org.kie</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/testutils/PMMLModelTestUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/testutils/PMMLModelTestUtils.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/testutils/PMMLModelTestUtils.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/testutils/PMMLModelTestUtils.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/testutils/PMMLModelTestUtils.java	(date 1680178598908)
@@ -28,6 +28,7 @@
 import org.dmg.pmml.Array;
 import org.dmg.pmml.CompareFunction;
 import org.dmg.pmml.ComparisonMeasure;
+import org.dmg.pmml.ComplexScoreDistribution;
 import org.dmg.pmml.CompoundPredicate;
 import org.dmg.pmml.Constant;
 import org.dmg.pmml.DataDictionary;
@@ -40,7 +41,6 @@
 import org.dmg.pmml.Euclidean;
 import org.dmg.pmml.Field;
 import org.dmg.pmml.FieldColumnPair;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.FieldRef;
 import org.dmg.pmml.InlineTable;
 import org.dmg.pmml.Interval;
@@ -86,8 +86,8 @@
 import org.dmg.pmml.regression.PredictorTerm;
 import org.dmg.pmml.regression.RegressionModel;
 import org.dmg.pmml.regression.RegressionTable;
-import org.jpmml.model.inlinetable.InputCell;
-import org.jpmml.model.inlinetable.OutputCell;
+import org.jpmml.model.cells.InputCell;
+import org.jpmml.model.cells.OutputCell;
 import org.kie.pmml.api.enums.DATA_TYPE;
 import org.kie.pmml.api.enums.Named;
 import org.kie.pmml.api.enums.RESULT_FEATURE;
@@ -191,7 +191,7 @@
         miningSchema.addMiningFields(predictedMiningField);
         Output output = new Output();
         OutputField outputField = new OutputField();
-        outputField.setName(FieldName.create("OUTPUT_" + lastDataField.getName().getValue()));
+        outputField.setName("OUTPUT_" +lastDataField.getName());
         outputField.setDataType(lastDataField.getDataType());
         outputField.setOpType(getRandomOpType());
         toReturn.setModelName(RandomStringUtils.random(6, true, false));
@@ -219,7 +219,7 @@
         miningSchema.addMiningFields(predictedMiningField);
         Output output = new Output();
         OutputField outputField = new OutputField();
-        outputField.setName(FieldName.create("OUTPUT_" + lastDataField.getName().getValue()));
+        outputField.setName("OUTPUT_" +lastDataField.getName());
         outputField.setDataType(lastDataField.getDataType());
         outputField.setOpType(getRandomOpType());
         toReturn.setModelName(RandomStringUtils.random(6, true, false));
@@ -279,7 +279,7 @@
 
     public static CategoricalPredictor getCategoricalPredictor(String name, double value, double coefficient) {
         CategoricalPredictor toReturn = new CategoricalPredictor();
-        toReturn.setField(FieldName.create(name));
+        toReturn.setField(name);
         toReturn.setValue(value);
         toReturn.setCoefficient(coefficient);
         return toReturn;
@@ -287,7 +287,7 @@
 
     public static NumericPredictor getNumericPredictor(String name, int exponent, double coefficient) {
         NumericPredictor toReturn = new NumericPredictor();
-        toReturn.setField(FieldName.create(name));
+        toReturn.setField(name);
         toReturn.setExponent(exponent);
         toReturn.setCoefficient(coefficient);
         return toReturn;
@@ -295,7 +295,7 @@
 
     public static PredictorTerm getPredictorTerm(String name, double coefficient, List<String> fieldRefNames) {
         PredictorTerm toReturn = new PredictorTerm();
-        toReturn.setName(FieldName.create(name));
+        toReturn.setName(name);
         toReturn.setCoefficient(coefficient);
         toReturn.addFieldRefs(fieldRefNames.stream().map(PMMLModelTestUtils::getFieldRef).toArray(FieldRef[]::new));
         return toReturn;
@@ -320,7 +320,7 @@
 
     public static DataField getDataField(String fieldName, OpType opType) {
         DataField toReturn = new DataField();
-        toReturn.setName(FieldName.create(fieldName));
+        toReturn.setName(fieldName);
         toReturn.setOpType(opType);
         return toReturn;
     }
@@ -333,14 +333,14 @@
 
     public static MiningField getMiningField(String fieldName, MiningField.UsageType usageType) {
         MiningField toReturn = getRandomMiningField();
-        toReturn.setName(FieldName.create(fieldName));
+        toReturn.setName(fieldName);
         toReturn.setUsageType(usageType);
         return toReturn;
     }
 
     public static Target getTarget(String fieldTarget, OpType opType) {
         Target toReturn = new Target();
-        toReturn.setField(FieldName.create(fieldTarget));
+        toReturn.setField(fieldTarget);
         toReturn.setOpType(opType);
         return toReturn;
     }
@@ -359,7 +359,7 @@
 
     public static DerivedField getDerivedField(String fieldName) {
         DerivedField toReturn = new DerivedField();
-        toReturn.setName(FieldName.create(fieldName));
+        toReturn.setName(fieldName);
         toReturn.setDataType(getRandomDataType());
         toReturn.setOpType(getRandomOpType());
         Constant expression = new Constant(5);
@@ -383,7 +383,7 @@
 
     public static DataField getRandomDataField() {
         DataField toReturn = new DataField();
-        toReturn.setName(FieldName.create(RandomStringUtils.random(6, true, false)));
+        toReturn.setName(RandomStringUtils.random(6, true, false));
         toReturn.setDataType(getRandomDataType());
         toReturn.setOpType(getRandomOpType());
         IntStream.range(0, 3).forEach(i -> {
@@ -410,7 +410,7 @@
 
     public static MiningField getRandomMiningField() {
         Random random = new Random();
-        MiningField toReturn = new MiningField(FieldName.create(RandomStringUtils.random(6, true, false)));
+        MiningField toReturn = new MiningField(RandomStringUtils.random(6, true, false));
         toReturn.setInvalidValueTreatment(getRandomInvalidValueTreatmentMethod());
         toReturn.setMissingValueTreatment(getRandomMissingValueTreatmentMethod());
         toReturn.setOutlierTreatment(getRandomOutlierTreatmentMethod());
@@ -433,13 +433,13 @@
     }
 
     public static OutputField getRandomOutputField() {
-        FieldName fieldName = FieldName.create(RandomStringUtils.random(6, true, false));
+         String fieldName =RandomStringUtils.random(6, true, false);
         OutputField toReturn = new OutputField();
         toReturn.setName(fieldName);
         toReturn.setOpType(getRandomOpType());
         toReturn.setDataType(getRandomDataType());
         toReturn.setValue(getRandomValue(toReturn.getDataType()));
-        fieldName = FieldName.create(RandomStringUtils.random(6, true, false));
+        fieldName =RandomStringUtils.random(6, true, false);
         toReturn.setTargetField(fieldName);
         toReturn.setResultFeature(getRandomResultFeature());
         toReturn.setExpression(getRandomConstant());
@@ -449,7 +449,7 @@
     public static Target getRandomTarget() {
         Random random = new Random();
         Target toReturn = new Target();
-        toReturn.setField(FieldName.create(RandomStringUtils.random(6, true, false)));
+        toReturn.setField(RandomStringUtils.random(6, true, false));
         toReturn.setOpType(getRandomOpType());
         toReturn.setMax(random.nextInt(234));
         toReturn.setMin(random.nextInt(23));
@@ -473,7 +473,7 @@
 
     public static FieldColumnPair getRandomFieldColumnPair() {
         FieldColumnPair toReturn = new FieldColumnPair();
-        toReturn.setField(FieldName.create(RandomStringUtils.random(6, true, false)));
+        toReturn.setField(RandomStringUtils.random(6, true, false));
         toReturn.setColumn(RandomStringUtils.random(6, true, false));
         return toReturn;
     }
@@ -490,7 +490,7 @@
         Random random = new Random();
         ClusteringField toReturn = new ClusteringField();
         toReturn.setCenterField(getRandomClusteringFieldCenterField());
-        toReturn.setField(FieldName.create(RandomStringUtils.random(6, true, false)));
+        toReturn.setField(RandomStringUtils.random(6, true, false));
         toReturn.setCompareFunction(getRandomCompareFunction());
         toReturn.setFieldWeight(random.nextDouble());
         toReturn.setComparisons(getRandomComparisons());
@@ -528,7 +528,7 @@
         Discretize toReturn = new Discretize();
         toReturn.setDataType(getRandomDataType());
         toReturn.setDefaultValue(RandomStringUtils.random(6, true, false));
-        toReturn.setField(FieldName.create(RandomStringUtils.random(6, true, false)));
+        toReturn.setField(RandomStringUtils.random(6, true, false));
         toReturn.setMapMissingTo(RandomStringUtils.random(6, true, false));
         IntStream.range(0, 3).forEach(i -> toReturn.addDiscretizeBins(getRandomDiscretizeBin()));
         return toReturn;
@@ -536,7 +536,7 @@
 
     public static FieldRef getRandomFieldRef() {
         FieldRef toReturn = new FieldRef();
-        toReturn.setField(FieldName.create(RandomStringUtils.random(6, true, false)));
+        toReturn.setField(RandomStringUtils.random(6, true, false));
         toReturn.setMapMissingTo(RandomStringUtils.random(6, true, false));
         return toReturn;
     }
@@ -562,7 +562,7 @@
         double mapMissingTo = random.nextInt(100) / 10;
         NormContinuous toReturn = new NormContinuous();
         IntStream.range(0, 3).forEach(i -> toReturn.addLinearNorms(getRandomLinearNorm()));
-        toReturn.setField(FieldName.create(RandomStringUtils.random(6, true, false)));
+        toReturn.setField(RandomStringUtils.random(6, true, false));
         toReturn.setOutliers(getRandomOutlierTreatmentMethod());
         toReturn.setMapMissingTo(mapMissingTo);
         return toReturn;
@@ -570,7 +570,7 @@
 
     public static NormDiscrete getRandomNormDiscrete() {
         NormDiscrete toReturn = new NormDiscrete();
-        toReturn.setField(FieldName.create(RandomStringUtils.random(6, true, false)));
+        toReturn.setField(RandomStringUtils.random(6, true, false));
         toReturn.setValue(getRandomObject(DataType.INTEGER));
         toReturn.setMapMissingTo((Number) getRandomObject(DataType.INTEGER));
         toReturn.setMethod(getRandomMethod());
@@ -580,14 +580,14 @@
     public static TextIndex getRandomTextIndex() {
         Random random = new Random();
         TextIndex toReturn = new TextIndex();
-        toReturn.setField(FieldName.create(RandomStringUtils.random(6, true, false)));
+        toReturn.setField(RandomStringUtils.random(6, true, false));
         toReturn.setExpression(getRandomFieldRef());
         toReturn.setLocalTermWeights(getRandomLocalTermWeights());
         toReturn.setWordSeparatorCharacterRE(RandomStringUtils.random(1, true, false));
         toReturn.setTokenize(true);
         toReturn.setCaseSensitive(false);
         toReturn.setMaxLevenshteinDistance(random.nextInt(10));
-        toReturn.setTextField(FieldName.create(RandomStringUtils.random(6, true, false)));
+        toReturn.setTextField(RandomStringUtils.random(6, true, false));
         IntStream.range(0, 3).forEach(i -> toReturn.addTextIndexNormalizations(getRandomTextIndexNormalization()));
         return toReturn;
     }
@@ -600,7 +600,7 @@
     }
 
     public static ParameterField getParameterField(String fieldName) {
-        ParameterField toReturn = new ParameterField(FieldName.create(fieldName));
+        ParameterField toReturn = new ParameterField(fieldName);
         toReturn.setDataType(getRandomDataType());
         toReturn.setOpType(getRandomOpType());
         toReturn.setDisplayName("Display-" + fieldName);
@@ -608,7 +608,7 @@
     }
 
     public static ParameterField getParameterField(String fieldName, DataType dataType) {
-        ParameterField toReturn = new ParameterField(FieldName.create(fieldName));
+        ParameterField toReturn = new ParameterField(fieldName);
         toReturn.setDataType(dataType);
         return toReturn;
     }
@@ -635,7 +635,7 @@
     public static SimplePredicate getSimplePredicate(final String predicateName,
                                                      final Object value,
                                                      final SimplePredicate.Operator operator) {
-        FieldName fieldName = FieldName.create(predicateName);
+         String fieldName =predicateName;
         SimplePredicate toReturn = new SimplePredicate();
         toReturn.setField(fieldName);
         toReturn.setOperator(operator);
@@ -654,7 +654,7 @@
                                                            final Array.Type arrayType,
                                                            final List<String> values,
                                                            final SimpleSetPredicate.BooleanOperator booleanOperator) {
-        FieldName fieldName = FieldName.create(predicateName);
+         String fieldName =predicateName;
         SimpleSetPredicate toReturn = new SimpleSetPredicate();
         toReturn.setField(fieldName);
         toReturn.setBooleanOperator(booleanOperator);
@@ -671,7 +671,7 @@
     }
 
     public static FieldRef getFieldRef(final String fieldName) {
-        return new FieldRef(FieldName.create(fieldName));
+        return new FieldRef(fieldName);
     }
 
     public static Object getRandomObject(DataType dataType) {
@@ -873,7 +873,7 @@
 
     public static ScoreDistribution getRandomPMMLScoreDistribution(Double probability) {
         Random random = new Random();
-        ScoreDistribution toReturn = new ScoreDistribution();
+        ScoreDistribution toReturn = new ComplexScoreDistribution();
         toReturn.setValue(RandomStringUtils.random(6, true, false));
         toReturn.setRecordCount(random.nextInt(100));
         toReturn.setConfidence((double) random.nextInt(1) / 100);
@@ -925,7 +925,7 @@
     }
 
     public static SimplePredicate getRandomSimplePredicate() {
-        FieldName fieldName = FieldName.create(RandomStringUtils.random(6, true, false));
+         String fieldName =RandomStringUtils.random(6, true, false);
         SimplePredicate toReturn = new SimplePredicate();
         toReturn.setField(fieldName);
         toReturn.setOperator(getRandomSimplePredicateOperator());
@@ -945,7 +945,7 @@
     }
 
     public static SimpleSetPredicate getRandomSimpleSetPredicate() {
-        FieldName fieldName = FieldName.create(RandomStringUtils.random(6, true, false));
+         String fieldName =RandomStringUtils.random(6, true, false);
         SimpleSetPredicate toReturn = new SimpleSetPredicate();
         toReturn.setField(fieldName);
         toReturn.setBooleanOperator(getRandomSimpleSetPredicateOperator());
Index: drools-persistence/drools-persistence-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-api/pom.xml b/drools-persistence/drools-persistence-api/pom.xml
--- a/drools-persistence/drools-persistence-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-api/pom.xml	(date 1680178598894)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-persistence</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>drools-persistence-api</artifactId>
@@ -39,11 +39,6 @@
     <dependency>
       <groupId>org.drools</groupId>
       <artifactId>drools-commands</artifactId>
-    </dependency>
-    <dependency>
-      <groupId>com.sun.xml.bind</groupId>
-      <artifactId>jaxb-impl</artifactId>
-      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>com.sun.xml.bind</groupId>
Index: kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/src/main/java/org/kie/dmn/ruleset2dmn/Converter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/src/main/java/org/kie/dmn/ruleset2dmn/Converter.java b/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/src/main/java/org/kie/dmn/ruleset2dmn/Converter.java
--- a/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/src/main/java/org/kie/dmn/ruleset2dmn/Converter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/src/main/java/org/kie/dmn/ruleset2dmn/Converter.java	(date 1680178598933)
@@ -36,7 +36,6 @@
 import org.dmg.pmml.DataDictionary;
 import org.dmg.pmml.DataField;
 import org.dmg.pmml.DataType;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.Model;
 import org.dmg.pmml.PMML;
 import org.dmg.pmml.SimplePredicate;
@@ -143,7 +142,7 @@
             for (String input : usedPredictors) {
                 List<SimplePredicate> predicatesForInput = r.map.get(input);
                 if (predicatesForInput != null && !predicatesForInput.isEmpty())  {
-                    FieldName fnLookup = FieldName.create(input);
+                     String fnLookup =input;
                     Optional<DataField> df = pmml.getDataDictionary().getDataFields().stream().filter(x-> x.getName().equals(fnLookup)).findFirst();
                     UnaryTests ut = processSimplePredicateUnaryOrBinary(predicatesForInput, df);
                     if (ut.getText().startsWith("\"") && ut.getText().endsWith("\"")) {
@@ -195,9 +194,9 @@
         }
 
         for (DataField df : pmml.getDataDictionary().getDataFields()) {
-            if (df.getDataType() == DataType.STRING && predictorsLoVs.containsKey(df.getName().getValue())) {
+            if (df.getDataType() == DataType.STRING && predictorsLoVs.containsKey(df.getName())) {
                 for (Value value : df.getValues()) {
-                    predictorsLoVs.get(df.getName().getValue()).add("\""+value.getValue().toString()+"\"");
+                    predictorsLoVs.get(df.getName()).add("\""+value.getValue().toString()+"\"");
                 }
             }
         }
@@ -476,7 +475,7 @@
     }
 
     private static String feelTypeFromDD(DataDictionary dd, String id) {
-        FieldName lookup = FieldName.create(id);
+         String lookup =id;
         Optional<DataField> opt = dd.getDataFields().stream().filter(df -> df.getName().equals(lookup)).findFirst();
         if (opt.isEmpty()) {
             return "Any";
Index: kie-internal/src/test/java/org/kie/internal/runtime/manager/deploy/JaxbMarshalingTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/test/java/org/kie/internal/runtime/manager/deploy/JaxbMarshalingTest.java b/kie-internal/src/test/java/org/kie/internal/runtime/manager/deploy/JaxbMarshalingTest.java
--- a/kie-internal/src/test/java/org/kie/internal/runtime/manager/deploy/JaxbMarshalingTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/test/java/org/kie/internal/runtime/manager/deploy/JaxbMarshalingTest.java	(date 1680178598871)
@@ -18,9 +18,9 @@
 
 import java.io.StringWriter;
 
-import javax.xml.bind.JAXBContext;
-import javax.xml.bind.JAXBException;
-import javax.xml.bind.Marshaller;
+import jakarta.xml.bind.JAXBContext;
+import jakarta.xml.bind.JAXBException;
+import jakarta.xml.bind.Marshaller;
 
 import org.junit.Test;
 import org.kie.internal.runtime.conf.DeploymentDescriptor;
Index: drools-persistence/drools-persistence-jpa/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/pom.xml b/drools-persistence/drools-persistence-jpa/pom.xml
--- a/drools-persistence/drools-persistence-jpa/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/pom.xml	(date 1680178598896)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-persistence</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>drools-persistence-jpa</artifactId>
@@ -101,11 +101,6 @@
     <dependency>
       <groupId>org.drools</groupId>
       <artifactId>drools-mvel</artifactId>
-    </dependency>
-    <dependency>
-      <groupId>com.sun.xml.bind</groupId>
-      <artifactId>jaxb-impl</artifactId>
-      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>com.sun.xml.bind</groupId>
@@ -151,10 +146,16 @@
       <groupId>org.hibernate</groupId>
       <artifactId>hibernate-entitymanager</artifactId>
       <scope>test</scope>
+      <exclusions>
+        <exclusion>
+          <groupId>org.hibernate</groupId>
+          <artifactId>hibernate-core</artifactId>
+        </exclusion>
+      </exclusions>
     </dependency>
     <dependency>
       <groupId>org.hibernate</groupId>
-      <artifactId>hibernate-core</artifactId>
+      <artifactId>hibernate-core-jakarta</artifactId>
       <scope>test</scope>
       <exclusions>
         <exclusion>
@@ -166,6 +167,7 @@
           <artifactId>jandex</artifactId>
         </exclusion>
       </exclusions>
+      <version>5.6.15.Final</version>
     </dependency>
     <dependency>
       <groupId>${jandex.group-id}</groupId>
@@ -191,8 +193,9 @@
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jta</groupId>
-      <artifactId>narayana-jta</artifactId>
+      <artifactId>narayana-jta-jakarta</artifactId>
       <scope>test</scope>
+      <version>5.13.1.Alpha1</version>
     </dependency>
     <dependency>
       <groupId>org.jboss</groupId>
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/dto/CommonCompilationDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/dto/CommonCompilationDTO.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/dto/CommonCompilationDTO.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/dto/CommonCompilationDTO.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/dto/CommonCompilationDTO.java	(date 1680178598905)
@@ -116,7 +116,7 @@
             targetDataField = this.fields.stream()
                     .filter(DataField.class::isInstance)
                     .map(DataField.class::cast)
-                    .filter(field -> Objects.equals(getTargetFieldName(), field.getName().getValue()))
+                    .filter(field -> Objects.equals(getTargetFieldName(),field.getName()))
                     .findFirst().orElse(null);
         } else {
             targetDataField = null;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDiscretizeFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDiscretizeFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDiscretizeFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDiscretizeFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDiscretizeFactoryTest.java	(date 1680178598916)
@@ -26,7 +26,6 @@
 import org.dmg.pmml.DataType;
 import org.dmg.pmml.Discretize;
 import org.dmg.pmml.DiscretizeBin;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.Interval;
 import org.junit.jupiter.api.BeforeAll;
 import org.junit.jupiter.api.Test;
@@ -64,7 +63,7 @@
     void getDiscretizeVariableDeclaration() throws IOException {
         String variableName = "variableName";
         Discretize discretize = new Discretize();
-        discretize.setField(FieldName.create(NAME));
+        discretize.setField(NAME);
         discretize.setDataType(dataType);
         discretize.setMapMissingTo(MAP_MISSING_TO);
         discretize.setDefaultValue(DEFAULTVALUE);
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/utils/ModelUtilsTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/utils/ModelUtilsTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/utils/ModelUtilsTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/utils/ModelUtilsTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/test/java/org/kie/pmml/compiler/api/utils/ModelUtilsTest.java	(date 1680178598907)
@@ -34,7 +34,6 @@
 import org.dmg.pmml.DataType;
 import org.dmg.pmml.DerivedField;
 import org.dmg.pmml.Field;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.MiningField;
 import org.dmg.pmml.MiningSchema;
 import org.dmg.pmml.Model;
@@ -45,8 +44,8 @@
 import org.dmg.pmml.Target;
 import org.dmg.pmml.Targets;
 import org.dmg.pmml.regression.RegressionModel;
-import org.jpmml.model.inlinetable.InputCell;
-import org.jpmml.model.inlinetable.OutputCell;
+import org.jpmml.model.cells.InputCell;
+import org.jpmml.model.cells.OutputCell;
 import org.junit.jupiter.api.Test;
 import org.kie.pmml.api.enums.DATA_TYPE;
 import org.kie.pmml.api.enums.FIELD_USAGE_TYPE;
@@ -196,10 +195,10 @@
         retrieved.forEach(kiePMMLNameOpType -> {
             assertThat(miningSchema.getMiningFields()
                                .stream()
-                               .anyMatch(fld -> kiePMMLNameOpType.getName().equals(fld.getName().getValue()))).isTrue();
+                               .anyMatch(fld -> kiePMMLNameOpType.getName().equals(fld.getName()))).isTrue();
             Optional<DataField> optionalDataField = dataDictionary.getDataFields()
                     .stream()
-                    .filter(fld -> kiePMMLNameOpType.getName().equals(fld.getName().getValue()))
+                    .filter(fld -> kiePMMLNameOpType.getName().equals(fld.getName()))
                     .findFirst();
             assertThat(optionalDataField).isPresent();
             DataField dataField = optionalDataField.get();
@@ -228,7 +227,7 @@
         retrieved.forEach(kiePMMLNameOpType -> {
             Optional<MiningField> optionalMiningField = miningSchema.getMiningFields()
                     .stream()
-                    .filter(fld -> kiePMMLNameOpType.getName().equals(fld.getName().getValue()))
+                    .filter(fld -> kiePMMLNameOpType.getName().equals(fld.getName()))
                     .findFirst();
             assertThat(optionalMiningField).isPresent();
             MiningField miningField = optionalMiningField.get();
@@ -261,7 +260,7 @@
         retrieved.forEach(kiePMMLNameOpType -> {
             Optional<MiningField> optionalMiningField = miningSchema.getMiningFields()
                     .stream()
-                    .filter(fld -> kiePMMLNameOpType.getName().equals(fld.getName().getValue()))
+                    .filter(fld -> kiePMMLNameOpType.getName().equals(fld.getName()))
                     .findFirst();
             assertThat(optionalMiningField).isPresent();
             MiningField miningField = optionalMiningField.get();
@@ -294,7 +293,7 @@
         retrieved.forEach(kiePMMLNameOpType -> {
             Optional<Target> optionalTarget = targets.getTargets()
                     .stream()
-                    .filter(fld -> kiePMMLNameOpType.getName().equals(fld.getField().getValue()))
+                    .filter(fld -> kiePMMLNameOpType.getName().equals(fld.getField()))
                     .findFirst();
             assertThat(optionalTarget).isPresent();
             Target target = optionalTarget.get();
@@ -311,7 +310,7 @@
         IntStream.range(0, 3).forEach(i -> {
             final DataField dataField = getRandomDataField();
             dataDictionary.addDataFields(dataField);
-            final MiningField miningField = getMiningField(dataField.getName().getValue(),
+            final MiningField miningField = getMiningField(dataField.getName(),
                                                            MiningField.UsageType.PREDICTED);
             miningSchema.addMiningFields(miningField);
         });
@@ -341,7 +340,7 @@
         IntStream.range(0, 3).forEach(i -> {
             final DataField dataField = getRandomDataField();
             dataDictionary.addDataFields(dataField);
-            final MiningField miningField = getMiningField(dataField.getName().getValue(),
+            final MiningField miningField = getMiningField(dataField.getName(),
                                                            MiningField.UsageType.ACTIVE);
             miningSchema.addMiningFields(miningField);
         });
@@ -360,10 +359,10 @@
         IntStream.range(0, 3).forEach(i -> {
             final DataField dataField = getRandomDataField();
             dataDictionary.addDataFields(dataField);
-            final MiningField miningField = getMiningField(dataField.getName().getValue(),
+            final MiningField miningField = getMiningField(dataField.getName(),
                                                            MiningField.UsageType.ACTIVE);
             miningSchema.addMiningFields(miningField);
-            final Target targetField = getTarget(dataField.getName().getValue(), null);
+            final Target targetField = getTarget(dataField.getName(), null);
             targets.addTargets(targetField);
         });
         model.setMiningSchema(miningSchema);
@@ -386,8 +385,7 @@
         dataDictionary.getDataFields().forEach(dataField -> {
             OP_TYPE retrieved =
                     org.kie.pmml.compiler.api.utils.ModelUtils.getOpType(getFieldsFromDataDictionary(dataDictionary),
-                                                                         model,
-                                                                                     dataField.getName().getValue());
+                                                                         model,dataField.getName());
             assertThat(retrieved).isNotNull();
             OP_TYPE expected = OP_TYPE.byName(dataField.getOpType().value());
             assertThat(retrieved).isEqualTo(expected);
@@ -402,7 +400,7 @@
             IntStream.range(0, 3).forEach(i -> {
                 String fieldName = "field" + i;
                 final DataField dataField = getRandomDataField();
-                dataField.setName(FieldName.create(fieldName));
+                dataField.setName(fieldName);
                 dataDictionary.addDataFields(dataField);
             });
             org.kie.pmml.compiler.api.utils.ModelUtils.getOpType(getFieldsFromDataDictionary(dataDictionary), model,
@@ -426,8 +424,7 @@
         miningSchema.getMiningFields().forEach(miningField -> {
             OP_TYPE retrieved =
                     org.kie.pmml.compiler.api.utils.ModelUtils.getOpType(getFieldsFromDataDictionary(dataDictionary),
-                                                                         model,
-                                                                                     miningField.getName().getValue());
+                                                                         model,miningField.getName());
             assertThat(retrieved).isNotNull();
             OP_TYPE expected = OP_TYPE.byName(miningField.getOpType().value());
             assertThat(retrieved).isEqualTo(expected);
@@ -443,7 +440,7 @@
             IntStream.range(0, 3).forEach(i -> {
                 String fieldName = "field" + i;
                 final DataField dataField = getRandomDataField();
-                dataField.setName(FieldName.create(fieldName));
+                dataField.setName(fieldName);
                 dataDictionary.addDataFields(dataField);
                 final MiningField miningField = getRandomMiningField();
                 miningField.setName(dataField.getName());
@@ -477,8 +474,7 @@
         targets.getTargets().forEach(target -> {
             OP_TYPE retrieved =
                     org.kie.pmml.compiler.api.utils.ModelUtils.getOpType(getFieldsFromDataDictionary(dataDictionary),
-                                                                         model,
-                                                                                     target.getField().getValue());
+                                                                         model,target.getField());
             assertThat(retrieved).isNotNull();
             OP_TYPE expected = OP_TYPE.byName(target.getOpType().value());
             assertThat(retrieved).isEqualTo(expected);
@@ -495,7 +491,7 @@
             IntStream.range(0, 3).forEach(i -> {
                 String fieldName = "field" + i;
                 final DataField dataField = getRandomDataField();
-                dataField.setName(FieldName.create(fieldName));
+                dataField.setName(fieldName);
                 dataDictionary.addDataFields(dataField);
                 final MiningField miningField = getRandomMiningField();
                 miningField.setName(dataField.getName());
@@ -528,8 +524,7 @@
         fields.clear();
         fields.addAll(getFieldsFromDataDictionary(dataDictionary));
         dataDictionary.getDataFields().forEach(dataField -> {
-            Optional<OP_TYPE> retrieved = org.kie.pmml.compiler.api.utils.ModelUtils.getOpTypeFromFields(fields,
-                                                                                                         dataField.getName().getValue());
+            Optional<OP_TYPE> retrieved = org.kie.pmml.compiler.api.utils.ModelUtils.getOpTypeFromFields(fields,dataField.getName());
             assertThat(retrieved).isNotNull();
             assertThat(retrieved).isPresent();
             OP_TYPE expected = OP_TYPE.byName(dataField.getOpType().value());
@@ -552,8 +547,7 @@
         });
         miningSchema.getMiningFields().forEach(miningField -> {
             Optional<OP_TYPE> retrieved =
-                    org.kie.pmml.compiler.api.utils.ModelUtils.getOpTypeFromMiningFields(miningSchema,
-                                                                                         miningField.getName().getValue());
+                    org.kie.pmml.compiler.api.utils.ModelUtils.getOpTypeFromMiningFields(miningSchema,miningField.getName());
             assertThat(retrieved).isNotNull();
             assertThat(retrieved).isPresent();
             OP_TYPE expected = OP_TYPE.byName(miningField.getOpType().value());
@@ -575,8 +569,7 @@
             targets.addTargets(target);
         });
         targets.getTargets().forEach(target -> {
-            Optional<OP_TYPE> retrieved = org.kie.pmml.compiler.api.utils.ModelUtils.getOpTypeFromTargets(targets,
-                                                                                                          target.getField().getValue());
+            Optional<OP_TYPE> retrieved = org.kie.pmml.compiler.api.utils.ModelUtils.getOpTypeFromTargets(targets,target.getField());
             assertThat(retrieved).isNotNull();
             assertThat(retrieved).isPresent();
             OP_TYPE expected = OP_TYPE.byName(target.getOpType().value());
@@ -595,7 +588,7 @@
                 .stream()
                 .map(dataField -> {
                     DerivedField toReturn = new DerivedField();
-                    toReturn.setName(FieldName.create("DER_" + dataField.getName().getValue()));
+                    toReturn.setName("DER_" +dataField.getName());
                     DataType dataType = getRandomDataType();
                     while (dataType.equals(dataField.getDataType())) {
                         dataType = getRandomDataType();
@@ -612,14 +605,14 @@
                 .map(Field.class::cast)
                 .forEach(fields::add);
         dataDictionary.getDataFields().forEach(dataField -> {
-            String fieldName = dataField.getName().getValue();
+            String fieldName =dataField.getName();
             DataType retrieved = org.kie.pmml.compiler.api.utils.ModelUtils.getDataType(fields, fieldName);
             assertThat(retrieved).isNotNull();
             DataType expected = dataField.getDataType();
             assertThat(retrieved).isEqualTo(expected);
         });
         derivedFields.forEach(derivedField -> {
-            String fieldName = derivedField.getName().getValue();
+            String fieldName =derivedField.getName();
             DataType retrieved = org.kie.pmml.compiler.api.utils.ModelUtils.getDataType(fields, fieldName);
             assertThat(retrieved).isNotNull();
             DataType expected = derivedField.getDataType();
@@ -636,7 +629,7 @@
         });
         dataDictionary.getDataFields().forEach(dataField -> {
             DATA_TYPE retrieved =
-                    org.kie.pmml.compiler.api.utils.ModelUtils.getDATA_TYPE(getFieldsFromDataDictionary(dataDictionary), dataField.getName().getValue());
+                    org.kie.pmml.compiler.api.utils.ModelUtils.getDATA_TYPE(getFieldsFromDataDictionary(dataDictionary),dataField.getName());
             assertThat(retrieved).isNotNull();
             DATA_TYPE expected = DATA_TYPE.byName(dataField.getDataType().value());
             assertThat(retrieved).isEqualTo(expected);
@@ -650,7 +643,7 @@
             IntStream.range(0, 3).forEach(i -> {
                 String fieldName = "field" + i;
                 final DataField dataField = getRandomDataField();
-                dataField.setName(FieldName.create(fieldName));
+                dataField.setName(fieldName);
                 dataDictionary.addDataFields(dataField);
             });
             org.kie.pmml.compiler.api.utils.ModelUtils.getDATA_TYPE(getFieldsFromDataDictionary(dataDictionary),
@@ -716,12 +709,12 @@
         org.kie.pmml.api.models.OutputField retrieved =
                 org.kie.pmml.compiler.api.utils.ModelUtils.convertToKieOutputField(toConvert, null);
         assertThat(retrieved).isNotNull();
-        assertThat(retrieved.getName()).isEqualTo(toConvert.getName().getValue());
+        assertThat(retrieved.getName()).isEqualTo(toConvert.getName());
         OP_TYPE expectedOpType = OP_TYPE.byName(toConvert.getOpType().value());
         assertThat(retrieved.getOpType()).isEqualTo(expectedOpType);
         DATA_TYPE expectedDataType = DATA_TYPE.byName(toConvert.getDataType().value());
         assertThat(retrieved.getDataType()).isEqualTo(expectedDataType);
-        assertThat(retrieved.getTargetField()).isEqualTo(toConvert.getTargetField().getValue());
+        assertThat(retrieved.getTargetField()).isEqualTo(toConvert.getTargetField());
         RESULT_FEATURE expectedResultFeature = RESULT_FEATURE.byName(toConvert.getResultFeature().value());
         assertThat(retrieved.getResultFeature()).isEqualTo(expectedResultFeature);
         toConvert.setOpType(null);
Index: efesto/efesto-dependencies/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/efesto/efesto-dependencies/pom.xml b/efesto/efesto-dependencies/pom.xml
--- a/efesto/efesto-dependencies/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/efesto/efesto-dependencies/pom.xml	(date 1680177975556)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>efesto</artifactId>
     <groupId>org.kie</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: efesto/efesto-core/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/efesto/efesto-core/pom.xml b/efesto/efesto-core/pom.xml
--- a/efesto/efesto-core/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/efesto/efesto-core/pom.xml	(date 1680177975540)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>efesto</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <packaging>pom</packaging>
 
Index: efesto/efesto-common-utils/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/efesto/efesto-common-utils/pom.xml b/efesto/efesto-common-utils/pom.xml
--- a/efesto/efesto-common-utils/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/efesto/efesto-common-utils/pom.xml	(date 1680177975534)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>efesto</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>efesto-common-utils</artifactId>
Index: drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/src/test/java/org/drools/quarkus/test/RuntimeTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/src/test/java/org/drools/quarkus/test/RuntimeTest.java b/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/src/test/java/org/drools/quarkus/test/RuntimeTest.java
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/src/test/java/org/drools/quarkus/test/RuntimeTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/src/test/java/org/drools/quarkus/test/RuntimeTest.java	(date 1680178598934)
@@ -21,7 +21,7 @@
 import org.kie.api.runtime.KieRuntimeBuilder;
 import org.kie.api.runtime.KieSession;
 
-import javax.inject.Inject;
+import jakarta.inject.Inject;
 import java.util.List;
 import java.util.stream.Collectors;
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-model/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-model/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-model/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-model/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-model/pom.xml	(date 1680177977186)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-regression</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-evaluator/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-evaluator/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-evaluator/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-evaluator/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-evaluator/pom.xml	(date 1680177977176)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-regression</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-api/src/main/java/org/kie/api/pmml/IntegerFieldOutput.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-api/src/main/java/org/kie/api/pmml/IntegerFieldOutput.java b/kie-api/src/main/java/org/kie/api/pmml/IntegerFieldOutput.java
--- a/kie-api/src/main/java/org/kie/api/pmml/IntegerFieldOutput.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-api/src/main/java/org/kie/api/pmml/IntegerFieldOutput.java	(date 1680178598863)
@@ -15,9 +15,9 @@
  */
 package org.kie.api.pmml;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 @XmlRootElement(name="value")
 @XmlAccessorType(XmlAccessType.FIELD)
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-compiler/pom.xml	(date 1680177977168)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-regression</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-tests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-tests/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-tests/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-tests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-regression/kie-pmml-models-regression-tests/pom.xml	(date 1680177977215)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-regression</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-api/src/main/java/org/kie/api/pmml/AbstractOutput.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-api/src/main/java/org/kie/api/pmml/AbstractOutput.java b/kie-api/src/main/java/org/kie/api/pmml/AbstractOutput.java
--- a/kie-api/src/main/java/org/kie/api/pmml/AbstractOutput.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-api/src/main/java/org/kie/api/pmml/AbstractOutput.java	(date 1680178598865)
@@ -15,11 +15,11 @@
  */
 package org.kie.api.pmml;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 @XmlRootElement(name="pmmlOutput")
 @XmlAccessorType(XmlAccessType.FIELD)
Index: kie-api/src/main/java/org/kie/api/pmml/StringFieldOutput.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-api/src/main/java/org/kie/api/pmml/StringFieldOutput.java b/kie-api/src/main/java/org/kie/api/pmml/StringFieldOutput.java
--- a/kie-api/src/main/java/org/kie/api/pmml/StringFieldOutput.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-api/src/main/java/org/kie/api/pmml/StringFieldOutput.java	(date 1680178598865)
@@ -15,9 +15,9 @@
  */
 package org.kie.api.pmml;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 @XmlRootElement(name="value")
 @XmlAccessorType(XmlAccessType.FIELD)
Index: kie-api/src/main/java/org/kie/api/pmml/ParameterInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-api/src/main/java/org/kie/api/pmml/ParameterInfo.java b/kie-api/src/main/java/org/kie/api/pmml/ParameterInfo.java
--- a/kie-api/src/main/java/org/kie/api/pmml/ParameterInfo.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-api/src/main/java/org/kie/api/pmml/ParameterInfo.java	(date 1680178598863)
@@ -15,12 +15,12 @@
  */
 package org.kie.api.pmml;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlType;
 
 @XmlType(name="ParameterInfo")
 @XmlAccessorType(XmlAccessType.NONE)
Index: kie-api/src/main/java/org/kie/api/pmml/PMML4Result.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-api/src/main/java/org/kie/api/pmml/PMML4Result.java b/kie-api/src/main/java/org/kie/api/pmml/PMML4Result.java
--- a/kie-api/src/main/java/org/kie/api/pmml/PMML4Result.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-api/src/main/java/org/kie/api/pmml/PMML4Result.java	(date 1680178598864)
@@ -21,13 +21,13 @@
 import java.util.Map;
 import java.util.Optional;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlElementWrapper;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlElementWrapper;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlType;
 
 import org.kie.api.definition.type.PropertyReactive;
 import org.slf4j.Logger;
Index: kie-api/src/main/java/org/kie/api/pmml/PMMLRequestData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-api/src/main/java/org/kie/api/pmml/PMMLRequestData.java b/kie-api/src/main/java/org/kie/api/pmml/PMMLRequestData.java
--- a/kie-api/src/main/java/org/kie/api/pmml/PMMLRequestData.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-api/src/main/java/org/kie/api/pmml/PMMLRequestData.java	(date 1680178598864)
@@ -22,12 +22,12 @@
 import java.util.Map;
 import java.util.stream.Collectors;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElementWrapper;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElementWrapper;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlType;
 
 /**
  * This class provides a vanilla mechanism for sending data to
Index: kie-drl/kie-drl-implementations/kie-drl-kiesession-local/kie-drl-kiesession-local-runtime/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-drl/kie-drl-implementations/kie-drl-kiesession-local/kie-drl-kiesession-local-runtime/pom.xml b/kie-drl/kie-drl-implementations/kie-drl-kiesession-local/kie-drl-kiesession-local-runtime/pom.xml
--- a/kie-drl/kie-drl-implementations/kie-drl-kiesession-local/kie-drl-kiesession-local-runtime/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-drl/kie-drl-implementations/kie-drl-kiesession-local/kie-drl-kiesession-local-runtime/pom.xml	(date 1680177976945)
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>kie-drl-kiesession-local</artifactId>
         <groupId>org.kie</groupId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: kie-api/src/main/java/org/kie/api/pmml/PMML4OutputField.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-api/src/main/java/org/kie/api/pmml/PMML4OutputField.java b/kie-api/src/main/java/org/kie/api/pmml/PMML4OutputField.java
--- a/kie-api/src/main/java/org/kie/api/pmml/PMML4OutputField.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-api/src/main/java/org/kie/api/pmml/PMML4OutputField.java	(date 1680178598864)
@@ -15,11 +15,11 @@
  */
 package org.kie.api.pmml;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.definition.type.Role;
 import org.kie.api.definition.type.Role.Type;
Index: kie-api/src/main/java/org/kie/api/pmml/DoubleFieldOutput.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-api/src/main/java/org/kie/api/pmml/DoubleFieldOutput.java b/kie-api/src/main/java/org/kie/api/pmml/DoubleFieldOutput.java
--- a/kie-api/src/main/java/org/kie/api/pmml/DoubleFieldOutput.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-api/src/main/java/org/kie/api/pmml/DoubleFieldOutput.java	(date 1680178598864)
@@ -15,9 +15,9 @@
  */
 package org.kie.api.pmml;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 @XmlRootElement(name="value")
 @XmlAccessorType(XmlAccessType.FIELD)
Index: kie-api/src/main/java/org/kie/api/pmml/PMML4DataField.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-api/src/main/java/org/kie/api/pmml/PMML4DataField.java b/kie-api/src/main/java/org/kie/api/pmml/PMML4DataField.java
--- a/kie-api/src/main/java/org/kie/api/pmml/PMML4DataField.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-api/src/main/java/org/kie/api/pmml/PMML4DataField.java	(date 1680178598864)
@@ -15,10 +15,10 @@
  */
 package org.kie.api.pmml;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.definition.type.Role;
 import org.kie.api.definition.type.Role.Type;
Index: kie-api/src/main/java/org/kie/api/task/model/Status.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-api/src/main/java/org/kie/api/task/model/Status.java b/kie-api/src/main/java/org/kie/api/task/model/Status.java
--- a/kie-api/src/main/java/org/kie/api/task/model/Status.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-api/src/main/java/org/kie/api/task/model/Status.java	(date 1680178598865)
@@ -16,7 +16,7 @@
 
 package org.kie.api.task.model;
 
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlType;
 
 
 @XmlType
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactoryTest.java	(date 1680178598927)
@@ -21,7 +21,7 @@
 import java.util.List;
 import java.util.Map;
 
-import javax.xml.bind.JAXBException;
+import jakarta.xml.bind.JAXBException;
 
 import org.dmg.pmml.mining.MiningModel;
 import org.junit.jupiter.api.BeforeAll;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLMiningModelFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLMiningModelFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLMiningModelFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLMiningModelFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLMiningModelFactoryTest.java	(date 1680178598927)
@@ -22,7 +22,7 @@
 import java.util.List;
 import java.util.Map;
 
-import javax.xml.bind.JAXBException;
+import jakarta.xml.bind.JAXBException;
 
 import com.github.javaparser.ast.CompilationUnit;
 import com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentFactoryTest.java	(date 1680178598928)
@@ -22,7 +22,7 @@
 import java.util.List;
 import java.util.Map;
 
-import javax.xml.bind.JAXBException;
+import jakarta.xml.bind.JAXBException;
 
 import com.github.javaparser.ast.CompilationUnit;
 import com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/AbstractKiePMMLFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/AbstractKiePMMLFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/AbstractKiePMMLFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/AbstractKiePMMLFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/AbstractKiePMMLFactoryTest.java	(date 1680178598927)
@@ -20,7 +20,7 @@
 import java.io.IOException;
 import java.util.List;
 
-import javax.xml.bind.JAXBException;
+import jakarta.xml.bind.JAXBException;
 
 import org.dmg.pmml.DataDictionary;
 import org.dmg.pmml.DerivedField;
Index: kie-drl/kie-drl-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-drl/kie-drl-api/pom.xml b/kie-drl/kie-drl-api/pom.xml
--- a/kie-drl/kie-drl-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-drl/kie-drl-api/pom.xml	(date 1680177976048)
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>kie-drl</artifactId>
         <groupId>org.kie</groupId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/api/PersistenceContextManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/api/PersistenceContextManager.java b/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/api/PersistenceContextManager.java
--- a/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/api/PersistenceContextManager.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/api/PersistenceContextManager.java	(date 1680178598895)
@@ -19,7 +19,7 @@
 import org.kie.api.command.Command;
 import org.kie.api.runtime.KieSession;
 
-import javax.transaction.Synchronization;
+import jakarta.transaction.Synchronization;
 
 public interface PersistenceContextManager {
     
Index: kie-drl/kie-drl-implementations/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-drl/kie-drl-implementations/pom.xml b/kie-drl/kie-drl-implementations/pom.xml
--- a/kie-drl/kie-drl-implementations/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-drl/kie-drl-implementations/pom.xml	(date 1680177976069)
@@ -7,7 +7,7 @@
     <parent>
         <artifactId>kie-drl</artifactId>
         <groupId>org.kie</groupId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <name>KIE :: DRL :: Implementations</name>
Index: kie-drl/kie-drl-compilation-common/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-drl/kie-drl-compilation-common/pom.xml b/kie-drl/kie-drl-compilation-common/pom.xml
--- a/kie-drl/kie-drl-compilation-common/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-drl/kie-drl-compilation-common/pom.xml	(date 1680177976059)
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>kie-drl</artifactId>
         <groupId>org.kie</groupId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: kie-drl/kie-drl-tests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-drl/kie-drl-tests/pom.xml b/kie-drl/kie-drl-tests/pom.xml
--- a/kie-drl/kie-drl-tests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-drl/kie-drl-tests/pom.xml	(date 1680177976129)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>kie-drl</artifactId>
     <groupId>org.kie</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-docs/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-docs/pom.xml b/drools-docs/pom.xml
--- a/drools-docs/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-docs/pom.xml	(date 1680177973741)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: kie-drl/kie-drl-runtime-common/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-drl/kie-drl-runtime-common/pom.xml b/kie-drl/kie-drl-runtime-common/pom.xml
--- a/kie-drl/kie-drl-runtime-common/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-drl/kie-drl-runtime-common/pom.xml	(date 1680177976077)
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>kie-drl</artifactId>
         <groupId>org.kie</groupId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: kie-drl/kie-drl-tests-without-index-file/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-drl/kie-drl-tests-without-index-file/pom.xml b/kie-drl/kie-drl-tests-without-index-file/pom.xml
--- a/kie-drl/kie-drl-tests-without-index-file/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-drl/kie-drl-tests-without-index-file/pom.xml	(date 1680177976103)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>kie-drl</artifactId>
     <groupId>org.kie</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/api/TransactionSynchronizationRegistryHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/api/TransactionSynchronizationRegistryHelper.java b/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/api/TransactionSynchronizationRegistryHelper.java
--- a/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/api/TransactionSynchronizationRegistryHelper.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/api/TransactionSynchronizationRegistryHelper.java	(date 1680178598895)
@@ -15,7 +15,7 @@
 
 package org.drools.persistence.api;
 
-import javax.transaction.TransactionSynchronizationRegistry;
+import jakarta.transaction.TransactionSynchronizationRegistry;
 
 import org.drools.persistence.jta.JtaTransactionSynchronizationAdapter;
 import org.slf4j.Logger;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/pom.xml	(date 1680177977462)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-drools-tree</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManager.java b/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManager.java
--- a/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManager.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManager.java	(date 1680178598895)
@@ -20,10 +20,10 @@
 import java.util.Map;
 import javax.naming.InitialContext;
 import javax.naming.NamingException;
-import javax.transaction.Status;
-import javax.transaction.SystemException;
-import javax.transaction.TransactionSynchronizationRegistry;
-import javax.transaction.UserTransaction;
+import jakarta.transaction.Status;
+import jakarta.transaction.SystemException;
+import jakarta.transaction.TransactionSynchronizationRegistry;
+import jakarta.transaction.UserTransaction;
 
 import org.drools.persistence.api.TransactionManager;
 import org.drools.persistence.api.TransactionSynchronization;
@@ -69,7 +69,7 @@
 
     UserTransaction                      ut;
     Object                               tsr;
-    javax.transaction.TransactionManager tm;
+    jakarta.transaction.TransactionManager tm;
     
     public JtaTransactionManager(Object ut,
                                  Object tsr,
@@ -80,20 +80,20 @@
             this.ut = ( UserTransaction ) ( (ut != null) ? ut : findUserTransaction() );
         }
         
-        if ( tm instanceof javax.transaction.TransactionManager ) {
-            this.tm = ( javax.transaction.TransactionManager ) tm;
+        if ( tm instanceof jakarta.transaction.TransactionManager ) {
+            this.tm = ( jakarta.transaction.TransactionManager ) tm;
         } else {
-            this.tm = ( javax.transaction.TransactionManager ) ( (tm != null) ? tm : findTransactionManager( this.ut ) );
+            this.tm = ( jakarta.transaction.TransactionManager ) ( (tm != null) ? tm : findTransactionManager( this.ut ) );
         }
         this.tsr = (tsr != null) ? tsr : findTransactionSynchronizationRegistry( this.ut,
                                                                                  this.tm );
     }
 
-    protected javax.transaction.TransactionManager findTransactionManager(UserTransaction ut) {
-        if ( ut instanceof javax.transaction.TransactionManager ) {
+    protected jakarta.transaction.TransactionManager findTransactionManager(UserTransaction ut) {
+        if ( ut instanceof jakarta.transaction.TransactionManager ) {
             logger.debug( "JTA UserTransaction object [{}] implements TransactionManager",
                           ut );
-            return (javax.transaction.TransactionManager) ut;
+            return (jakarta.transaction.TransactionManager) ut;
         }
 
         InitialContext context;
@@ -112,7 +112,7 @@
                 continue;
             }
             try {
-                javax.transaction.TransactionManager tm = (javax.transaction.TransactionManager) context.lookup( jndiName );
+                jakarta.transaction.TransactionManager tm = (jakarta.transaction.TransactionManager) context.lookup( jndiName );
                 logger.debug( "JTA TransactionManager found at fallback JNDI location [{}]",
                               jndiName );
                 return tm;
@@ -146,7 +146,7 @@
     }
 
     protected Object findTransactionSynchronizationRegistry(UserTransaction ut,
-                                                            javax.transaction.TransactionManager tm) {
+                                                            jakarta.transaction.TransactionManager tm) {
 
         if ( transactionSynchronizationRegistryClass == null ) {
             // JTA 1.1 API not present - skip.
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-model/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-model/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-model/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-model/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-model/pom.xml	(date 1680177977492)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-drools-tree</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/TransactionLockInterceptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/TransactionLockInterceptor.java b/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/TransactionLockInterceptor.java
--- a/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/TransactionLockInterceptor.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/TransactionLockInterceptor.java	(date 1680178598894)
@@ -19,7 +19,7 @@
 import java.util.Set;
 import java.util.concurrent.CopyOnWriteArraySet;
 import java.util.concurrent.locks.ReentrantLock;
-import javax.transaction.Status;
+import jakarta.transaction.Status;
 
 import org.drools.commands.impl.AbstractInterceptor;
 import org.drools.persistence.api.OrderedTransactionSynchronization;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-tests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-tests/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-tests/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-tests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-tests/pom.xml	(date 1680177977523)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-drools-tree</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionSynchronizationAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionSynchronizationAdapter.java b/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionSynchronizationAdapter.java
--- a/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionSynchronizationAdapter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionSynchronizationAdapter.java	(date 1680178598894)
@@ -15,8 +15,8 @@
 
 package org.drools.persistence.jta;
 
-import javax.transaction.Status;
-import javax.transaction.Synchronization;
+import jakarta.transaction.Status;
+import jakarta.transaction.Synchronization;
 
 import org.drools.persistence.api.TransactionManager;
 import org.drools.persistence.api.TransactionSynchronization;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-evaluator/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-evaluator/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-evaluator/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-evaluator/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-evaluator/pom.xml	(date 1680177977481)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-drools-tree</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManagerFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManagerFactory.java b/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManagerFactory.java
--- a/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManagerFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManagerFactory.java	(date 1680178598894)
@@ -32,8 +32,8 @@
     }
 
     /**
-     * Creates a {@link JtaTransactionManager} instance using any of the {@link javax.transaction.UserTransaction},
-     * {@link javax.transaction.TransactionSynchronizationRegistry}, and {@link javax.transaction.TransactionManager}
+     * Creates a {@link JtaTransactionManager} instance using any of the {@link jakarta.transaction.UserTransaction},
+     * {@link jakarta.transaction.TransactionSynchronizationRegistry}, and {@link jakarta.transaction.TransactionManager}
      * present in {@code env}.
      * 
      * @param env
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/src/test/java/org/kie/pmml/models/drools/scorecard/compiler/factories/KiePMMLScorecardModelCharacteristicASTFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/src/test/java/org/kie/pmml/models/drools/scorecard/compiler/factories/KiePMMLScorecardModelCharacteristicASTFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/src/test/java/org/kie/pmml/models/drools/scorecard/compiler/factories/KiePMMLScorecardModelCharacteristicASTFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/src/test/java/org/kie/pmml/models/drools/scorecard/compiler/factories/KiePMMLScorecardModelCharacteristicASTFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/src/test/java/org/kie/pmml/models/drools/scorecard/compiler/factories/KiePMMLScorecardModelCharacteristicASTFactoryTest.java	(date 1680178598929)
@@ -368,7 +368,7 @@
         DATA_TYPE dataType = dataDictionary.getDataFields().stream().filter(dataField -> dataField.getName().equals(simplePredicate.getField()))
                 .map(dataField -> DATA_TYPE.byName(dataField.getDataType().value()))
                 .findFirst()
-                .orElseThrow(() -> new RuntimeException("Failed to find DataField for " + simplePredicate.getField().getValue()));
+                .orElseThrow(() -> new RuntimeException("Failed to find DataField for " +simplePredicate.getField()));
         return getCorrectlyFormattedResult(simplePredicate.getValue(), dataType);
     }
 
Index: drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/TriggerUpdateTransactionSynchronization.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/TriggerUpdateTransactionSynchronization.java b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/TriggerUpdateTransactionSynchronization.java
--- a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/TriggerUpdateTransactionSynchronization.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/TriggerUpdateTransactionSynchronization.java	(date 1680178598896)
@@ -16,7 +16,7 @@
 package org.drools.persistence;
 
 import java.util.Set;
-import javax.persistence.EntityManager;
+import jakarta.persistence.EntityManager;
 
 import org.drools.persistence.api.TransactionManager;
 import org.drools.persistence.api.TransactionManagerHelper;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-core/src/test/java/org/kie/pmml/compiler/testingutils/TestingModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-core/src/test/java/org/kie/pmml/compiler/testingutils/TestingModel.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-core/src/test/java/org/kie/pmml/compiler/testingutils/TestingModel.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-core/src/test/java/org/kie/pmml/compiler/testingutils/TestingModel.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-core/src/test/java/org/kie/pmml/compiler/testingutils/TestingModel.java	(date 1680178598919)
@@ -104,5 +104,15 @@
         return modelName;
     }
 
+    @Override
+    public MiningFunction requireMiningFunction() {
+        return null;
+    }
+
+    @Override
+    public MiningSchema requireMiningSchema() {
+        return null;
+    }
+
 
 }
Index: drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/JpaPersistenceContext.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/JpaPersistenceContext.java b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/JpaPersistenceContext.java
--- a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/JpaPersistenceContext.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/JpaPersistenceContext.java	(date 1680178598897)
@@ -17,8 +17,8 @@
 
 import java.lang.reflect.Field;
 
-import javax.persistence.EntityManager;
-import javax.persistence.LockModeType;
+import jakarta.persistence.EntityManager;
+import jakarta.persistence.LockModeType;
 
 import org.drools.persistence.api.PersistenceContext;
 import org.drools.persistence.api.PersistentSession;
Index: drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/AbstractPersistenceContextManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/AbstractPersistenceContextManager.java b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/AbstractPersistenceContextManager.java
--- a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/AbstractPersistenceContextManager.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/AbstractPersistenceContextManager.java	(date 1680178598896)
@@ -15,8 +15,8 @@
  */
  package org.drools.persistence.jpa;
 
-import javax.persistence.EntityManager;
-import javax.persistence.EntityManagerFactory;
+import jakarta.persistence.EntityManager;
+import jakarta.persistence.EntityManagerFactory;
 
 import org.drools.persistence.api.TransactionManager;
 import org.kie.api.runtime.Environment;
Index: drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/OptimisticLockRetryInterceptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/OptimisticLockRetryInterceptor.java b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/OptimisticLockRetryInterceptor.java
--- a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/OptimisticLockRetryInterceptor.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/OptimisticLockRetryInterceptor.java	(date 1680178598897)
@@ -22,7 +22,7 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import javax.persistence.OptimisticLockException;
+import jakarta.persistence.OptimisticLockException;
 import java.util.concurrent.atomic.AtomicInteger;
 
 /**
Index: drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/JpaPersistenceContextManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/JpaPersistenceContextManager.java b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/JpaPersistenceContextManager.java
--- a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/JpaPersistenceContextManager.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/JpaPersistenceContextManager.java	(date 1680178598898)
@@ -15,7 +15,7 @@
  */
  package org.drools.persistence.jpa;
 
-import javax.persistence.EntityManager;
+import jakarta.persistence.EntityManager;
 
 import org.drools.persistence.api.PersistenceContext;
 import org.drools.persistence.api.PersistenceContextManager;
Index: drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/JPAPlaceholderResolverStrategy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/JPAPlaceholderResolverStrategy.java b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/JPAPlaceholderResolverStrategy.java
--- a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/JPAPlaceholderResolverStrategy.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/JPAPlaceholderResolverStrategy.java	(date 1680178598897)
@@ -25,11 +25,11 @@
 import java.util.HashSet;
 import java.util.Set;
 
-import javax.persistence.EntityManager;
-import javax.persistence.EntityManagerFactory;
-import javax.persistence.Persistence;
-import javax.persistence.metamodel.EntityType;
-import javax.persistence.metamodel.Metamodel;
+import jakarta.persistence.EntityManager;
+import jakarta.persistence.EntityManagerFactory;
+import jakarta.persistence.Persistence;
+import jakarta.persistence.metamodel.EntityType;
+import jakarta.persistence.metamodel.Metamodel;
 import org.drools.core.common.DroolsObjectInputStream;
 import org.drools.persistence.api.TransactionAware;
 import org.drools.persistence.api.TransactionManager;
Index: drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/EntityPersister.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/EntityPersister.java b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/EntityPersister.java
--- a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/EntityPersister.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/EntityPersister.java	(date 1680178598897)
@@ -19,7 +19,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import javax.persistence.EntityManager;
+import jakarta.persistence.EntityManager;
 
 public class EntityPersister {
 
Index: drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/MappedVariable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/MappedVariable.java b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/MappedVariable.java
--- a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/MappedVariable.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/MappedVariable.java	(date 1680178598897)
@@ -17,13 +17,13 @@
 package org.drools.persistence.jpa.marshaller;
 
 import java.io.Serializable;
-import javax.persistence.Column;
-import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
-import javax.persistence.GenerationType;
-import javax.persistence.Id;
-import javax.persistence.SequenceGenerator;
-import javax.persistence.Version;
+import jakarta.persistence.Column;
+import jakarta.persistence.Entity;
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.GenerationType;
+import jakarta.persistence.Id;
+import jakarta.persistence.SequenceGenerator;
+import jakarta.persistence.Version;
 
 @Entity
 @SequenceGenerator(name="mappedVarIdSeq", sequenceName="MAPPED_VAR_ID_SEQ")
Index: drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/VariableEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/VariableEntity.java b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/VariableEntity.java
--- a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/VariableEntity.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/jpa/marshaller/VariableEntity.java	(date 1680178598897)
@@ -19,11 +19,11 @@
 import java.io.Serializable;
 import java.util.HashSet;
 import java.util.Set;
-import javax.persistence.CascadeType;
-import javax.persistence.JoinColumn;
-import javax.persistence.MappedSuperclass;
-import javax.persistence.OneToMany;
-import javax.persistence.FetchType;
+import jakarta.persistence.CascadeType;
+import jakarta.persistence.JoinColumn;
+import jakarta.persistence.MappedSuperclass;
+import jakarta.persistence.OneToMany;
+import jakarta.persistence.FetchType;
 
 @MappedSuperclass
 public abstract class VariableEntity implements Serializable {
Index: drools-examples-api/named-kiesession/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-examples-api/named-kiesession/pom.xml b/drools-examples-api/named-kiesession/pom.xml
--- a/drools-examples-api/named-kiesession/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-examples-api/named-kiesession/pom.xml	(date 1680177975518)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-examples-api</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>named-kiesession</artifactId>
Index: drools-examples-api/default-kiesession/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-examples-api/default-kiesession/pom.xml b/drools-examples-api/default-kiesession/pom.xml
--- a/drools-examples-api/default-kiesession/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-examples-api/default-kiesession/pom.xml	(date 1680177974710)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-examples-api</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>default-kiesession</artifactId>
Index: kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-api/pom.xml b/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-api/pom.xml
--- a/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-api/pom.xml	(date 1680177976722)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-evaluator</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-dmn/kie-dmn-model/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-model/pom.xml b/kie-dmn/kie-dmn-model/pom.xml
--- a/kie-dmn/kie-dmn-model/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-model/pom.xml	(date 1680177975794)
@@ -7,7 +7,7 @@
   <parent>
     <artifactId>kie-dmn</artifactId>
     <groupId>org.kie</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>kie-dmn-model</artifactId>
Index: drools-drl-quarkus-extension/drools-drl-quarkus-integration-test-hotreload/src/main/java/org/drools/quarkus/test/hotreload/FindAdultEndpoint.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test-hotreload/src/main/java/org/drools/quarkus/test/hotreload/FindAdultEndpoint.java b/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test-hotreload/src/main/java/org/drools/quarkus/test/hotreload/FindAdultEndpoint.java
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test-hotreload/src/main/java/org/drools/quarkus/test/hotreload/FindAdultEndpoint.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test-hotreload/src/main/java/org/drools/quarkus/test/hotreload/FindAdultEndpoint.java	(date 1680178598934)
@@ -17,12 +17,12 @@
 
 import java.util.ArrayList;
 import java.util.List;
-import javax.inject.Inject;
-import javax.ws.rs.Consumes;
-import javax.ws.rs.POST;
-import javax.ws.rs.Path;
-import javax.ws.rs.Produces;
-import javax.ws.rs.core.MediaType;
+import jakarta.inject.Inject;
+import jakarta.ws.rs.Consumes;
+import jakarta.ws.rs.POST;
+import jakarta.ws.rs.Path;
+import jakarta.ws.rs.Produces;
+import jakarta.ws.rs.core.MediaType;
 
 import org.kie.api.runtime.KieRuntimeBuilder;
 import org.kie.api.runtime.KieSession;
Index: drools-examples-api/default-kiesession-from-file/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-examples-api/default-kiesession-from-file/pom.xml b/drools-examples-api/default-kiesession-from-file/pom.xml
--- a/drools-examples-api/default-kiesession-from-file/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-examples-api/default-kiesession-from-file/pom.xml	(date 1680177974700)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-examples-api</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>default-kiesession-from-file</artifactId>
Index: drools-examples-api/kiebase-inclusion/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-examples-api/kiebase-inclusion/pom.xml b/drools-examples-api/kiebase-inclusion/pom.xml
--- a/drools-examples-api/kiebase-inclusion/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-examples-api/kiebase-inclusion/pom.xml	(date 1680177975459)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-examples-api</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>kiebase-inclusion</artifactId>
Index: kie-dmn/kie-dmn-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-api/pom.xml b/kie-dmn/kie-dmn-api/pom.xml
--- a/kie-dmn/kie-dmn-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-api/pom.xml	(date 1680177975569)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-dmn</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>kie-dmn-api</artifactId>
Index: drools-examples-api/kie-module-from-multiple-files/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-examples-api/kie-module-from-multiple-files/pom.xml b/drools-examples-api/kie-module-from-multiple-files/pom.xml
--- a/drools-examples-api/kie-module-from-multiple-files/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-examples-api/kie-module-from-multiple-files/pom.xml	(date 1680177975450)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-examples-api</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>kie-module-from-multiple-files</artifactId>
Index: kie-dmn/kie-dmn-backend/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-backend/pom.xml b/kie-dmn/kie-dmn-backend/pom.xml
--- a/kie-dmn/kie-dmn-backend/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-backend/pom.xml	(date 1680177975590)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-dmn</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>kie-dmn-backend</artifactId>
Index: drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/info/WorkItemInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/info/WorkItemInfo.java b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/info/WorkItemInfo.java
--- a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/info/WorkItemInfo.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/info/WorkItemInfo.java	(date 1680178598898)
@@ -20,15 +20,15 @@
 import java.io.IOException;
 import java.io.ObjectInputStream;
 import java.util.Date;
-import javax.persistence.Column;
-import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
-import javax.persistence.GenerationType;
-import javax.persistence.Id;
-import javax.persistence.Lob;
-import javax.persistence.SequenceGenerator;
-import javax.persistence.Transient;
-import javax.persistence.Version;
+import jakarta.persistence.Column;
+import jakarta.persistence.Entity;
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.GenerationType;
+import jakarta.persistence.Id;
+import jakarta.persistence.Lob;
+import jakarta.persistence.SequenceGenerator;
+import jakarta.persistence.Transient;
+import jakarta.persistence.Version;
 
 import org.drools.core.marshalling.MarshallerReaderContext;
 import org.drools.core.marshalling.MarshallerWriteContext;
Index: drools-examples-api/named-kiesession-from-file/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-examples-api/named-kiesession-from-file/pom.xml b/drools-examples-api/named-kiesession-from-file/pom.xml
--- a/drools-examples-api/named-kiesession-from-file/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-examples-api/named-kiesession-from-file/pom.xml	(date 1680177975510)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-examples-api</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <name>Drools :: API examples :: Named KieSession from File</name>
Index: kie-dmn/kie-dmn-feel/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-feel/pom.xml b/kie-dmn/kie-dmn-feel/pom.xml
--- a/kie-dmn/kie-dmn-feel/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-feel/pom.xml	(date 1680177975741)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-dmn</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>kie-dmn-feel</artifactId>
Index: drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/info/SessionInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/info/SessionInfo.java b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/info/SessionInfo.java
--- a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/info/SessionInfo.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/info/SessionInfo.java	(date 1680178598898)
@@ -17,15 +17,15 @@
 
 import java.util.Date;
 
-import javax.persistence.Column;
-import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
-import javax.persistence.GenerationType;
-import javax.persistence.Id;
-import javax.persistence.Lob;
-import javax.persistence.SequenceGenerator;
-import javax.persistence.Transient;
-import javax.persistence.Version;
+import jakarta.persistence.Column;
+import jakarta.persistence.Entity;
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.GenerationType;
+import jakarta.persistence.Id;
+import jakarta.persistence.Lob;
+import jakarta.persistence.SequenceGenerator;
+import jakarta.persistence.Transient;
+import jakarta.persistence.Version;
 
 import org.drools.persistence.api.PersistentSession;
 import org.drools.persistence.SessionMarshallingHelper;
Index: drools-examples-api/kiemodulemodel-example/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-examples-api/kiemodulemodel-example/pom.xml b/drools-examples-api/kiemodulemodel-example/pom.xml
--- a/drools-examples-api/kiemodulemodel-example/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-examples-api/kiemodulemodel-example/pom.xml	(date 1680177975492)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-examples-api</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>kiemodulemodel-example</artifactId>
Index: kie-dmn/kie-dmn-validation/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-validation/pom.xml b/kie-dmn/kie-dmn-validation/pom.xml
--- a/kie-dmn/kie-dmn-validation/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-validation/pom.xml	(date 1680177976007)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-dmn</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <artifactId>kie-dmn-validation</artifactId>
     <packaging>jar</packaging>
Index: drools-examples-api/kiefilesystem-example/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-examples-api/kiefilesystem-example/pom.xml b/drools-examples-api/kiefilesystem-example/pom.xml
--- a/drools-examples-api/kiefilesystem-example/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-examples-api/kiefilesystem-example/pom.xml	(date 1680177975478)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-examples-api</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>kiefilesystem-example</artifactId>
Index: kie-dmn/kie-dmn-validation-bootstrap/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-validation-bootstrap/pom.xml b/kie-dmn/kie-dmn-validation-bootstrap/pom.xml
--- a/kie-dmn/kie-dmn-validation-bootstrap/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-validation-bootstrap/pom.xml	(date 1680177975950)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-dmn</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <artifactId>kie-dmn-validation-bootstrap</artifactId>
 
Index: drools-examples-api/multiple-kbases/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-examples-api/multiple-kbases/pom.xml b/drools-examples-api/multiple-kbases/pom.xml
--- a/drools-examples-api/multiple-kbases/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-examples-api/multiple-kbases/pom.xml	(date 1680177975500)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-examples-api</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>multiple-kbases</artifactId>
Index: kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-core/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-core/pom.xml b/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-core/pom.xml
--- a/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-core/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-core/pom.xml	(date 1680177976733)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-evaluator</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-dmn/kie-dmn-tck/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-tck/pom.xml b/kie-dmn/kie-dmn-tck/pom.xml
--- a/kie-dmn/kie-dmn-tck/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-tck/pom.xml	(date 1680177975904)
@@ -21,7 +21,7 @@
   <parent>
     <artifactId>kie-dmn</artifactId>
     <groupId>org.kie</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
   <packaging>pom</packaging>
Index: drools-examples-api/kiecontainer-from-kierepo/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-examples-api/kiecontainer-from-kierepo/pom.xml b/drools-examples-api/kiecontainer-from-kierepo/pom.xml
--- a/drools-examples-api/kiecontainer-from-kierepo/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-examples-api/kiecontainer-from-kierepo/pom.xml	(date 1680177975468)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-examples-api</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>kiecontainer-from-kierepo</artifactId>
Index: kie-dmn/kie-dmn-openapi/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-openapi/pom.xml b/kie-dmn/kie-dmn-openapi/pom.xml
--- a/kie-dmn/kie-dmn-openapi/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-openapi/pom.xml	(date 1680178598931)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-dmn</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <artifactId>kie-dmn-openapi</artifactId>
   
@@ -59,11 +59,6 @@
     <dependency>
       <groupId>com.sun.xml.bind</groupId>
       <artifactId>jaxb-core</artifactId>
-      <scope>provided</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.sun.xml.bind</groupId>
-      <artifactId>jaxb-impl</artifactId>
       <scope>provided</scope>
     </dependency>
     <dependency>
Index: kie-dmn/kie-dmn-trisotech/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-trisotech/pom.xml b/kie-dmn/kie-dmn-trisotech/pom.xml
--- a/kie-dmn/kie-dmn-trisotech/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-trisotech/pom.xml	(date 1680177975934)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-dmn</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <artifactId>kie-dmn-trisotech</artifactId>
 
Index: drools-examples-api/reactive-kiesession/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-examples-api/reactive-kiesession/pom.xml b/drools-examples-api/reactive-kiesession/pom.xml
--- a/drools-examples-api/reactive-kiesession/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-examples-api/reactive-kiesession/pom.xml	(date 1680177975526)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-examples-api</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>reactive-kiesession</artifactId>
Index: kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-utils/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-utils/pom.xml b/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-utils/pom.xml
--- a/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-utils/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-utils/pom.xml	(date 1680177976743)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>kie-pmml-evaluator</artifactId>
     <groupId>org.kie</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-dmn/kie-dmn-legacy-tests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-legacy-tests/pom.xml b/kie-dmn/kie-dmn-legacy-tests/pom.xml
--- a/kie-dmn/kie-dmn-legacy-tests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-legacy-tests/pom.xml	(date 1680178598932)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-dmn</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <artifactId>kie-dmn-legacy-tests</artifactId>
   
@@ -97,11 +97,6 @@
     <dependency>
       <groupId>com.sun.xml.bind</groupId>
       <artifactId>jaxb-core</artifactId>
-      <scope>provided</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.sun.xml.bind</groupId>
-      <artifactId>jaxb-impl</artifactId>
       <scope>provided</scope>
     </dependency>
     <dependency>
Index: kie-dmn/kie-dmn-pmml-tests-parent/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-pmml-tests-parent/pom.xml b/kie-dmn/kie-dmn-pmml-tests-parent/pom.xml
--- a/kie-dmn/kie-dmn-pmml-tests-parent/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-pmml-tests-parent/pom.xml	(date 1680177975846)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>kie-dmn</artifactId>
     <groupId>org.kie</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
   <packaging>pom</packaging>
Index: kie-dmn/kie-dmn-signavio/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-signavio/pom.xml b/kie-dmn/kie-dmn-signavio/pom.xml
--- a/kie-dmn/kie-dmn-signavio/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-signavio/pom.xml	(date 1680177975881)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-dmn</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <artifactId>kie-dmn-signavio</artifactId>
   
Index: kie-dmn/kie-dmn-core-jsr223-jq/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-core-jsr223-jq/pom.xml b/kie-dmn/kie-dmn-core-jsr223-jq/pom.xml
--- a/kie-dmn/kie-dmn-core-jsr223-jq/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-core-jsr223-jq/pom.xml	(date 1680177975606)
@@ -3,7 +3,7 @@
     <parent>
         <groupId>org.kie</groupId>
         <artifactId>kie-dmn</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
     <artifactId>kie-dmn-core-jsr223-jq</artifactId>
     <name>KIE :: Decision Model Notation :: JSR-223 JQ ScriptEngine</name>
Index: kie-dmn/kie-dmn-xls2dmn-cli/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-xls2dmn-cli/pom.xml b/kie-dmn/kie-dmn-xls2dmn-cli/pom.xml
--- a/kie-dmn/kie-dmn-xls2dmn-cli/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-xls2dmn-cli/pom.xml	(date 1680177976041)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-dmn</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <artifactId>kie-dmn-xls2dmn-cli</artifactId>
   <packaging>jar</packaging>
Index: efesto/efesto-core/efesto-common-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/efesto/efesto-core/efesto-common-api/pom.xml b/efesto/efesto-core/efesto-common-api/pom.xml
--- a/efesto/efesto-core/efesto-common-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/efesto/efesto-core/efesto-common-api/pom.xml	(date 1680177976500)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>efesto-core</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>efesto-common-api</artifactId>
Index: kie-dmn/kie-dmn-ruleset2dmn-parent/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-ruleset2dmn-parent/pom.xml b/kie-dmn/kie-dmn-ruleset2dmn-parent/pom.xml
--- a/kie-dmn/kie-dmn-ruleset2dmn-parent/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-ruleset2dmn-parent/pom.xml	(date 1680177975852)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-dmn</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <artifactId>kie-dmn-ruleset2dmn-parent</artifactId>
   <packaging>pom</packaging>
Index: kie-dmn/kie-dmn-core-jsr223/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-core-jsr223/pom.xml b/kie-dmn/kie-dmn-core-jsr223/pom.xml
--- a/kie-dmn/kie-dmn-core-jsr223/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-core-jsr223/pom.xml	(date 1680177975639)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-dmn</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <artifactId>kie-dmn-core-jsr223</artifactId>
   <name>KIE :: Decision Model Notation :: Core JSR-223</name>
Index: efesto/efesto-core/efesto-common-core/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/efesto/efesto-core/efesto-common-core/pom.xml b/efesto/efesto-core/efesto-common-core/pom.xml
--- a/efesto/efesto-core/efesto-common-core/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/efesto/efesto-core/efesto-common-core/pom.xml	(date 1680177976510)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>efesto-core</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>efesto-common-core</artifactId>
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtil.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtil.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtil.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtil.java	(date 1680178598908)
@@ -21,11 +21,10 @@
 import java.util.Optional;
 import java.util.stream.Collectors;
 
-import javax.xml.bind.JAXBException;
+import jakarta.xml.bind.JAXBException;
 
 import org.dmg.pmml.DataField;
 import org.dmg.pmml.DataType;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.MathContext;
 import org.dmg.pmml.MiningField;
 import org.dmg.pmml.MiningFunction;
@@ -166,7 +165,7 @@
         String cleanedName = model.getModelName().replaceAll("[^A-Za-z0-9]", "");
         String fieldName = String.format(TARGETFIELD_TEMPLATE, cleanedName);
         DataField toReturn = new DataField();
-        toReturn.setName(FieldName.create(fieldName));
+        toReturn.setName(fieldName);
         toReturn.setOpType(targetOpType);
         toReturn.setDataType(targetDataType);
         return Optional.of(toReturn);
@@ -338,7 +337,7 @@
                                 .filter(targetField -> outputField.getTargetField().equals(targetField.getName()))
                                 .findFirst()
                                 .orElseThrow(() -> new KiePMMLException("Failed to find a target field for OutputField "
-                                                                                + outputField.getName().getValue()));
+                                                                                +outputField.getName()));
                     }
                     if (referencedField == null && (outputField.getResultFeature() == null || outputField.getResultFeature().equals(ResultFeature.PREDICTED_VALUE))) { // default predictedValue
                         referencedField = targetFields.stream()
@@ -351,7 +350,7 @@
                         return;
                     }
                     if (referencedField != null) {
-                        FieldName targetFieldName = referencedField.getName();
+                         String targetFieldName = referencedField.getName();
                         DataField dataField = dataFields.stream()
                                 .filter(df -> df.getName().equals(targetFieldName))
                                 .findFirst()
Index: drools-model/drools-codegen-common/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-model/drools-codegen-common/pom.xml b/drools-model/drools-codegen-common/pom.xml
--- a/drools-model/drools-codegen-common/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-model/drools-codegen-common/pom.xml	(date 1680177974725)
@@ -7,7 +7,7 @@
     <parent>
         <groupId>org.drools</groupId>
         <artifactId>drools-model</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <groupId>org.drools</groupId>
Index: efesto/efesto-core/efesto-compilation-manager/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/efesto/efesto-core/efesto-compilation-manager/pom.xml b/efesto/efesto-core/efesto-compilation-manager/pom.xml
--- a/efesto/efesto-core/efesto-compilation-manager/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/efesto/efesto-core/efesto-compilation-manager/pom.xml	(date 1680177976515)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>efesto-core</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <packaging>pom</packaging>
 
Index: drools-model/drools-canonical-model/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-model/drools-canonical-model/pom.xml b/drools-model/drools-canonical-model/pom.xml
--- a/drools-model/drools-canonical-model/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-model/drools-canonical-model/pom.xml	(date 1680177974719)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-model</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <name>Drools :: Canonical Model</name>
Index: drools-model/drools-model-compiler/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-model/drools-model-compiler/pom.xml b/drools-model/drools-model-compiler/pom.xml
--- a/drools-model/drools-model-compiler/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-model/drools-model-compiler/pom.xml	(date 1680177975071)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-model</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <name>Drools :: Model :: Compiler</name>
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLOutputFieldInstanceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLOutputFieldInstanceFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLOutputFieldInstanceFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLOutputFieldInstanceFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLOutputFieldInstanceFactory.java	(date 1680178598909)
@@ -35,8 +35,8 @@
     }
 
     public static KiePMMLOutputField getKiePMMLOutputField(final OutputField outputField) {
-        String name = outputField.getName() != null ? outputField.getName().getValue() : "" + outputField.hashCode();
-        final String targetField = outputField.getTargetField() != null ? outputField.getTargetField().getValue() :
+        String name = outputField.getName() != null ?outputField.getName() : "" + outputField.hashCode();
+        final String targetField = outputField.getTargetField() != null ?outputField.getTargetField() :
                 null;
         final RESULT_FEATURE resultFeature = outputField.getResultFeature() != null ?
                 RESULT_FEATURE.byName(outputField.getResultFeature().value()) : null;
Index: efesto/efesto-core/efesto-runtime-manager/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/efesto/efesto-core/efesto-runtime-manager/pom.xml b/efesto/efesto-core/efesto-runtime-manager/pom.xml
--- a/efesto/efesto-core/efesto-runtime-manager/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/efesto/efesto-core/efesto-runtime-manager/pom.xml	(date 1680177976521)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>efesto-core</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <packaging>pom</packaging>
 
Index: drools-model/drools-mvel-parser/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-model/drools-mvel-parser/pom.xml b/drools-model/drools-mvel-parser/pom.xml
--- a/drools-model/drools-mvel-parser/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-model/drools-mvel-parser/pom.xml	(date 1680177975109)
@@ -4,7 +4,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-model</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <name>Drools :: MVEL Parser</name>
Index: drools-model/drools-model-codegen/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-model/drools-model-codegen/pom.xml b/drools-model/drools-model-codegen/pom.xml
--- a/drools-model/drools-model-codegen/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-model/drools-model-codegen/pom.xml	(date 1680177975052)
@@ -7,7 +7,7 @@
     <parent>
         <groupId>org.drools</groupId>
         <artifactId>drools-model</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <groupId>org.drools</groupId>
Index: kie-archetypes/kie-drools-dmn-archetype/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-archetypes/kie-drools-dmn-archetype/pom.xml b/kie-archetypes/kie-drools-dmn-archetype/pom.xml
--- a/kie-archetypes/kie-drools-dmn-archetype/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-archetypes/kie-drools-dmn-archetype/pom.xml	(date 1680177976148)
@@ -4,7 +4,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-archetypes</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>kie-drools-dmn-archetype</artifactId>
Index: drools-test-coverage/standalone/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/standalone/pom.xml b/drools-test-coverage/standalone/pom.xml
--- a/drools-test-coverage/standalone/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/standalone/pom.xml	(date 1680177974513)
@@ -8,7 +8,7 @@
   <parent>
     <groupId>org.drools.testcoverage</groupId>
     <artifactId>drools-test-coverage-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>drools-standalone-parent</artifactId>
Index: drools-model/drools-mvel-compiler/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-model/drools-mvel-compiler/pom.xml b/drools-model/drools-mvel-compiler/pom.xml
--- a/drools-model/drools-mvel-compiler/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-model/drools-mvel-compiler/pom.xml	(date 1680177975083)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-model</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <name>Drools :: MVEL Compiler</name>
Index: kie-archetypes/kie-drools-exec-model-archetype/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-archetypes/kie-drools-exec-model-archetype/pom.xml b/kie-archetypes/kie-drools-exec-model-archetype/pom.xml
--- a/kie-archetypes/kie-drools-exec-model-archetype/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-archetypes/kie-drools-exec-model-archetype/pom.xml	(date 1680177976166)
@@ -4,7 +4,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-archetypes</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>kie-drools-exec-model-archetype</artifactId>
Index: drools-test-coverage/test-suite/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/test-suite/pom.xml b/drools-test-coverage/test-suite/pom.xml
--- a/drools-test-coverage/test-suite/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/test-suite/pom.xml	(date 1680177974552)
@@ -8,7 +8,7 @@
   <parent>
     <groupId>org.drools.testcoverage</groupId>
     <artifactId>drools-test-coverage-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>drools-test-suite</artifactId>
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLSimplePredicateInstanceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLSimplePredicateInstanceFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLSimplePredicateInstanceFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLSimplePredicateInstanceFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLSimplePredicateInstanceFactory.java	(date 1680178598909)
@@ -41,9 +41,9 @@
     static KiePMMLSimplePredicate getKiePMMLSimplePredicate(final SimplePredicate simplePredicate,
                                                             final List<Field<?>> fields) {
         final List<KiePMMLExtension> kiePMMLExtensions = getKiePMMLExtensions(simplePredicate.getExtensions());
-        DataType dataType = getDataType(fields, simplePredicate.getField().getValue());
+        DataType dataType = getDataType(fields,simplePredicate.getField());
         Object value = DATA_TYPE.byName(dataType.value()).getActualValue(simplePredicate.getValue());
-        return KiePMMLSimplePredicate.builder(simplePredicate.getField().getValue(),
+        return KiePMMLSimplePredicate.builder(simplePredicate.getField(),
                                               kiePMMLExtensions,
                                               OPERATOR.byName(simplePredicate.getOperator().value()))
                 .withValue(value)
Index: kie-archetypes/kie-drools-exec-model-ruleunit-archetype/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-archetypes/kie-drools-exec-model-ruleunit-archetype/pom.xml b/kie-archetypes/kie-drools-exec-model-ruleunit-archetype/pom.xml
--- a/kie-archetypes/kie-drools-exec-model-ruleunit-archetype/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-archetypes/kie-drools-exec-model-ruleunit-archetype/pom.xml	(date 1680177976184)
@@ -4,7 +4,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-archetypes</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>kie-drools-exec-model-ruleunit-archetype</artifactId>
Index: drools-test-coverage/test-integration-nomvel/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/test-integration-nomvel/pom.xml b/drools-test-coverage/test-integration-nomvel/pom.xml
--- a/drools-test-coverage/test-integration-nomvel/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/test-integration-nomvel/pom.xml	(date 1680178598903)
@@ -21,7 +21,7 @@
     <parent>
         <artifactId>drools-test-coverage-parent</artifactId>
         <groupId>org.drools.testcoverage</groupId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
@@ -99,11 +99,6 @@
         <dependency>
             <groupId>com.sun.xml.bind</groupId>
             <artifactId>jaxb-core</artifactId>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>com.sun.xml.bind</groupId>
-            <artifactId>jaxb-impl</artifactId>
             <scope>test</scope>
         </dependency>
         <dependency>
Index: drools-impact-analysis/drools-impact-analysis-graph/drools-impact-analysis-graph-graphviz/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-impact-analysis/drools-impact-analysis-graph/drools-impact-analysis-graph-graphviz/pom.xml b/drools-impact-analysis/drools-impact-analysis-graph/drools-impact-analysis-graph-graphviz/pom.xml
--- a/drools-impact-analysis/drools-impact-analysis-graph/drools-impact-analysis-graph-graphviz/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-impact-analysis/drools-impact-analysis-graph/drools-impact-analysis-graph-graphviz/pom.xml	(date 1680177976491)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>drools-impact-analysis-graph</artifactId>
     <groupId>org.drools</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-drl-quarkus-extension/drools-drl-quarkus/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus/pom.xml b/drools-drl-quarkus-extension/drools-drl-quarkus/pom.xml
--- a/drools-drl-quarkus-extension/drools-drl-quarkus/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus/pom.xml	(date 1680177974976)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.drools</groupId>
         <artifactId>drools-drl-quarkus-extension</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <name>Drools :: Quarkus Extension :: Runtime</name>
Index: drools-test-coverage/test-compiler-integration/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/test-compiler-integration/pom.xml b/drools-test-coverage/test-compiler-integration/pom.xml
--- a/drools-test-coverage/test-compiler-integration/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/test-compiler-integration/pom.xml	(date 1680177974596)
@@ -21,7 +21,7 @@
   <parent>
     <artifactId>drools-test-coverage-parent</artifactId>
     <groupId>org.drools.testcoverage</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-impact-analysis/drools-impact-analysis-graph/drools-impact-analysis-graph-common/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-impact-analysis/drools-impact-analysis-graph/drools-impact-analysis-graph-common/pom.xml b/drools-impact-analysis/drools-impact-analysis-graph/drools-impact-analysis-graph-common/pom.xml
--- a/drools-impact-analysis/drools-impact-analysis-graph/drools-impact-analysis-graph-common/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-impact-analysis/drools-impact-analysis-graph/drools-impact-analysis-graph-common/pom.xml	(date 1680177976479)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>drools-impact-analysis-graph</artifactId>
     <groupId>org.drools</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-drl-quarkus-extension/drools-drl-quarkus-util-deployment/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-util-deployment/pom.xml b/drools-drl-quarkus-extension/drools-drl-quarkus-util-deployment/pom.xml
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-util-deployment/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-util-deployment/pom.xml	(date 1680177974943)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.drools</groupId>
         <artifactId>drools-drl-quarkus-extension</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <name>Drools :: Quarkus Extension :: Util :: Deployment</name>
Index: drools-test-coverage/test-integration-noxml/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/test-integration-noxml/pom.xml b/drools-test-coverage/test-integration-noxml/pom.xml
--- a/drools-test-coverage/test-integration-noxml/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/test-integration-noxml/pom.xml	(date 1680177974685)
@@ -21,7 +21,7 @@
     <parent>
         <artifactId>drools-test-coverage-parent</artifactId>
         <groupId>org.drools.testcoverage</groupId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/pom.xml b/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/pom.xml
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test/pom.xml	(date 1680177974838)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.drools</groupId>
         <artifactId>drools-drl-quarkus-extension</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <name>Drools :: Quarkus Extension :: Integration Test</name>
Index: drools-test-coverage/test-integration-notms/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/test-integration-notms/pom.xml b/drools-test-coverage/test-integration-notms/pom.xml
--- a/drools-test-coverage/test-integration-notms/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/test-integration-notms/pom.xml	(date 1680177974666)
@@ -21,7 +21,7 @@
     <parent>
         <artifactId>drools-test-coverage-parent</artifactId>
         <groupId>org.drools.testcoverage</groupId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: drools-drl-quarkus-extension/drools-drl-quarkus-deployment/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-deployment/pom.xml b/drools-drl-quarkus-extension/drools-drl-quarkus-deployment/pom.xml
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-deployment/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-deployment/pom.xml	(date 1680177974752)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.drools</groupId>
       <artifactId>drools-drl-quarkus-extension</artifactId>
-      <version>8.37.0-SNAPSHOT</version>
+      <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
   <name>Drools :: Quarkus Extension :: Deployment</name>
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLDiscretizeInstanceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLDiscretizeInstanceFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLDiscretizeInstanceFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLDiscretizeInstanceFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLDiscretizeInstanceFactory.java	(date 1680178598909)
@@ -43,7 +43,7 @@
         String defaultValue = discretize.getDefaultValue() != null ? discretize.getDefaultValue().toString() : null;
         DATA_TYPE dataType = discretize.getDataType() != null ? DATA_TYPE.byName(discretize.getDataType().value()) :
                 null;
-        return new KiePMMLDiscretize(discretize.getField().getValue(),
+        return new KiePMMLDiscretize(discretize.getField(),
                                      getKiePMMLExtensions(discretize.getExtensions()),
                                      discretizeBins,
                                      mapMissingTo,
Index: drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/pom.xml b/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/pom.xml
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-ruleunit-integration-test/pom.xml	(date 1680177974929)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.drools</groupId>
         <artifactId>drools-drl-quarkus-extension</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <name>Drools :: Quarkus Extension :: Integration Test with Rule Unit</name>
Index: drools-test-coverage/test-integration-ruleunits/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/test-integration-ruleunits/pom.xml b/drools-test-coverage/test-integration-ruleunits/pom.xml
--- a/drools-test-coverage/test-integration-ruleunits/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/test-integration-ruleunits/pom.xml	(date 1680177974692)
@@ -14,7 +14,7 @@
   <parent>
     <artifactId>drools-test-coverage-parent</artifactId>
     <groupId>org.drools.testcoverage</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLFieldRefInstanceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLFieldRefInstanceFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLFieldRefInstanceFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLFieldRefInstanceFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLFieldRefInstanceFactory.java	(date 1680178598910)
@@ -29,7 +29,7 @@
     }
 
     static KiePMMLFieldRef getKiePMMLFieldRef(final FieldRef fieldRef) {
-        return new KiePMMLFieldRef(fieldRef.getField().getValue(),
+        return new KiePMMLFieldRef(fieldRef.getField(),
                                    KiePMMLExtensionInstanceFactory.getKiePMMLExtensions(fieldRef.getExtensions()),
                                    fieldRef.getMapMissingTo());
     }
Index: drools-drl-quarkus-extension/drools-drl-quarkus-integration-test-hotreload/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test-hotreload/pom.xml b/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test-hotreload/pom.xml
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test-hotreload/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-integration-test-hotreload/pom.xml	(date 1680177974791)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.drools</groupId>
         <artifactId>drools-drl-quarkus-extension</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <name>Drools :: Quarkus Extension :: Integration Test :: Hotreload</name>
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLTargetInstanceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLTargetInstanceFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLTargetInstanceFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLTargetInstanceFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLTargetInstanceFactory.java	(date 1680178598909)
@@ -42,7 +42,7 @@
                 .map(KiePMMLTargetInstanceFactory::getKieTargetValue)
                 .collect(Collectors.toList()) : Collections.emptyList();
         final OP_TYPE opType = target.getOpType() != null ? OP_TYPE.byName(target.getOpType().value()) : null;
-        final String field = target.getField() != null ? target.getField().getValue() : null;
+        final String field = target.getField() != null ?target.getField() : null;
         final CAST_INTEGER castInteger = target.getCastInteger() != null ?
                 CAST_INTEGER.byName(target.getCastInteger().value()) : null;
         TargetField targetField = new TargetField(targetValues,
Index: drools-test-coverage/standalone/kie-ci-with-domain/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/standalone/kie-ci-with-domain/pom.xml b/drools-test-coverage/standalone/kie-ci-with-domain/pom.xml
--- a/drools-test-coverage/standalone/kie-ci-with-domain/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/standalone/kie-ci-with-domain/pom.xml	(date 1680177976342)
@@ -8,7 +8,7 @@
   <parent>
     <groupId>org.drools.testcoverage</groupId>
     <artifactId>drools-standalone-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>drools-kie-ci-with-domain-parent</artifactId>
Index: drools-drl-quarkus-extension/drools-drl-quarkus-examples/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-examples/pom.xml b/drools-drl-quarkus-extension/drools-drl-quarkus-examples/pom.xml
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-examples/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-examples/pom.xml	(date 1680177974758)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.drools</groupId>
         <artifactId>drools-drl-quarkus-extension</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <name>Drools :: Quarkus Extension :: Examples</name>
Index: drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/pom.xml b/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/pom.xml
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/pom.xml	(date 1680177974883)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.drools</groupId>
         <artifactId>drools-drl-quarkus-extension</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <name>Drools :: Quarkus Extension :: Quickstart Integration Test</name>
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLMiningFieldInstanceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLMiningFieldInstanceFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLMiningFieldInstanceFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLMiningFieldInstanceFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLMiningFieldInstanceFactory.java	(date 1680178598908)
@@ -42,7 +42,7 @@
     }
 
     public static KiePMMLMiningField getKiePMMLMiningField(final MiningField toConvert, final Field<?> field) {
-        String name = toConvert.getName() != null ? toConvert.getName().getValue() : "" + toConvert.hashCode();
+        String name = toConvert.getName() != null ?toConvert.getName() : "" + toConvert.hashCode();
         final FIELD_USAGE_TYPE fieldUsageType = toConvert.getUsageType() != null ?
                 FIELD_USAGE_TYPE.byName(toConvert.getUsageType().value()) : null;
         final OP_TYPE opType = toConvert.getOpType() != null ? OP_TYPE.byName(toConvert.getOpType().value()) : null;
Index: drools-test-coverage/standalone/kie-ci-with-domain/test-domain/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/standalone/kie-ci-with-domain/test-domain/pom.xml b/drools-test-coverage/standalone/kie-ci-with-domain/test-domain/pom.xml
--- a/drools-test-coverage/standalone/kie-ci-with-domain/test-domain/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/standalone/kie-ci-with-domain/test-domain/pom.xml	(date 1680177976823)
@@ -8,7 +8,7 @@
   <parent>
     <groupId>org.drools.testcoverage</groupId>
     <artifactId>drools-kie-ci-with-domain-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>drools-kie-ci-with-domain-test-domain</artifactId>
Index: drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-multiunit/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-multiunit/pom.xml b/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-multiunit/pom.xml
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-multiunit/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-multiunit/pom.xml	(date 1680177976424)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-drl-quarkus-examples</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <name>Drools :: Quarkus Extension :: Examples :: Reactive</name>
Index: drools-test-coverage/standalone/kie-ci-without-domain/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/standalone/kie-ci-without-domain/pom.xml b/drools-test-coverage/standalone/kie-ci-without-domain/pom.xml
--- a/drools-test-coverage/standalone/kie-ci-without-domain/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/standalone/kie-ci-without-domain/pom.xml	(date 1680177976351)
@@ -8,7 +8,7 @@
   <parent>
     <groupId>org.drools.testcoverage</groupId>
     <artifactId>drools-standalone-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>drools-kie-ci-without-domain-parent</artifactId>
Index: drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/pom.xml b/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/pom.xml
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/pom.xml	(date 1680177976465)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-drl-quarkus-examples</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <name>Drools :: Quarkus Extension :: Examples :: Reactive</name>
Index: drools-core/src/main/java/org/drools/core/common/ObjectFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-core/src/main/java/org/drools/core/common/ObjectFactory.java b/drools-core/src/main/java/org/drools/core/common/ObjectFactory.java
--- a/drools-core/src/main/java/org/drools/core/common/ObjectFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-core/src/main/java/org/drools/core/common/ObjectFactory.java	(date 1680178598874)
@@ -16,7 +16,7 @@
 
 package org.drools.core.common;
 
-import javax.xml.bind.annotation.XmlRegistry;
+import jakarta.xml.bind.annotation.XmlRegistry;
 
 @XmlRegistry
 public class ObjectFactory {
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLNormDiscreteInstanceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLNormDiscreteInstanceFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLNormDiscreteInstanceFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLNormDiscreteInstanceFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLNormDiscreteInstanceFactory.java	(date 1680178598910)
@@ -35,7 +35,7 @@
 
     static KiePMMLNormDiscrete getKiePMMLNormDiscrete(final NormDiscrete normDiscrete) {
         List<KiePMMLExtension> extensions = getKiePMMLExtensions(normDiscrete.getExtensions());
-        return new KiePMMLNormDiscrete(normDiscrete.getField().getValue(),
+        return new KiePMMLNormDiscrete(normDiscrete.getField(),
                                        extensions,
                                        normDiscrete.getValue().toString(),
                                        normDiscrete.getMapMissingTo());
Index: drools-test-coverage/standalone/kie-ci-with-domain/tests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/standalone/kie-ci-with-domain/tests/pom.xml b/drools-test-coverage/standalone/kie-ci-with-domain/tests/pom.xml
--- a/drools-test-coverage/standalone/kie-ci-with-domain/tests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/standalone/kie-ci-with-domain/tests/pom.xml	(date 1680177976855)
@@ -8,7 +8,7 @@
   <parent>
     <groupId>org.drools.testcoverage</groupId>
     <artifactId>drools-kie-ci-with-domain-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>drools-kie-ci-with-domain-tests</artifactId>
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLNormContinuousInstanceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLNormContinuousInstanceFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLNormContinuousInstanceFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLNormContinuousInstanceFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLNormContinuousInstanceFactory.java	(date 1680178598910)
@@ -40,7 +40,7 @@
         final List<KiePMMLLinearNorm> linearNorms = normContinuous.hasLinearNorms() ?
                 getKiePMMLLinearNorms(normContinuous.getLinearNorms()) : Collections.emptyList();
         final OUTLIER_TREATMENT_METHOD outlierTreatmentMethod = normContinuous.getOutliers() != null ? OUTLIER_TREATMENT_METHOD.byName(normContinuous.getOutliers().value()) : null;
-        return new KiePMMLNormContinuous(normContinuous.getField().getValue(), getKiePMMLExtensions(normContinuous.getExtensions()), linearNorms, outlierTreatmentMethod, normContinuous.getMapMissingTo());
+        return new KiePMMLNormContinuous(normContinuous.getField(), getKiePMMLExtensions(normContinuous.getExtensions()), linearNorms, outlierTreatmentMethod, normContinuous.getMapMissingTo());
     }
 
 }
Index: drools-test-coverage/standalone/kie-ci-with-domain/test-kjar/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/standalone/kie-ci-with-domain/test-kjar/pom.xml b/drools-test-coverage/standalone/kie-ci-with-domain/test-kjar/pom.xml
--- a/drools-test-coverage/standalone/kie-ci-with-domain/test-kjar/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/standalone/kie-ci-with-domain/test-kjar/pom.xml	(date 1680177976829)
@@ -8,7 +8,7 @@
   <parent>
     <groupId>org.drools.testcoverage</groupId>
     <artifactId>drools-kie-ci-with-domain-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>drools-kie-ci-with-domain-test-kjar</artifactId>
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLSimpleSetPredicateInstanceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLSimpleSetPredicateInstanceFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLSimpleSetPredicateInstanceFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLSimpleSetPredicateInstanceFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLSimpleSetPredicateInstanceFactory.java	(date 1680178598910)
@@ -34,7 +34,7 @@
     }
 
     static KiePMMLSimpleSetPredicate getKiePMMLSimpleSetPredicate(final SimpleSetPredicate simpleSetPredicate) {
-        return KiePMMLSimpleSetPredicate.builder(simpleSetPredicate.getField().getValue(),
+        return KiePMMLSimpleSetPredicate.builder(simpleSetPredicate.getField(),
                                                  getKiePMMLExtensions(simpleSetPredicate.getExtensions()),
                                                  ARRAY_TYPE.byName(simpleSetPredicate.getArray().getType().value()),
                                                  IN_NOTIN.byName(simpleSetPredicate.getBooleanOperator().value()))
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLTextIndexInstanceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLTextIndexInstanceFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLTextIndexInstanceFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLTextIndexInstanceFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLTextIndexInstanceFactory.java	(date 1680178598909)
@@ -42,7 +42,7 @@
                 COUNT_HITS.byName(textIndex.getCountHits().value()) : null;
         final String wordSeparatorCharacterRE = textIndex.getWordSeparatorCharacterRE() != null ?
                 StringEscapeUtils.escapeJava(textIndex.getWordSeparatorCharacterRE()) : null;
-        return KiePMMLTextIndex.builder(textIndex.getTextField().getValue(),
+        return KiePMMLTextIndex.builder(textIndex.getTextField(),
                                         getKiePMMLExtensions(textIndex.getExtensions()),
                                         getKiePMMLExpression(textIndex.getExpression()))
                 .withTextIndexNormalizations(getKiePMMLTextIndexNormalizations(textIndex.getTextIndexNormalizations()))
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLDerivedFieldInstanceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLDerivedFieldInstanceFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLDerivedFieldInstanceFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLDerivedFieldInstanceFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLDerivedFieldInstanceFactory.java	(date 1680178598909)
@@ -49,10 +49,9 @@
 
     static KiePMMLDerivedField getKiePMMLDerivedField(final DerivedField derivedField,
                                                       final List<Field<?>> fields) {
-        DataType dataType = derivedField.getDataType() != null ? derivedField.getDataType() : getDataType(fields,
-                                                                                                          derivedField.getName().getValue());
+        DataType dataType = derivedField.getDataType() != null ? derivedField.getDataType() : getDataType(fields,derivedField.getName());
         OP_TYPE opType = derivedField.getOpType() != null ? OP_TYPE.byName(derivedField.getOpType().value()) : null;
-        return KiePMMLDerivedField.builder(derivedField.getName().getValue(),
+        return KiePMMLDerivedField.builder(derivedField.getName(),
                                            getKiePMMLExtensions(derivedField.getExtensions()),
                                            DATA_TYPE.byName(dataType.value()),
                                            opType,
Index: drools-core/src/main/java/org/drools/core/common/DisconnectedFactHandle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-core/src/main/java/org/drools/core/common/DisconnectedFactHandle.java b/drools-core/src/main/java/org/drools/core/common/DisconnectedFactHandle.java
--- a/drools-core/src/main/java/org/drools/core/common/DisconnectedFactHandle.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-core/src/main/java/org/drools/core/common/DisconnectedFactHandle.java	(date 1680178598873)
@@ -21,13 +21,13 @@
 import java.io.ObjectOutput;
 import java.util.function.Consumer;
 import java.util.function.Predicate;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlSchemaType;
-import javax.xml.bind.annotation.XmlSeeAlso;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlSchemaType;
+import jakarta.xml.bind.annotation.XmlSeeAlso;
 
 import org.drools.core.WorkingMemoryEntryPoint;
 import org.drools.core.base.ArrayElements;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLParameterFieldInstanceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLParameterFieldInstanceFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLParameterFieldInstanceFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLParameterFieldInstanceFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLParameterFieldInstanceFactory.java	(date 1680178598909)
@@ -44,7 +44,7 @@
         DATA_TYPE dataType = parameterField.getDataType() != null ?
                 DATA_TYPE.byName(parameterField.getDataType().value()) : null;
         OP_TYPE opType = parameterField.getOpType() != null ? OP_TYPE.byName(parameterField.getOpType().value()) : null;
-        return KiePMMLParameterField.builder(parameterField.getName().getValue(),
+        return KiePMMLParameterField.builder(parameterField.getName(),
                                              Collections.emptyList())
                 .withDataType(dataType)
                 .withOpType(opType)
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLFieldColumnPairInstanceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLFieldColumnPairInstanceFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLFieldColumnPairInstanceFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLFieldColumnPairInstanceFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLFieldColumnPairInstanceFactory.java	(date 1680178598909)
@@ -38,7 +38,7 @@
     }
 
     static KiePMMLFieldColumnPair getKiePMMLFieldColumnPair(final FieldColumnPair fieldColumnPair) {
-        return new KiePMMLFieldColumnPair(fieldColumnPair.getField().getValue(),
+        return new KiePMMLFieldColumnPair(fieldColumnPair.getField(),
                                           getKiePMMLExtensions(fieldColumnPair.getExtensions()),
                                           fieldColumnPair.getColumn());
     }
Index: efesto/efesto-core/efesto-runtime-manager/efesto-runtime-manager-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/efesto/efesto-core/efesto-runtime-manager/efesto-runtime-manager-api/pom.xml b/efesto/efesto-core/efesto-runtime-manager/efesto-runtime-manager-api/pom.xml
--- a/efesto/efesto-core/efesto-runtime-manager/efesto-runtime-manager-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/efesto/efesto-core/efesto-runtime-manager/efesto-runtime-manager-api/pom.xml	(date 1680177976923)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>efesto-runtime-manager</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
  <artifactId>efesto-runtime-manager-api</artifactId>
Index: drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/TransactionTestObject.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/TransactionTestObject.java b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/TransactionTestObject.java
--- a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/TransactionTestObject.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/TransactionTestObject.java	(date 1680178598898)
@@ -17,13 +17,13 @@
 
 import java.io.Serializable;
 
-import javax.persistence.Column;
-import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
-import javax.persistence.GenerationType;
-import javax.persistence.Id;
-import javax.persistence.OneToOne;
-import javax.persistence.SequenceGenerator;
+import jakarta.persistence.Column;
+import jakarta.persistence.Entity;
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.GenerationType;
+import jakarta.persistence.Id;
+import jakarta.persistence.OneToOne;
+import jakarta.persistence.SequenceGenerator;
 
 /**
  * This class is used to test transactions. 
Index: drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/JtaTransactionManagerFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/JtaTransactionManagerFactoryTest.java b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/JtaTransactionManagerFactoryTest.java
--- a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/JtaTransactionManagerFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/JtaTransactionManagerFactoryTest.java	(date 1680178598899)
@@ -16,13 +16,13 @@
 
 import javax.naming.InitialContext;
 import javax.naming.NamingException;
-import javax.transaction.HeuristicMixedException;
-import javax.transaction.HeuristicRollbackException;
-import javax.transaction.NotSupportedException;
-import javax.transaction.RollbackException;
-import javax.transaction.SystemException;
-import javax.transaction.TransactionManager;
-import javax.transaction.UserTransaction;
+import jakarta.transaction.HeuristicMixedException;
+import jakarta.transaction.HeuristicRollbackException;
+import jakarta.transaction.NotSupportedException;
+import jakarta.transaction.RollbackException;
+import jakarta.transaction.SystemException;
+import jakarta.transaction.TransactionManager;
+import jakarta.transaction.UserTransaction;
 import org.drools.core.impl.EnvironmentFactory;
 
 import static org.assertj.core.api.Assertions.assertThat;
Index: efesto/efesto-core/efesto-runtime-manager/efesto-runtime-manager-core/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/efesto/efesto-core/efesto-runtime-manager/efesto-runtime-manager-core/pom.xml b/efesto/efesto-core/efesto-runtime-manager/efesto-runtime-manager-core/pom.xml
--- a/efesto/efesto-core/efesto-runtime-manager/efesto-runtime-manager-core/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/efesto/efesto-core/efesto-runtime-manager/efesto-runtime-manager-core/pom.xml	(date 1680177976936)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>efesto-runtime-manager</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>efesto-runtime-manager-core</artifactId>
Index: drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/TransactionTestCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/TransactionTestCommand.java b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/TransactionTestCommand.java
--- a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/TransactionTestCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/TransactionTestCommand.java	(date 1680178598899)
@@ -16,8 +16,8 @@
 package org.drools.persistence.jta;
 
 import java.util.HashMap;
-import javax.persistence.EntityManager;
-import javax.persistence.EntityManagerFactory;
+import jakarta.persistence.EntityManager;
+import jakarta.persistence.EntityManagerFactory;
 
 import com.arjuna.ats.jta.TransactionManager;
 import org.drools.core.base.MapGlobalResolver;
Index: drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/JtaTransactionManagerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/JtaTransactionManagerTest.java b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/JtaTransactionManagerTest.java
--- a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/JtaTransactionManagerTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/jta/JtaTransactionManagerTest.java	(date 1680178598899)
@@ -20,10 +20,10 @@
 import java.util.Map;
 import javax.naming.InitialContext;
 import javax.naming.NamingException;
-import javax.persistence.EntityManager;
-import javax.persistence.EntityManagerFactory;
-import javax.transaction.RollbackException;
-import javax.transaction.UserTransaction;
+import jakarta.persistence.EntityManager;
+import jakarta.persistence.EntityManagerFactory;
+import jakarta.transaction.RollbackException;
+import jakarta.transaction.UserTransaction;
 
 import org.drools.commands.impl.CommandBasedStatefulKnowledgeSessionImpl;
 import org.drools.kiesession.rulebase.InternalKnowledgeBase;
Index: kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueMap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueMap.java b/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueMap.java
--- a/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueMap.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueMap.java	(date 1680178598869)
@@ -23,10 +23,10 @@
 import java.util.Map;
 import java.util.Set;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlType;
 
 import static org.kie.internal.jaxb.StringKeyObjectValueMapXmlAdapter.createJaxbStringObjectMapEntry;
 import static org.kie.internal.jaxb.StringKeyObjectValueMapXmlAdapter.deserializeObject;
Index: drools-core/src/main/java/org/drools/core/common/DefaultFactHandle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-core/src/main/java/org/drools/core/common/DefaultFactHandle.java b/drools-core/src/main/java/org/drools/core/common/DefaultFactHandle.java
--- a/drools-core/src/main/java/org/drools/core/common/DefaultFactHandle.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-core/src/main/java/org/drools/core/common/DefaultFactHandle.java	(date 1680178598874)
@@ -20,10 +20,10 @@
 import java.util.function.Consumer;
 import java.util.function.Predicate;
 import java.util.stream.Stream;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.drools.core.WorkingMemoryEntryPoint;
 import org.drools.core.factmodel.traits.TraitTypeEnum;
Index: kie-internal/src/main/java/org/kie/internal/jaxb/LocalDateTimeXmlAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/jaxb/LocalDateTimeXmlAdapter.java b/kie-internal/src/main/java/org/kie/internal/jaxb/LocalDateTimeXmlAdapter.java
--- a/kie-internal/src/main/java/org/kie/internal/jaxb/LocalDateTimeXmlAdapter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/jaxb/LocalDateTimeXmlAdapter.java	(date 1680178598869)
@@ -21,7 +21,7 @@
 import java.time.format.DateTimeFormatterBuilder;
 import java.time.temporal.ChronoField;
 
-import javax.xml.bind.annotation.adapters.XmlAdapter;
+import jakarta.xml.bind.annotation.adapters.XmlAdapter;
 
 public class LocalDateTimeXmlAdapter extends XmlAdapter<String, LocalDateTime> {
 
Index: kie-internal/src/main/java/org/kie/internal/jaxb/LocalDateXmlAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/jaxb/LocalDateXmlAdapter.java b/kie-internal/src/main/java/org/kie/internal/jaxb/LocalDateXmlAdapter.java
--- a/kie-internal/src/main/java/org/kie/internal/jaxb/LocalDateXmlAdapter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/jaxb/LocalDateXmlAdapter.java	(date 1680178598868)
@@ -18,7 +18,7 @@
 import java.time.DateTimeException;
 import java.time.LocalDate;
 
-import javax.xml.bind.annotation.adapters.XmlAdapter;
+import jakarta.xml.bind.annotation.adapters.XmlAdapter;
 
 public class LocalDateXmlAdapter extends XmlAdapter<String, LocalDate> {
 
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldRefFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldRefFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldRefFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldRefFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldRefFactory.java	(date 1680178598912)
@@ -70,7 +70,7 @@
                                                                       FIELD_REF, toReturn)))
                 .asObjectCreationExpr();
 
-        final StringLiteralExpr nameExpr = new StringLiteralExpr(fieldRef.getField().getValue());
+        final StringLiteralExpr nameExpr = new StringLiteralExpr(fieldRef.getField());
         final Expression mapMissingToExpr = getExpressionForObject(fieldRef.getMapMissingTo());
         objectCreationExpr.getArguments().set(0, nameExpr);
         objectCreationExpr.getArguments().set(2, mapMissingToExpr);
Index: kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueMap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueMap.java b/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueMap.java
--- a/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueMap.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueMap.java	(date 1680178598869)
@@ -23,10 +23,10 @@
 import java.util.Map;
 import java.util.Set;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlType;
 
 /**
  * This implements {@link Map} in order to fool JSON..
Index: drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/kie/persistence/session/JpaPersistentStatefulSessionTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/kie/persistence/session/JpaPersistentStatefulSessionTest.java b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/kie/persistence/session/JpaPersistentStatefulSessionTest.java
--- a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/kie/persistence/session/JpaPersistentStatefulSessionTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/kie/persistence/session/JpaPersistentStatefulSessionTest.java	(date 1680178598900)
@@ -26,7 +26,7 @@
 import java.util.concurrent.atomic.AtomicInteger;
 
 import javax.naming.InitialContext;
-import javax.transaction.UserTransaction;
+import jakarta.transaction.UserTransaction;
 
 import org.drools.core.FlowSessionConfiguration;
 import org.drools.core.SessionConfiguration;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLModelFactoryUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLModelFactoryUtils.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLModelFactoryUtils.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLModelFactoryUtils.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLModelFactoryUtils.java	(date 1680178598914)
@@ -611,7 +611,7 @@
         BlockStmt body = new BlockStmt();
         NodeList<Expression> arguments = new NodeList<>();
         for (org.dmg.pmml.MiningField miningField : miningFields) {
-            String miningFieldVariableName = getSanitizedVariableName(miningField.getName().getValue()).toLowerCase();
+            String miningFieldVariableName = getSanitizedVariableName(miningField.getName()).toLowerCase();
             BlockStmt toAdd = getMiningFieldVariableDeclaration(miningFieldVariableName, miningField, fields);
             toAdd.getStatements().forEach(body::addStatement);
             arguments.add(new NameExpr(miningFieldVariableName));
@@ -631,7 +631,7 @@
         BlockStmt body = new BlockStmt();
         NodeList<Expression> arguments = new NodeList<>();
         for (org.dmg.pmml.OutputField outputField : outputFields) {
-            String outputFieldVariableName = getSanitizedVariableName(outputField.getName().getValue()).toLowerCase();
+            String outputFieldVariableName = getSanitizedVariableName(outputField.getName()).toLowerCase();
             BlockStmt toAdd = getOutputFieldVariableDeclaration(outputFieldVariableName, outputField);
             toAdd.getStatements().forEach(body::addStatement);
             arguments.add(new NameExpr(outputFieldVariableName));
Index: kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueEntry.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueEntry.java b/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueEntry.java
--- a/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueEntry.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueEntry.java	(date 1680178598868)
@@ -17,12 +17,12 @@
 
 import java.util.Map.Entry;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlSchemaType;
-import javax.xml.bind.annotation.XmlType;
-import javax.xml.bind.annotation.XmlValue;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlSchemaType;
+import jakarta.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlValue;
 
 
 @XmlType
Index: kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueMapXmlAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueMapXmlAdapter.java b/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueMapXmlAdapter.java
--- a/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueMapXmlAdapter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyObjectValueMapXmlAdapter.java	(date 1680178598869)
@@ -25,7 +25,7 @@
 import java.util.Map;
 import java.util.Map.Entry;
 
-import javax.xml.bind.annotation.adapters.XmlAdapter;
+import jakarta.xml.bind.annotation.adapters.XmlAdapter;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldColumnPairFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldColumnPairFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldColumnPairFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldColumnPairFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldColumnPairFactory.java	(date 1680178598913)
@@ -67,7 +67,7 @@
         final ObjectCreationExpr objectCreationExpr = variableDeclarator.getInitializer()
                 .orElseThrow(() -> new KiePMMLException(String.format(MISSING_VARIABLE_INITIALIZER_TEMPLATE, FIELDCOLUMNPAIR, toReturn)))
         .asObjectCreationExpr();
-        objectCreationExpr.getArguments().set(0, new StringLiteralExpr(fieldColumnPair.getField().getValue()));
+        objectCreationExpr.getArguments().set(0, new StringLiteralExpr(fieldColumnPair.getField()));
         objectCreationExpr.getArguments().set(2, new StringLiteralExpr(fieldColumnPair.getColumn()));
         return toReturn;
     }
Index: kie-internal/src/main/java/org/kie/internal/jaxb/LocalTimeXmlAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/jaxb/LocalTimeXmlAdapter.java b/kie-internal/src/main/java/org/kie/internal/jaxb/LocalTimeXmlAdapter.java
--- a/kie-internal/src/main/java/org/kie/internal/jaxb/LocalTimeXmlAdapter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/jaxb/LocalTimeXmlAdapter.java	(date 1680178598869)
@@ -21,7 +21,7 @@
 import java.time.format.DateTimeFormatterBuilder;
 import java.time.temporal.ChronoField;
 
-import javax.xml.bind.annotation.adapters.XmlAdapter;
+import jakarta.xml.bind.annotation.adapters.XmlAdapter;
 
 public class LocalTimeXmlAdapter extends XmlAdapter<String, LocalTime> {
 
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormDiscreteFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormDiscreteFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormDiscreteFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormDiscreteFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormDiscreteFactory.java	(date 1680178598910)
@@ -71,7 +71,7 @@
                                                                       NORM_DISCRETE, toReturn)))
                 .asObjectCreationExpr();
 
-        final StringLiteralExpr nameExpr = new StringLiteralExpr(normDiscrete.getField().getValue());
+        final StringLiteralExpr nameExpr = new StringLiteralExpr(normDiscrete.getField());
 
         final Expression mapMissingToExpr = getExpressionForObject(normDiscrete.getMapMissingTo());
         objectCreationExpr.getArguments().set(0, nameExpr);
Index: kie-internal/src/main/java/org/kie/internal/jaxb/OffsetDateTimeXmlAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/jaxb/OffsetDateTimeXmlAdapter.java b/kie-internal/src/main/java/org/kie/internal/jaxb/OffsetDateTimeXmlAdapter.java
--- a/kie-internal/src/main/java/org/kie/internal/jaxb/OffsetDateTimeXmlAdapter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/jaxb/OffsetDateTimeXmlAdapter.java	(date 1680178598869)
@@ -21,7 +21,7 @@
 import java.time.format.DateTimeFormatterBuilder;
 import java.time.temporal.ChronoField;
 
-import javax.xml.bind.annotation.adapters.XmlAdapter;
+import jakarta.xml.bind.annotation.adapters.XmlAdapter;
 
 public class OffsetDateTimeXmlAdapter extends XmlAdapter<String, OffsetDateTime> {
 
Index: drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/map/impl/JpaBasedPersistenceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/map/impl/JpaBasedPersistenceTest.java b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/map/impl/JpaBasedPersistenceTest.java
--- a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/map/impl/JpaBasedPersistenceTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/map/impl/JpaBasedPersistenceTest.java	(date 1680178598899)
@@ -31,7 +31,7 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import javax.persistence.EntityManagerFactory;
+import jakarta.persistence.EntityManagerFactory;
 import java.util.Arrays;
 import java.util.Collection;
 import java.util.Map;
Index: kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueMapXmlAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueMapXmlAdapter.java b/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueMapXmlAdapter.java
--- a/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueMapXmlAdapter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueMapXmlAdapter.java	(date 1680178598868)
@@ -19,7 +19,7 @@
 import java.util.Map;
 import java.util.Map.Entry;
 
-import javax.xml.bind.annotation.adapters.XmlAdapter;
+import jakarta.xml.bind.annotation.adapters.XmlAdapter;
 
 /**
  * This is a {@link XmlAdapter} for mapping Map&lt;String, String&gt; instances
Index: drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/util/DroolsPersistenceUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/util/DroolsPersistenceUtil.java b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/util/DroolsPersistenceUtil.java
--- a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/util/DroolsPersistenceUtil.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/util/DroolsPersistenceUtil.java	(date 1680178598899)
@@ -19,7 +19,7 @@
 import static org.kie.api.runtime.EnvironmentName.TRANSACTION;
 
 import java.util.Map;
-import javax.transaction.UserTransaction;
+import jakarta.transaction.UserTransaction;
 import org.drools.core.base.MapGlobalResolver;
 import org.drools.core.impl.EnvironmentFactory;
 import org.kie.api.runtime.Environment;
Index: kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueEntry.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueEntry.java b/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueEntry.java
--- a/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueEntry.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/jaxb/StringKeyStringValueEntry.java	(date 1680178598868)
@@ -15,10 +15,10 @@
 
 package org.kie.internal.jaxb;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlType;
 
 
 @XmlType
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLOutputFieldFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLOutputFieldFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLOutputFieldFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLOutputFieldFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLOutputFieldFactory.java	(date 1680178598912)
@@ -78,10 +78,10 @@
                 .orElseThrow(() -> new KiePMMLException(String.format(MISSING_VARIABLE_INITIALIZER_TEMPLATE, OUTPUTFIELD, toReturn)))
                 .asMethodCallExpr();
         final MethodCallExpr builder = getChainedMethodCallExprFrom("builder", initializer);
-        final StringLiteralExpr nameExpr = new StringLiteralExpr(outputField.getName().getValue());
+        final StringLiteralExpr nameExpr = new StringLiteralExpr(outputField.getName());
         final RESULT_FEATURE resultFeature = RESULT_FEATURE.byName(outputField.getResultFeature().value());
         final NameExpr resultFeatureExpr = new NameExpr(RESULT_FEATURE.class.getName() + "." + resultFeature.name());
-        final Expression targetFieldExpr = outputField.getTargetField() != null ? getExpressionForObject(outputField.getTargetField().getValue()) : new NullLiteralExpr();
+        final Expression targetFieldExpr = outputField.getTargetField() != null ? getExpressionForObject(outputField.getTargetField()) : new NullLiteralExpr();
         final Expression valueExpr = outputField.getValue() != null ? getExpressionForObject(outputField.getValue()) : new NullLiteralExpr();
         final Expression dataTypeExpression = getExpressionForDataType(outputField.getDataType());
         final Expression rankExpr = outputField.getRank() != null ? getExpressionForObject(outputField.getRank()) : new NullLiteralExpr();
Index: kie-internal/src/main/java/org/kie/internal/jaxb/CorrelationKeyXmlAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/jaxb/CorrelationKeyXmlAdapter.java b/kie-internal/src/main/java/org/kie/internal/jaxb/CorrelationKeyXmlAdapter.java
--- a/kie-internal/src/main/java/org/kie/internal/jaxb/CorrelationKeyXmlAdapter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/jaxb/CorrelationKeyXmlAdapter.java	(date 1680178598868)
@@ -21,7 +21,7 @@
 import java.util.Iterator;
 import java.util.List;
 
-import javax.xml.bind.annotation.adapters.XmlAdapter;
+import jakarta.xml.bind.annotation.adapters.XmlAdapter;
 
 import org.kie.internal.KieInternalServices;
 import org.kie.internal.process.CorrelationKey;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMiningFieldFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMiningFieldFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMiningFieldFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMiningFieldFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMiningFieldFactory.java	(date 1680178598911)
@@ -85,7 +85,7 @@
                                                                       MININGFIELD, toReturn)))
                 .asMethodCallExpr();
         final MethodCallExpr builder = getChainedMethodCallExprFrom("builder", initializer);
-        final StringLiteralExpr nameExpr = new StringLiteralExpr(miningField.getName().getValue());
+        final StringLiteralExpr nameExpr = new StringLiteralExpr(miningField.getName());
         Expression fieldUsageTypeExpr;
         if (miningField.getUsageType() != null) {
             final FIELD_USAGE_TYPE fieldUsageType = FIELD_USAGE_TYPE.byName(miningField.getUsageType().value());
@@ -100,8 +100,8 @@
         } else {
             opTypeExpr = new NullLiteralExpr();
         }
-        final List<Field<?>> mappedFields = getMappedFields(fields, miningField.getName().getValue());
-        final DataType dataType = getDataType(mappedFields, miningField.getName().getValue());
+        final List<Field<?>> mappedFields = getMappedFields(fields,miningField.getName());
+        final DataType dataType = getDataType(mappedFields,miningField.getName());
         final DATA_TYPE data_TYPE = DATA_TYPE.byName(dataType.value());
         Expression dataTypeExpr = new NameExpr(DATA_TYPE.class.getName() + "." + data_TYPE.name());
         Expression missingValueTreatmentMethodExpr;
@@ -169,7 +169,7 @@
     private static List<Field<?>> getMappedFields(final List<Field<?>> fields,
                                                   final String fieldName) {
         return fields.stream()
-                .filter(fld -> Objects.equals(fieldName, fld.getName().getValue()))
+                .filter(fld -> Objects.equals(fieldName,fld.getName()))
                 .collect(Collectors.toList());
     }
 
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDiscretizeFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDiscretizeFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDiscretizeFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDiscretizeFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDiscretizeFactory.java	(date 1680178598910)
@@ -85,7 +85,7 @@
                 .orElseThrow(() -> new KiePMMLException(String.format(MISSING_VARIABLE_INITIALIZER_TEMPLATE,
                                                                       DISCRETIZE, toReturn)))
                 .asObjectCreationExpr();
-        final Expression nameExpr = new StringLiteralExpr(discretize.getField().getValue());
+        final Expression nameExpr = new StringLiteralExpr(discretize.getField());
         final Expression mapMissingToExpr = getExpressionForObject(discretize.getMapMissingTo());
         final Expression defaultValueExpr = getExpressionForObject(discretize.getDefaultValue());
 
Index: drools-core/src/main/java/org/drools/core/common/QueryElementFactHandle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-core/src/main/java/org/drools/core/common/QueryElementFactHandle.java b/drools-core/src/main/java/org/drools/core/common/QueryElementFactHandle.java
--- a/drools-core/src/main/java/org/drools/core/common/QueryElementFactHandle.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-core/src/main/java/org/drools/core/common/QueryElementFactHandle.java	(date 1680178598874)
@@ -20,9 +20,9 @@
 import java.util.function.Consumer;
 import java.util.function.Predicate;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
 import org.drools.core.WorkingMemoryEntryPoint;
 import org.drools.core.factmodel.traits.TraitTypeEnum;
 import org.drools.core.reteoo.LeftTuple;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLParameterFieldFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLParameterFieldFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLParameterFieldFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLParameterFieldFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLParameterFieldFactory.java	(date 1680178598911)
@@ -70,7 +70,7 @@
                 .orElseThrow(() -> new KiePMMLException(String.format(MISSING_VARIABLE_INITIALIZER_TEMPLATE, PARAMETER_FIELD, toReturn)))
                 .asMethodCallExpr();
         final MethodCallExpr builder = getChainedMethodCallExprFrom("builder", initializer);
-        builder.setArgument(0, new StringLiteralExpr(parameterField.getName().getValue()));
+        builder.setArgument(0, new StringLiteralExpr(parameterField.getName()));
         final Expression dataTypeExpression = getExpressionForDataType(parameterField.getDataType());
         final Expression opTypeExpression = getExpressionForOpType(parameterField.getOpType());
         getChainedMethodCallExprFrom("withDataType", initializer).setArgument(0, dataTypeExpression);
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormContinuousFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormContinuousFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormContinuousFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormContinuousFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormContinuousFactory.java	(date 1680178598914)
@@ -77,7 +77,7 @@
                                                                       NORM_CONTINUOUS, toReturn)))
                 .asObjectCreationExpr();
 
-        final StringLiteralExpr nameExpr = new StringLiteralExpr(normContinuous.getField().getValue());
+        final StringLiteralExpr nameExpr = new StringLiteralExpr(normContinuous.getField());
         final OUTLIER_TREATMENT_METHOD outlierTreatmentMethod =
                 OUTLIER_TREATMENT_METHOD.byName(normContinuous.getOutliers().value());
         final NameExpr outlierTreatmentMethodExpr =
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDerivedFieldFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDerivedFieldFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDerivedFieldFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDerivedFieldFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDerivedFieldFactory.java	(date 1680178598914)
@@ -81,7 +81,7 @@
         final MethodCallExpr builder = getChainedMethodCallExprFrom("builder", initializer);
         final Expression dataTypeExpression = getExpressionForDataType(derivedField.getDataType());
         final Expression opTypeExpression = getExpressionForOpType(derivedField.getOpType());
-        builder.setArgument(0, new StringLiteralExpr(derivedField.getName().getValue()));
+        builder.setArgument(0, new StringLiteralExpr(derivedField.getName()));
         builder.setArgument(2, dataTypeExpression);
         builder.setArgument(3, opTypeExpression);
         builder.setArgument(4, new NameExpr(nestedVariableName));
Index: drools-legacy-test-util/src/test/java/org/drools/mvel/compiler/Person.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-legacy-test-util/src/test/java/org/drools/mvel/compiler/Person.java b/drools-legacy-test-util/src/test/java/org/drools/mvel/compiler/Person.java
--- a/drools-legacy-test-util/src/test/java/org/drools/mvel/compiler/Person.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-legacy-test-util/src/test/java/org/drools/mvel/compiler/Person.java	(date 1680178598893)
@@ -18,8 +18,8 @@
 
 import org.drools.core.factmodel.traits.Traitable;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
 import java.io.Serializable;
 import java.math.BigDecimal;
 import java.math.BigInteger;
Index: kie-util/kie-util-maven-support/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-util/kie-util-maven-support/pom.xml b/kie-util/kie-util-maven-support/pom.xml
--- a/kie-util/kie-util-maven-support/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-util/kie-util-maven-support/pom.xml	(date 1680177976322)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-util</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimplePredicateFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimplePredicateFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimplePredicateFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimplePredicateFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimplePredicateFactory.java	(date 1680178598911)
@@ -82,9 +82,9 @@
                 .orElseThrow(() -> new KiePMMLException(String.format(MISSING_VARIABLE_INITIALIZER_TEMPLATE, SIMPLE_PREDICATE, simplePredicateBody)))
                 .asMethodCallExpr();
         final MethodCallExpr builder = getChainedMethodCallExprFrom("builder", initializer);
-        builder.setArgument(0, new StringLiteralExpr(simplePredicate.getField().getValue()));
+        builder.setArgument(0, new StringLiteralExpr(simplePredicate.getField()));
         builder.setArgument(2, operatorExpr);
-        DataType dataType = getDataType(fields, simplePredicate.getField().getValue());
+        DataType dataType = getDataType(fields,simplePredicate.getField());
         Object actualValue = DATA_TYPE.byName(dataType.value()).getActualValue(simplePredicate.getValue());
         getChainedMethodCallExprFrom("withValue", initializer).setArgument(0, getExpressionForObject(actualValue));
         simplePredicateBody.getStatements().forEach(toReturn::addStatement);
Index: kie-util/kie-util-maven-integration/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-util/kie-util-maven-integration/pom.xml b/kie-util/kie-util-maven-integration/pom.xml
--- a/kie-util/kie-util-maven-integration/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-util/kie-util-maven-integration/pom.xml	(date 1680177976310)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-util</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTextIndexFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTextIndexFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTextIndexFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTextIndexFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTextIndexFactory.java	(date 1680178598911)
@@ -98,7 +98,7 @@
                 TEXTINDEX, toReturn)))
                 .asMethodCallExpr();
         final MethodCallExpr builder = getChainedMethodCallExprFrom("builder", initializer);
-        final StringLiteralExpr nameExpr = new StringLiteralExpr(textIndex.getTextField().getValue());
+        final StringLiteralExpr nameExpr = new StringLiteralExpr(textIndex.getTextField());
         final NameExpr expressionExpr = new NameExpr(expressionVariableName);
         builder.setArgument(0, nameExpr);
         builder.setArgument(2, expressionExpr);
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimpleSetPredicateFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimpleSetPredicateFactory.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimpleSetPredicateFactory.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimpleSetPredicateFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimpleSetPredicateFactory.java	(date 1680178598914)
@@ -87,7 +87,7 @@
                 .orElseThrow(() -> new KiePMMLException(String.format(MISSING_VARIABLE_INITIALIZER_TEMPLATE, SIMPLESET_PREDICATE, simpleSetPredicateBody)))
                 .asMethodCallExpr();
         final MethodCallExpr builder = getChainedMethodCallExprFrom("builder", initializer);
-        builder.setArgument(0, new StringLiteralExpr(simpleSetPredicate.getField().getValue()));
+        builder.setArgument(0, new StringLiteralExpr(simpleSetPredicate.getField()));
         builder.setArgument(2, arrayTypeExpr);
         builder.setArgument(3, inNotInExpr);
         getChainedMethodCallExprFrom("asList", initializer).setArguments(arguments);
Index: kie-util/kie-util-xml/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-util/kie-util-xml/pom.xml b/kie-util/kie-util-xml/pom.xml
--- a/kie-util/kie-util-xml/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-util/kie-util-xml/pom.xml	(date 1680177976333)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-util</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-commands/src/main/java/org/drools/commands/GetVariableCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/GetVariableCommand.java b/drools-commands/src/main/java/org/drools/commands/GetVariableCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/GetVariableCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/GetVariableCommand.java	(date 1680178598893)
@@ -16,11 +16,11 @@
 
 package org.drools.commands;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlSchemaType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlSchemaType;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.runtime.Context;
Index: drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/session/JpaPersistentStatefulSessionTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/session/JpaPersistentStatefulSessionTest.java b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/session/JpaPersistentStatefulSessionTest.java
--- a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/session/JpaPersistentStatefulSessionTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/session/JpaPersistentStatefulSessionTest.java	(date 1680178598901)
@@ -25,7 +25,7 @@
 import java.util.stream.IntStream;
 
 import javax.naming.InitialContext;
-import javax.transaction.UserTransaction;
+import jakarta.transaction.UserTransaction;
 
 import org.drools.commands.ChainableRunner;
 import org.drools.commands.impl.CommandBasedStatefulKnowledgeSessionImpl;
Index: drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/session/ReloadSessionTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/session/ReloadSessionTest.java b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/session/ReloadSessionTest.java
--- a/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/session/ReloadSessionTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/test/java/org/drools/persistence/session/ReloadSessionTest.java	(date 1680178598900)
@@ -20,8 +20,8 @@
 import java.util.Collection;
 import java.util.Map;
 import java.util.Random;
-import javax.persistence.EntityManagerFactory;
-import javax.persistence.Persistence;
+import jakarta.persistence.EntityManagerFactory;
+import jakarta.persistence.Persistence;
 
 import org.drools.core.common.DefaultFactHandle;
 import org.drools.kiesession.rulebase.InternalKnowledgeBase;
Index: drools-mvel/src/test/java/org/drools/mvel/compiler/Person.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-mvel/src/test/java/org/drools/mvel/compiler/Person.java b/drools-mvel/src/test/java/org/drools/mvel/compiler/Person.java
--- a/drools-mvel/src/test/java/org/drools/mvel/compiler/Person.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-mvel/src/test/java/org/drools/mvel/compiler/Person.java	(date 1680178598880)
@@ -18,8 +18,8 @@
 
 import org.drools.core.factmodel.traits.Traitable;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
 import java.io.Serializable;
 import java.math.BigDecimal;
 import java.math.BigInteger;
Index: kie-internal/src/main/java/org/kie/internal/runtime/conf/ObjectModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/runtime/conf/ObjectModel.java b/kie-internal/src/main/java/org/kie/internal/runtime/conf/ObjectModel.java
--- a/kie-internal/src/main/java/org/kie/internal/runtime/conf/ObjectModel.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/runtime/conf/ObjectModel.java	(date 1680178598867)
@@ -21,12 +21,12 @@
 import java.util.Arrays;
 import java.util.List;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlElementWrapper;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlSchemaType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlElementWrapper;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlSchemaType;
 /**
  * Object model that defines how and of what type the object instance should be created.<br>
  * The how is actually delegated to resolved implementation <code>ObjectModelResolver</code>
Index: kie-internal/src/main/java/org/kie/internal/runtime/conf/RuntimeStrategy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/runtime/conf/RuntimeStrategy.java b/kie-internal/src/main/java/org/kie/internal/runtime/conf/RuntimeStrategy.java
--- a/kie-internal/src/main/java/org/kie/internal/runtime/conf/RuntimeStrategy.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/runtime/conf/RuntimeStrategy.java	(date 1680178598867)
@@ -15,7 +15,7 @@
 
 package org.kie.internal.runtime.conf;
 
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlType;
 
 @XmlType
 public enum RuntimeStrategy {
Index: kie-internal/src/main/java/org/kie/internal/runtime/conf/DeploymentDescriptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/runtime/conf/DeploymentDescriptor.java b/kie-internal/src/main/java/org/kie/internal/runtime/conf/DeploymentDescriptor.java
--- a/kie-internal/src/main/java/org/kie/internal/runtime/conf/DeploymentDescriptor.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/runtime/conf/DeploymentDescriptor.java	(date 1680178598867)
@@ -18,8 +18,8 @@
 
 import java.util.List;
 
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlType;
 
 import org.kie.api.remote.Remotable;
 
Index: drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/test/java/org/drools/quarkus/quickstart/test/BeanTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/test/java/org/drools/quarkus/quickstart/test/BeanTest.java b/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/test/java/org/drools/quarkus/quickstart/test/BeanTest.java
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/test/java/org/drools/quarkus/quickstart/test/BeanTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/test/java/org/drools/quarkus/quickstart/test/BeanTest.java	(date 1680178598935)
@@ -15,7 +15,7 @@
  */
 package org.drools.quarkus.quickstart.test;
 
-import javax.inject.Inject;
+import jakarta.inject.Inject;
 
 import io.quarkus.test.junit.QuarkusTest;
 
Index: kie-internal/src/main/java/org/kie/internal/runtime/conf/MergeMode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/runtime/conf/MergeMode.java b/kie-internal/src/main/java/org/kie/internal/runtime/conf/MergeMode.java
--- a/kie-internal/src/main/java/org/kie/internal/runtime/conf/MergeMode.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/runtime/conf/MergeMode.java	(date 1680178598867)
@@ -16,7 +16,7 @@
 
 package org.kie.internal.runtime.conf;
 
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlType;
 
 /**
  * Defines merging strategy of two descriptors
Index: drools-persistence/drools-persistence-jpa/src/test/filtered-resources/META-INF/persistence.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/drools-persistence-jpa/src/test/filtered-resources/META-INF/persistence.xml b/drools-persistence/drools-persistence-jpa/src/test/filtered-resources/META-INF/persistence.xml
--- a/drools-persistence/drools-persistence-jpa/src/test/filtered-resources/META-INF/persistence.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/drools-persistence-jpa/src/test/filtered-resources/META-INF/persistence.xml	(date 1680178598901)
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<persistence version="2.1"
-             xmlns="http://xmlns.jcp.org/xml/ns/persistence"
+<persistence version="3.0"
+             xmlns="https://jakarta.ee/xml/ns/persistence"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
+             xsi:schemaLocation="https://jakarta.ee/xml/ns/persistence https://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd">
 
     <persistence-unit name="org.drools.persistence.jpa" transaction-type="JTA">
       <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
Index: drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/test/java/org/drools/quarkus/quickstart/test/RuntimeIT.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/test/java/org/drools/quarkus/quickstart/test/RuntimeIT.java b/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/test/java/org/drools/quarkus/quickstart/test/RuntimeIT.java
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/test/java/org/drools/quarkus/quickstart/test/RuntimeIT.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/test/java/org/drools/quarkus/quickstart/test/RuntimeIT.java	(date 1680178598935)
@@ -15,7 +15,7 @@
  */
 package org.drools.quarkus.quickstart.test;
 
-import javax.inject.Inject;
+import jakarta.inject.Inject;
 
 import io.quarkus.test.junit.QuarkusTest;
 import org.drools.quarkus.quickstart.test.model.Alert;
Index: kie-internal/src/main/java/org/kie/internal/runtime/conf/NamedObjectModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/runtime/conf/NamedObjectModel.java b/kie-internal/src/main/java/org/kie/internal/runtime/conf/NamedObjectModel.java
--- a/kie-internal/src/main/java/org/kie/internal/runtime/conf/NamedObjectModel.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/runtime/conf/NamedObjectModel.java	(date 1680178598867)
@@ -16,11 +16,11 @@
 
 package org.kie.internal.runtime.conf;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlSchemaType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlSchemaType;
 
 /**
  * Extension of <code>ObjectModel</code> that provides unique name for the object model
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/pom.xml b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/pom.xml
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/pom.xml	(date 1680177976693)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-compiler</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/pom.xml b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/pom.xml
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/pom.xml	(date 1680177976674)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-compiler</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/pom.xml b/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/pom.xml
--- a/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn/pom.xml	(date 1680177976644)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-dmn-ruleset2dmn-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <artifactId>kie-dmn-ruleset2dmn</artifactId>
 
Index: drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/main/java/org/drools/quarkus/ruleunit/examples/reactive/Adaptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/main/java/org/drools/quarkus/ruleunit/examples/reactive/Adaptor.java b/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/main/java/org/drools/quarkus/ruleunit/examples/reactive/Adaptor.java
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/main/java/org/drools/quarkus/ruleunit/examples/reactive/Adaptor.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/main/java/org/drools/quarkus/ruleunit/examples/reactive/Adaptor.java	(date 1680178598935)
@@ -15,10 +15,10 @@
  */
 package org.drools.quarkus.ruleunit.examples.reactive;
 
-import javax.annotation.PostConstruct;
-import javax.enterprise.context.ApplicationScoped;
-import javax.inject.Inject;
+import jakarta.enterprise.context.ApplicationScoped;
+import jakarta.inject.Inject;
 
+import jakarta.annotation.PostConstruct;
 import org.eclipse.microprofile.reactive.messaging.Channel;
 import org.eclipse.microprofile.reactive.messaging.Emitter;
 import org.eclipse.microprofile.reactive.messaging.Incoming;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-core/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-core/pom.xml b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-core/pom.xml
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-core/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-core/pom.xml	(date 1680177976708)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-compiler</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-test-coverage/test-compiler-integration/src/test/java/org/drools/mvel/compiler/Person.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/test-compiler-integration/src/test/java/org/drools/mvel/compiler/Person.java b/drools-test-coverage/test-compiler-integration/src/test/java/org/drools/mvel/compiler/Person.java
--- a/drools-test-coverage/test-compiler-integration/src/test/java/org/drools/mvel/compiler/Person.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/test-compiler-integration/src/test/java/org/drools/mvel/compiler/Person.java	(date 1680178598903)
@@ -18,8 +18,8 @@
 
 import org.drools.core.factmodel.traits.Traitable;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
 import java.io.Serializable;
 import java.math.BigDecimal;
 import java.math.BigInteger;
Index: kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn-cli/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn-cli/pom.xml b/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn-cli/pom.xml
--- a/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn-cli/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-ruleset2dmn-parent/kie-dmn-ruleset2dmn-cli/pom.xml	(date 1680177976614)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-dmn-ruleset2dmn-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <artifactId>kie-dmn-ruleset2dmn-cli</artifactId>
   
Index: drools-core/src/main/java/org/drools/core/ClassObjectSerializationFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-core/src/main/java/org/drools/core/ClassObjectSerializationFilter.java b/drools-core/src/main/java/org/drools/core/ClassObjectSerializationFilter.java
--- a/drools-core/src/main/java/org/drools/core/ClassObjectSerializationFilter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-core/src/main/java/org/drools/core/ClassObjectSerializationFilter.java	(date 1680178598873)
@@ -1,9 +1,9 @@
 package org.drools.core;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.runtime.ClassObjectFilter;
 import org.kie.api.runtime.ObjectFilter;
Index: kie-internal/src/main/java/org/kie/internal/task/api/model/AccessType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/task/api/model/AccessType.java b/kie-internal/src/main/java/org/kie/internal/task/api/model/AccessType.java
--- a/kie-internal/src/main/java/org/kie/internal/task/api/model/AccessType.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/task/api/model/AccessType.java	(date 1680178598870)
@@ -19,7 +19,7 @@
  */
 package org.kie.internal.task.api.model;
 
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlType;
 
 @XmlType
 public enum AccessType {
Index: kie-internal/src/main/java/org/kie/internal/task/api/model/SubTasksStrategy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/task/api/model/SubTasksStrategy.java b/kie-internal/src/main/java/org/kie/internal/task/api/model/SubTasksStrategy.java
--- a/kie-internal/src/main/java/org/kie/internal/task/api/model/SubTasksStrategy.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/task/api/model/SubTasksStrategy.java	(date 1680178598870)
@@ -16,7 +16,7 @@
 
 package org.kie.internal.task.api.model;
 
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlType;
 
 @XmlType
 public enum SubTasksStrategy{
Index: drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-multiunit/src/test/java/org/drools/quarkus/ruleunit/examples/multiunit/RuntimeTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-multiunit/src/test/java/org/drools/quarkus/ruleunit/examples/multiunit/RuntimeTest.java b/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-multiunit/src/test/java/org/drools/quarkus/ruleunit/examples/multiunit/RuntimeTest.java
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-multiunit/src/test/java/org/drools/quarkus/ruleunit/examples/multiunit/RuntimeTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-multiunit/src/test/java/org/drools/quarkus/ruleunit/examples/multiunit/RuntimeTest.java	(date 1680178598935)
@@ -16,7 +16,7 @@
 package org.drools.quarkus.ruleunit.examples.multiunit;
 
 import java.util.concurrent.atomic.AtomicReference;
-import javax.inject.Inject;
+import jakarta.inject.Inject;
 
 import io.quarkus.test.junit.QuarkusTest;
 import org.drools.ruleunits.api.DataHandle;
Index: kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_2/dmndi/DiagramElement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_2/dmndi/DiagramElement.java b/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_2/dmndi/DiagramElement.java
--- a/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_2/dmndi/DiagramElement.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_2/dmndi/DiagramElement.java	(date 1680178598904)
@@ -19,7 +19,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import javax.xml.bind.JAXBElement;
+import jakarta.xml.bind.JAXBElement;
 
 import org.kie.dmn.model.v1_2.KieDMNModelInstrumentedBase;
 
Index: kie-api/src/main/java/org/kie/api/runtime/query/QueryContext.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-api/src/main/java/org/kie/api/runtime/query/QueryContext.java b/kie-api/src/main/java/org/kie/api/runtime/query/QueryContext.java
--- a/kie-api/src/main/java/org/kie/api/runtime/query/QueryContext.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-api/src/main/java/org/kie/api/runtime/query/QueryContext.java	(date 1680178598862)
@@ -18,11 +18,11 @@
 
 import java.io.Serializable;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlSchemaType;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlSchemaType;
+import jakarta.xml.bind.annotation.XmlType;
 
 @XmlType(name="kieQueryContext")
 @XmlAccessorType(XmlAccessType.FIELD)
Index: drools-core/src/main/java/org/drools/core/base/RuleNameEqualsAgendaFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-core/src/main/java/org/drools/core/base/RuleNameEqualsAgendaFilter.java b/drools-core/src/main/java/org/drools/core/base/RuleNameEqualsAgendaFilter.java
--- a/drools-core/src/main/java/org/drools/core/base/RuleNameEqualsAgendaFilter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-core/src/main/java/org/drools/core/base/RuleNameEqualsAgendaFilter.java	(date 1680178598875)
@@ -18,10 +18,10 @@
 
 import java.io.Serializable;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 import org.kie.api.runtime.rule.AgendaFilter;
 import org.kie.api.runtime.rule.Match;
 
Index: kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_2/dmndi/DMNDiagram.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_2/dmndi/DMNDiagram.java b/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_2/dmndi/DMNDiagram.java
--- a/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_2/dmndi/DMNDiagram.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-model/src/main/java/org/kie/dmn/model/v1_2/dmndi/DMNDiagram.java	(date 1680178598904)
@@ -19,7 +19,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import javax.xml.bind.JAXBElement;
+import jakarta.xml.bind.JAXBElement;
 
 public class DMNDiagram extends Diagram implements org.kie.dmn.model.api.dmndi.DMNDiagram {
 
Index: drools-core/src/main/java/org/drools/core/base/RuleNameEndsWithAgendaFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-core/src/main/java/org/drools/core/base/RuleNameEndsWithAgendaFilter.java b/drools-core/src/main/java/org/drools/core/base/RuleNameEndsWithAgendaFilter.java
--- a/drools-core/src/main/java/org/drools/core/base/RuleNameEndsWithAgendaFilter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-core/src/main/java/org/drools/core/base/RuleNameEndsWithAgendaFilter.java	(date 1680178598875)
@@ -18,10 +18,10 @@
 
 import java.io.Serializable;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 import org.kie.api.runtime.rule.AgendaFilter;
 import org.kie.api.runtime.rule.Match;
 
Index: drools-core/src/main/java/org/drools/core/base/RuleNameMatchesAgendaFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-core/src/main/java/org/drools/core/base/RuleNameMatchesAgendaFilter.java b/drools-core/src/main/java/org/drools/core/base/RuleNameMatchesAgendaFilter.java
--- a/drools-core/src/main/java/org/drools/core/base/RuleNameMatchesAgendaFilter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-core/src/main/java/org/drools/core/base/RuleNameMatchesAgendaFilter.java	(date 1680178598875)
@@ -20,10 +20,10 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 import org.kie.api.runtime.rule.AgendaFilter;
 import org.kie.api.runtime.rule.Match;
 
Index: drools-core/src/main/java/org/drools/core/base/ArrayElements.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-core/src/main/java/org/drools/core/base/ArrayElements.java b/drools-core/src/main/java/org/drools/core/base/ArrayElements.java
--- a/drools-core/src/main/java/org/drools/core/base/ArrayElements.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-core/src/main/java/org/drools/core/base/ArrayElements.java	(date 1680178598875)
@@ -17,10 +17,10 @@
 package org.drools.core.base;
 
 import java.util.Arrays;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlType;
 
 @XmlType(name="array-elements")
 @XmlAccessorType(XmlAccessType.NONE)
Index: drools-commands/src/main/java/org/drools/commands/jaxb/JaxbListWrapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbListWrapper.java b/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbListWrapper.java
--- a/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbListWrapper.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbListWrapper.java	(date 1680178598892)
@@ -16,11 +16,11 @@
 
 package org.drools.commands.jaxb;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 /**
  * This is actually a wrapper for the following collections:
Index: drools-ruleunits/drools-ruleunits-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-ruleunits/drools-ruleunits-api/pom.xml b/drools-ruleunits/drools-ruleunits-api/pom.xml
--- a/drools-ruleunits/drools-ruleunits-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-ruleunits/drools-ruleunits-api/pom.xml	(date 1680177975206)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.drools</groupId>
         <artifactId>drools-ruleunits</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <groupId>org.drools</groupId>
Index: drools-core/src/main/java/org/drools/core/base/RuleNameStartsWithAgendaFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-core/src/main/java/org/drools/core/base/RuleNameStartsWithAgendaFilter.java b/drools-core/src/main/java/org/drools/core/base/RuleNameStartsWithAgendaFilter.java
--- a/drools-core/src/main/java/org/drools/core/base/RuleNameStartsWithAgendaFilter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-core/src/main/java/org/drools/core/base/RuleNameStartsWithAgendaFilter.java	(date 1680178598875)
@@ -18,10 +18,10 @@
 
 import java.io.Serializable;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 import org.kie.api.runtime.rule.AgendaFilter;
 import org.kie.api.runtime.rule.Match;
 
Index: drools-commands/src/main/java/org/drools/commands/jaxb/JaxbStringObjectPair.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbStringObjectPair.java b/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbStringObjectPair.java
--- a/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbStringObjectPair.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbStringObjectPair.java	(date 1680178598892)
@@ -16,12 +16,12 @@
 
 package org.drools.commands.jaxb;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlSeeAlso;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlSeeAlso;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 @XmlAccessorType(XmlAccessType.NONE)
 @XmlSeeAlso({JaxbListWrapper.class})
Index: drools-commands/src/main/java/org/drools/commands/jaxb/JaxbObjectObjectPair.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbObjectObjectPair.java b/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbObjectObjectPair.java
--- a/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbObjectObjectPair.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbObjectObjectPair.java	(date 1680178598892)
@@ -16,11 +16,11 @@
 
 package org.drools.commands.jaxb;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 @XmlAccessorType(XmlAccessType.NONE)
 public class JaxbObjectObjectPair {
Index: drools-ruleunits/drools-ruleunits-dsl/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-ruleunits/drools-ruleunits-dsl/pom.xml b/drools-ruleunits/drools-ruleunits-dsl/pom.xml
--- a/drools-ruleunits/drools-ruleunits-dsl/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-ruleunits/drools-ruleunits-dsl/pom.xml	(date 1680177975230)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.drools</groupId>
         <artifactId>drools-ruleunits</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <groupId>org.drools</groupId>
Index: drools-commands/src/main/java/org/drools/commands/jaxb/ObjectFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/jaxb/ObjectFactory.java b/drools-commands/src/main/java/org/drools/commands/jaxb/ObjectFactory.java
--- a/drools-commands/src/main/java/org/drools/commands/jaxb/ObjectFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/jaxb/ObjectFactory.java	(date 1680178598892)
@@ -16,7 +16,7 @@
 
 package org.drools.commands.jaxb;
 
-import javax.xml.bind.annotation.XmlRegistry;
+import jakarta.xml.bind.annotation.XmlRegistry;
 
 @XmlRegistry
 public class ObjectFactory {
Index: drools-ruleunits/drools-ruleunits-impl/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-ruleunits/drools-ruleunits-impl/pom.xml b/drools-ruleunits/drools-ruleunits-impl/pom.xml
--- a/drools-ruleunits/drools-ruleunits-impl/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-ruleunits/drools-ruleunits-impl/pom.xml	(date 1680177975263)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.drools</groupId>
         <artifactId>drools-ruleunits</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <groupId>org.drools</groupId>
Index: drools-commands/src/main/java/org/drools/commands/jaxb/JaxbMapAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbMapAdapter.java b/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbMapAdapter.java
--- a/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbMapAdapter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbMapAdapter.java	(date 1680178598892)
@@ -21,7 +21,7 @@
 import java.util.List;
 import java.util.Map;
 
-import javax.xml.bind.annotation.adapters.XmlAdapter;
+import jakarta.xml.bind.annotation.adapters.XmlAdapter;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
Index: drools-commands/src/main/java/org/drools/commands/jaxb/JaxbUnknownAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbUnknownAdapter.java b/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbUnknownAdapter.java
--- a/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbUnknownAdapter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbUnknownAdapter.java	(date 1680178598892)
@@ -29,7 +29,7 @@
 import java.util.Map.Entry;
 import java.util.Set;
 
-import javax.xml.bind.annotation.adapters.XmlAdapter;
+import jakarta.xml.bind.annotation.adapters.XmlAdapter;
 
 import org.drools.core.QueryResultsImpl;
 import org.drools.core.common.DisconnectedFactHandle;
Index: drools-ruleunits/drools-ruleunits-engine/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-ruleunits/drools-ruleunits-engine/pom.xml b/drools-ruleunits/drools-ruleunits-engine/pom.xml
--- a/drools-ruleunits/drools-ruleunits-engine/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-ruleunits/drools-ruleunits-engine/pom.xml	(date 1680177975237)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-ruleunits</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>drools-ruleunits-engine</artifactId>
Index: drools-commands/src/main/java/org/drools/commands/jaxb/JaxbListAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbListAdapter.java b/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbListAdapter.java
--- a/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbListAdapter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/jaxb/JaxbListAdapter.java	(date 1680178598893)
@@ -24,7 +24,7 @@
 import java.util.List;
 import java.util.Set;
 
-import javax.xml.bind.annotation.adapters.XmlAdapter;
+import jakarta.xml.bind.annotation.adapters.XmlAdapter;
 
 import org.drools.commands.jaxb.JaxbListWrapper.JaxbWrapperType;
 import org.slf4j.Logger;
Index: kie-drl/kie-drl-implementations/kie-drl-map-input/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-drl/kie-drl-implementations/kie-drl-map-input/pom.xml b/kie-drl/kie-drl-implementations/kie-drl-map-input/pom.xml
--- a/kie-drl/kie-drl-implementations/kie-drl-map-input/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-drl/kie-drl-implementations/kie-drl-map-input/pom.xml	(date 1680177976656)
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>kie-drl-implementations</artifactId>
         <groupId>org.kie</groupId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
     <packaging>pom</packaging>
Index: kie-drl/kie-drl-implementations/kie-drl-kiesession-local/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-drl/kie-drl-implementations/kie-drl-kiesession-local/pom.xml b/kie-drl/kie-drl-implementations/kie-drl-kiesession-local/pom.xml
--- a/kie-drl/kie-drl-implementations/kie-drl-kiesession-local/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-drl/kie-drl-implementations/kie-drl-kiesession-local/pom.xml	(date 1680177976650)
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>kie-drl-implementations</artifactId>
         <groupId>org.kie</groupId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
     <packaging>pom</packaging>
Index: kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/DeploymentDescriptorImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/DeploymentDescriptorImpl.java b/kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/DeploymentDescriptorImpl.java
--- a/kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/DeploymentDescriptorImpl.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/DeploymentDescriptorImpl.java	(date 1680178598866)
@@ -27,13 +27,13 @@
 import java.util.Map;
 import java.util.Set;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlElementWrapper;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlSchemaType;
-import javax.xml.bind.annotation.XmlTransient;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlElementWrapper;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlSchemaType;
+import jakarta.xml.bind.annotation.XmlTransient;
 
 import org.kie.internal.runtime.conf.AuditMode;
 import org.kie.internal.runtime.conf.BuilderHandler;
Index: kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/TransientObjectModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/TransientObjectModel.java b/kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/TransientObjectModel.java
--- a/kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/TransientObjectModel.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/TransientObjectModel.java	(date 1680178598866)
@@ -16,7 +16,7 @@
 
 package org.kie.internal.runtime.manager.deploy;
 
-import javax.xml.bind.annotation.XmlTransient;
+import jakarta.xml.bind.annotation.XmlTransient;
 
 import org.kie.internal.runtime.conf.ObjectModel;
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-model/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-model/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-model/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-model/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-model/pom.xml	(date 1680177977330)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-tree</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/DeploymentDescriptorIO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/DeploymentDescriptorIO.java b/kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/DeploymentDescriptorIO.java
--- a/kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/DeploymentDescriptorIO.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/src/main/java/org/kie/internal/runtime/manager/deploy/DeploymentDescriptorIO.java	(date 1680178598867)
@@ -21,10 +21,10 @@
 import java.net.URL;
 
 import javax.xml.XMLConstants;
-import javax.xml.bind.JAXBContext;
-import javax.xml.bind.JAXBException;
-import javax.xml.bind.Marshaller;
-import javax.xml.bind.Unmarshaller;
+import jakarta.xml.bind.JAXBContext;
+import jakarta.xml.bind.JAXBException;
+import jakarta.xml.bind.Marshaller;
+import jakarta.xml.bind.Unmarshaller;
 import javax.xml.validation.Schema;
 import javax.xml.validation.SchemaFactory;
 
Index: jpmml-migration-recipe/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/jpmml-migration-recipe/pom.xml b/jpmml-migration-recipe/pom.xml
--- a/jpmml-migration-recipe/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/jpmml-migration-recipe/pom.xml	(date 1680177973825)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-compiler/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-compiler/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-compiler/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-compiler/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-compiler/pom.xml	(date 1680177977310)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-tree</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-traits/src/test/java/org/drools/traits/persistence/DroolsPersistenceUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-traits/src/test/java/org/drools/traits/persistence/DroolsPersistenceUtil.java b/drools-traits/src/test/java/org/drools/traits/persistence/DroolsPersistenceUtil.java
--- a/drools-traits/src/test/java/org/drools/traits/persistence/DroolsPersistenceUtil.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-traits/src/test/java/org/drools/traits/persistence/DroolsPersistenceUtil.java	(date 1680178598901)
@@ -17,7 +17,7 @@
 
 import java.util.Map;
 
-import javax.transaction.UserTransaction;
+import jakarta.transaction.UserTransaction;
 
 import org.drools.core.base.MapGlobalResolver;
 import org.drools.core.impl.EnvironmentFactory;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-evaluator/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-evaluator/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-evaluator/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-evaluator/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-evaluator/pom.xml	(date 1680177977320)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-tree</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtilTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtilTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtilTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtilTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtilTest.java	(date 1680178598915)
@@ -30,12 +30,11 @@
 import java.util.stream.Collectors;
 import java.util.stream.IntStream;
 
-import javax.xml.bind.JAXBException;
+import jakarta.xml.bind.JAXBException;
 
 import org.apache.commons.lang3.RandomStringUtils;
 import org.dmg.pmml.DataField;
 import org.dmg.pmml.DataType;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.MathContext;
 import org.dmg.pmml.MiningField;
 import org.dmg.pmml.MiningFunction;
@@ -140,7 +139,7 @@
         assertThat(optionalDataField).isPresent();
         DataField retrieved = optionalDataField.get();
         String expected = String.format(TARGETFIELD_TEMPLATE, "golfing");
-        assertThat(retrieved.getName().getValue()).isEqualTo(expected);
+        assertThat(retrieved.getName()).isEqualTo(expected);
     }
 
     @Test
@@ -188,23 +187,23 @@
     @Test
     void getTargetMiningField() {
         final DataField dataField = new DataField();
-        dataField.setName(FieldName.create("FIELD_NAME"));
+        dataField.setName("FIELD_NAME");
         final MiningField retrieved = KiePMMLUtil.getTargetMiningField(dataField);
-        assertThat(retrieved.getName().getValue()).isEqualTo(dataField.getName().getValue());
+        assertThat(retrieved.getName()).isEqualTo(dataField.getName());
         assertThat(retrieved.getUsageType()).isEqualTo(MiningField.UsageType.TARGET);
     }
 
     @Test
     void correctTargetFields() {
-        final MiningField miningField = new MiningField(FieldName.create("FIELD_NAME"));
+        final MiningField miningField = new MiningField("FIELD_NAME");
         final Targets targets = new Targets();
         final Target namedTarget = new Target();
         String targetName = "TARGET_NAME";
-        namedTarget.setField(FieldName.create(targetName));
+        namedTarget.setField(targetName);
         final Target unnamedTarget = new Target();
         targets.addTargets(namedTarget, unnamedTarget);
         KiePMMLUtil.correctTargetFields(miningField, targets);
-        assertThat(namedTarget.getField().getValue()).isEqualTo(targetName);
+        assertThat(namedTarget.getField()).isEqualTo(targetName);
         assertThat(unnamedTarget.getField()).isEqualTo(miningField.getName());
     }
 
@@ -290,7 +289,7 @@
         List<DataField> dataFields = fieldNames.stream()
                 .map(fieldName -> {
                     DataField toReturn = new DataField();
-                    toReturn.setName(FieldName.create(fieldName));
+                    toReturn.setName(fieldName);
                     DataType dataType = DataType.values()[random.nextInt(DataType.values().length)];
                     toReturn.setDataType(dataType);
                     return toReturn;
@@ -300,40 +299,40 @@
                 .mapToObj(dataFields::get)
                 .map(dataField -> {
                     MiningField toReturn = new MiningField();
-                    toReturn.setName(FieldName.create(dataField.getName().getValue()));
+                    toReturn.setName(dataField.getName());
                     toReturn.setUsageType(MiningField.UsageType.ACTIVE);
                     return toReturn;
                 })
                 .collect(Collectors.toList());
         DataField lastDataField = dataFields.get(dataFields.size() - 1);
         MiningField targetMiningField = new MiningField();
-        targetMiningField.setName(FieldName.create(lastDataField.getName().getValue()));
+        targetMiningField.setName(lastDataField.getName());
         targetMiningField.setUsageType(MiningField.UsageType.TARGET);
         miningFields.add(targetMiningField);
         // Following OutputFields should be populated based on "ResultFeature.PROBABILITY"
         List<OutputField> outputFields = IntStream.range(0, 3)
                 .mapToObj(i -> {
                     OutputField toReturn = new OutputField();
-                    toReturn.setName(FieldName.create(RandomStringUtils.random(6, true, false)));
+                    toReturn.setName(RandomStringUtils.random(6, true, false));
                     toReturn.setResultFeature(ResultFeature.PROBABILITY);
                     return toReturn;
                 })
                 .collect(Collectors.toList());
         // Following OutputField should be populated based on "ResultFeature.PREDICTED_VALUE"
         OutputField targetOutputField = new OutputField();
-        targetOutputField.setName(FieldName.create(RandomStringUtils.random(6, true, false)));
+        targetOutputField.setName(RandomStringUtils.random(6, true, false));
         targetOutputField.setResultFeature(ResultFeature.PREDICTED_VALUE);
         outputFields.add(targetOutputField);
         // Following OutputField should be populated based on "TargetField" property
         OutputField targetingOutputField = new OutputField();
-        targetingOutputField.setName(FieldName.create(RandomStringUtils.random(6, true, false)));
-        targetingOutputField.setTargetField(FieldName.create(targetMiningField.getName().getValue()));
+        targetingOutputField.setName(RandomStringUtils.random(6, true, false));
+        targetingOutputField.setTargetField(targetMiningField.getName());
         outputFields.add(targetingOutputField);
         outputFields.forEach(outputField -> assertThat(outputField.getDataType()).isNull());
         IntStream.range(0, 2)
                 .forEach(i -> {
                     OutputField toAdd = new OutputField();
-                    toAdd.setName(FieldName.create(RandomStringUtils.random(6, true, false)));
+                    toAdd.setName(RandomStringUtils.random(6, true, false));
                     DataType dataType = DataType.values()[random.nextInt(DataType.values().length)];
                     toAdd.setDataType(dataType);
                     outputFields.add(toAdd);
@@ -368,7 +367,7 @@
         assertThat(retrieved).isNotNull();
         assertThat(retrieved).hasSize(1);
         MiningField targetField = retrieved.get(0);
-        assertThat(targetField.getName().getValue()).isEqualTo("car_location");
+        assertThat(targetField.getName()).isEqualTo("car_location");
         assertThat(targetField.getUsageType().value()).isEqualTo("target");
     }
 
@@ -381,7 +380,7 @@
         assertThat(retrieved).isNotNull();
         assertThat(retrieved).hasSize(1);
         MiningField targetField = retrieved.get(0);
-        assertThat(targetField.getName().getValue()).isEqualTo("car_location");
+        assertThat(targetField.getName()).isEqualTo("car_location");
         assertThat(targetField.getUsageType().value()).isEqualTo("target");
     }
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-tests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-tests/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-tests/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-tests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-tree/kie-pmml-models-tree-tests/pom.xml	(date 1680177977363)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-tree</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/KiePMMLLocalTransformationsInstanceFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/KiePMMLLocalTransformationsInstanceFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/KiePMMLLocalTransformationsInstanceFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/KiePMMLLocalTransformationsInstanceFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/KiePMMLLocalTransformationsInstanceFactoryTest.java	(date 1680178598915)
@@ -44,7 +44,7 @@
         assertThat(derivedFieldsToVerify).hasSameSizeAs(derivedFields);
         derivedFields.forEach(derivedFieldSource -> {
             Optional<KiePMMLDerivedField> derivedFieldToVerify =
-                    derivedFieldsToVerify.stream().filter(param -> param.getName().equals(derivedFieldSource.getName().getValue()))
+                    derivedFieldsToVerify.stream().filter(param -> param.getName().equals(derivedFieldSource.getName()))
                             .findFirst();
             assertThat(derivedFieldToVerify).isPresent();
             commonVerifyKiePMMLDerivedField(derivedFieldToVerify.get(), derivedFieldSource);
Index: drools-commands/src/main/java/org/drools/commands/runtime/SetGlobalCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/SetGlobalCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/SetGlobalCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/SetGlobalCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/SetGlobalCommand.java	(date 1680178598888)
@@ -16,12 +16,12 @@
 
 package org.drools.commands.runtime;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.IdentifiableResult;
 import org.drools.commands.jaxb.JaxbUnknownAdapter;
Index: drools-commands/src/main/java/org/drools/commands/runtime/AdvanceSessionTimeCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/AdvanceSessionTimeCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/AdvanceSessionTimeCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/AdvanceSessionTimeCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/AdvanceSessionTimeCommand.java	(date 1680178598882)
@@ -17,10 +17,10 @@
 package org.drools.commands.runtime;
 
 import java.util.concurrent.TimeUnit;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.drools.commands.IdentifiableResult;
 import org.kie.api.command.ExecutableCommand;
Index: drools-commands/src/main/java/org/drools/commands/runtime/GetIdCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/GetIdCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/GetIdCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/GetIdCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/GetIdCommand.java	(date 1680178598882)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.runtime.Context;
Index: drools-commands/src/main/java/org/drools/commands/runtime/GetSessionTimeCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/GetSessionTimeCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/GetSessionTimeCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/GetSessionTimeCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/GetSessionTimeCommand.java	(date 1680178598882)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.drools.commands.IdentifiableResult;
 import org.kie.api.command.ExecutableCommand;
Index: drools-commands/src/main/java/org/drools/commands/runtime/GetFactCountCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/GetFactCountCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/GetFactCountCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/GetFactCountCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/GetFactCountCommand.java	(date 1680178598888)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.runtime.Context;
Index: drools-commands/src/main/java/org/drools/commands/runtime/QueryResultsJaxbAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/QueryResultsJaxbAdapter.java b/drools-commands/src/main/java/org/drools/commands/runtime/QueryResultsJaxbAdapter.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/QueryResultsJaxbAdapter.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/QueryResultsJaxbAdapter.java	(date 1680178598882)
@@ -16,7 +16,7 @@
 
 package org.drools.commands.runtime;
 
-import javax.xml.bind.annotation.adapters.XmlAdapter;
+import jakarta.xml.bind.annotation.adapters.XmlAdapter;
 
 import org.drools.core.QueryResultsImpl;
 
Index: drools-commands/src/main/java/org/drools/commands/runtime/ExecutionResultsMap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/ExecutionResultsMap.java b/drools-commands/src/main/java/org/drools/commands/runtime/ExecutionResultsMap.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/ExecutionResultsMap.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/ExecutionResultsMap.java	(date 1680178598888)
@@ -19,7 +19,7 @@
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.Map;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.jaxb.JaxbMapAdapter;
 
Index: drools-commands/src/main/java/org/drools/commands/runtime/ObjectFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/ObjectFactory.java b/drools-commands/src/main/java/org/drools/commands/runtime/ObjectFactory.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/ObjectFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/ObjectFactory.java	(date 1680178598882)
@@ -16,7 +16,7 @@
 
 package org.drools.commands.runtime;
 
-import javax.xml.bind.annotation.XmlRegistry;
+import jakarta.xml.bind.annotation.XmlRegistry;
 
 
 @XmlRegistry
Index: drools-commands/src/main/java/org/drools/commands/runtime/ExecutionResultImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/ExecutionResultImpl.java b/drools-commands/src/main/java/org/drools/commands/runtime/ExecutionResultImpl.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/ExecutionResultImpl.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/ExecutionResultImpl.java	(date 1680178598882)
@@ -20,11 +20,11 @@
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.Map;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.jaxb.JaxbMapAdapter;
 import org.kie.api.runtime.ExecutionResults;
Index: drools-commands/src/main/java/org/drools/commands/runtime/BatchExecutionCommandImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/BatchExecutionCommandImpl.java b/drools-commands/src/main/java/org/drools/commands/runtime/BatchExecutionCommandImpl.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/BatchExecutionCommandImpl.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/BatchExecutionCommandImpl.java	(date 1680178598888)
@@ -18,13 +18,13 @@
 
 import java.util.ArrayList;
 import java.util.List;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlElements;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlElements;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlType;
 
 import org.drools.commands.fluent.Batch;
 import org.drools.commands.runtime.pmml.ApplyPmmlModelCommand;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/InstanceFactoriesTestCommon.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/InstanceFactoriesTestCommon.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/InstanceFactoriesTestCommon.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/InstanceFactoriesTestCommon.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/InstanceFactoriesTestCommon.java	(date 1680178598916)
@@ -109,7 +109,7 @@
         assertThat(toVerifyList).hasSameSizeAs(sourcesParameterFields);
         sourcesParameterFields.forEach(paramSource -> {
             Optional<KiePMMLParameterField> parameterToVerify =
-                    toVerifyList.stream().filter(param -> param.getName().equals(paramSource.getName().getValue()))
+                    toVerifyList.stream().filter(param -> param.getName().equals(paramSource.getName()))
                             .findFirst();
             assertThat(parameterToVerify).isPresent();
             commonVerifyKiePMMLParameterField(parameterToVerify.get(), paramSource);
@@ -119,24 +119,24 @@
     static void commonVerifyKiePMMLDerivedField(KiePMMLDerivedField toVerify,
                                                 DerivedField source) {
         assertThat(toVerify).isNotNull();
-        assertThat(toVerify.getName()).isEqualTo(source.getName().getValue());
+        assertThat(toVerify.getName()).isEqualTo(source.getName());
         DATA_TYPE expectedDataType = DATA_TYPE.byName(source.getDataType().value());
         assertThat(toVerify.getDataType()).isEqualTo(expectedDataType);
         OP_TYPE expectedOpType = OP_TYPE.byName(source.getOpType().value());
         assertThat(toVerify.getOpType()).isEqualTo(expectedOpType);
-        String expectedDisplayName = "Display-" + source.getName().getValue();
+        String expectedDisplayName = "Display-" +source.getName();
         assertThat(toVerify.getDisplayName()).isEqualTo(expectedDisplayName);
         commonVerifyKiePMMLExpression(toVerify.getKiePMMLExpression(), source.getExpression());
     }
 
     static void commonVerifyKiePMMLParameterField(KiePMMLParameterField toVerify, ParameterField source) {
         assertThat(toVerify).isNotNull();
-        assertThat(toVerify.getName()).isEqualTo(source.getName().getValue());
+        assertThat(toVerify.getName()).isEqualTo(source.getName());
         DATA_TYPE expectedDataType = DATA_TYPE.byName(source.getDataType().value());
         assertThat(toVerify.getDataType()).isEqualTo(expectedDataType);
         OP_TYPE expectedOpType = OP_TYPE.byName(source.getOpType().value());
         assertThat(toVerify.getOpType()).isEqualTo(expectedOpType);
-        String expectedDisplayName = "Display-" + source.getName().getValue();
+        String expectedDisplayName = "Display-" +source.getName();
         assertThat(toVerify.getDisplayName()).isEqualTo(expectedDisplayName);
     }
 
@@ -181,20 +181,20 @@
                                                    DataField dataField) {
         assertThat(toVerify).isNotNull();
         Object value = DATA_TYPE.byName(dataField.getDataType().value()).getActualValue(source.getValue());
-        assertThat(toVerify.getName()).isEqualTo(source.getField().getValue());
+        assertThat(toVerify.getName()).isEqualTo(source.getField());
         assertThat(toVerify.getValue()).isEqualTo(value);
         assertThat(toVerify.getOperator().getName()).isEqualTo(source.getOperator().value());
     }
 
     static void commonVerifyKiePMMLSimplePredicate(KiePMMLSimplePredicate toVerify, SimplePredicate source) {
         assertThat(toVerify).isNotNull();
-        assertThat(toVerify.getName()).isEqualTo(source.getField().getValue());
+        assertThat(toVerify.getName()).isEqualTo(source.getField());
         assertThat(toVerify.getOperator().getName()).isEqualTo(source.getOperator().value());
     }
 
     static void commonVerifyKiePMMLSimpleSetPredicate(KiePMMLSimpleSetPredicate toVerify, SimpleSetPredicate source) {
         assertThat(toVerify).isNotNull();
-        assertThat(toVerify.getName()).isEqualTo(source.getField().getValue());
+        assertThat(toVerify.getName()).isEqualTo(source.getField());
         Array array = source.getArray();
         assertThat(toVerify.getArrayType().getName()).isEqualTo(array.getType().value());
         assertThat(toVerify.getInNotIn().getName()).isEqualTo(source.getBooleanOperator().value());
@@ -273,7 +273,7 @@
 
     static void commonVerifyKiePMMLDiscretize(KiePMMLDiscretize toVerify, Discretize source) {
         assertThat(toVerify).isNotNull();
-        assertThat(toVerify.getName()).isEqualTo(source.getField().getValue());
+        assertThat(toVerify.getName()).isEqualTo(source.getField());
         assertThat(toVerify.getMapMissingTo()).isEqualTo(source.getMapMissingTo());
         assertThat(toVerify.getDefaultValue()).isEqualTo(source.getDefaultValue());
         assertThat(toVerify.getDataType().getName()).isEqualTo(source.getDataType().value());
@@ -283,7 +283,7 @@
 
     static void commonVerifyKiePMMLFieldRef(KiePMMLFieldRef toVerify, FieldRef source) {
         assertThat(toVerify).isNotNull();
-        assertThat(toVerify.getName()).isEqualTo(source.getField().getValue());
+        assertThat(toVerify.getName()).isEqualTo(source.getField());
         assertThat(toVerify.getMapMissingTo()).isEqualTo(source.getMapMissingTo());
     }
 
@@ -311,7 +311,7 @@
 
     static void commonVerifyKiePMMLNormDiscrete(KiePMMLNormDiscrete toVerify, NormDiscrete source) {
         assertThat(toVerify).isNotNull();
-        assertThat(toVerify.getName()).isEqualTo(source.getField().getValue());
+        assertThat(toVerify.getName()).isEqualTo(source.getField());
         assertThat(toVerify.getMapMissingTo()).isEqualTo(source.getMapMissingTo());
         assertThat(toVerify.getValue()).isEqualTo(source.getValue().toString());
     }
@@ -347,7 +347,7 @@
 
     static void commonVerifyKiePMMLFieldColumnPair(KiePMMLFieldColumnPair toVerify, FieldColumnPair source) {
         assertThat(toVerify).isNotNull();
-        assertThat(toVerify.getName()).isEqualTo(source.getField().getValue());
+        assertThat(toVerify.getName()).isEqualTo(source.getField());
         assertThat(toVerify.getColumn()).isEqualTo(source.getColumn());
     }
 
@@ -366,7 +366,7 @@
 
     static void commonVerifyKiePMMLMiningField(KiePMMLMiningField toVerify, MiningField source, DataField dataField) {
         assertThat(toVerify).isNotNull();
-        assertThat(toVerify.getName()).isEqualTo(source.getName().getValue());
+        assertThat(toVerify.getName()).isEqualTo(source.getName());
         assertThat(toVerify.getOpType().getName()).isEqualTo(source.getOpType().value());
         assertThat(toVerify.getFieldUsageType().getName()).isEqualTo(source.getUsageType().value());
         assertThat(toVerify.getInvalidValueTreatmentMethod().getName()).isEqualTo(source.getInvalidValueTreatment().value());
@@ -380,10 +380,10 @@
 
     static void commonVerifyKiePMMLOutputField(KiePMMLOutputField toVerify, OutputField source) {
         assertThat(toVerify).isNotNull();
-        assertThat(toVerify.getName()).isEqualTo(source.getName().getValue());
+        assertThat(toVerify.getName()).isEqualTo(source.getName());
         assertThat(toVerify.getValue()).isEqualTo(source.getValue());
         assertThat(toVerify.getDataType().getName()).isEqualTo(source.getDataType().value());
-        assertThat(toVerify.getTargetField().get()).isEqualTo(source.getTargetField().getValue());
+        assertThat(toVerify.getTargetField().get()).isEqualTo(source.getTargetField());
         assertThat(toVerify.getResultFeature().getName()).isEqualTo(source.getResultFeature().value());
         assertThat(toVerify.getRank()).isEqualTo(source.getRank());
         assertThat(toVerify.getValue()).isEqualTo(source.getValue());
@@ -395,7 +395,7 @@
         assertThat(source.getTargetValues()).hasSameSizeAs(toVerify.getTargetValues());
         OP_TYPE expectedOpType = OP_TYPE.byName(source.getOpType().value());
         assertThat(toVerify.getOpType()).isEqualTo(expectedOpType);
-        assertThat(toVerify.getField()).isEqualTo(source.getField().getValue());
+        assertThat(toVerify.getField()).isEqualTo(source.getField());
         CAST_INTEGER expectedCastInteger = CAST_INTEGER.byName(source.getCastInteger().value());
         assertThat(toVerify.getCastInteger()).isEqualTo(expectedCastInteger);
         assertThat(toVerify.getMin()).isCloseTo(source.getMin().doubleValue(), Offset.offset(0.0));
Index: drools-commands/src/main/java/org/drools/commands/runtime/GetGlobalCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/GetGlobalCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/GetGlobalCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/GetGlobalCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/GetGlobalCommand.java	(date 1680178598888)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.drools.commands.IdentifiableResult;
 import org.kie.api.command.ExecutableCommand;
Index: drools-commands/src/main/java/org/drools/commands/runtime/FlatQueryResults.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/FlatQueryResults.java b/drools-commands/src/main/java/org/drools/commands/runtime/FlatQueryResults.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/FlatQueryResults.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/FlatQueryResults.java	(date 1680178598881)
@@ -23,13 +23,13 @@
 import java.util.Iterator;
 import java.util.Map;
 import java.util.Set;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlSeeAlso;
-import javax.xml.bind.annotation.XmlType;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlSeeAlso;
+import jakarta.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.jaxb.JaxbListAdapter;
 import org.drools.commands.jaxb.JaxbListWrapper;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/KiePMMLTransformationDictionaryInstanceFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/KiePMMLTransformationDictionaryInstanceFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/KiePMMLTransformationDictionaryInstanceFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/KiePMMLTransformationDictionaryInstanceFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/KiePMMLTransformationDictionaryInstanceFactoryTest.java	(date 1680178598915)
@@ -47,7 +47,7 @@
         assertThat(derivedFieldsToVerify).hasSameSizeAs(derivedFields);
         derivedFields.forEach(derivedFieldSource -> {
             Optional<KiePMMLDerivedField> derivedFieldToVerify =
-                    derivedFieldsToVerify.stream().filter(param -> param.getName().equals(derivedFieldSource.getName().getValue()))
+                    derivedFieldsToVerify.stream().filter(param -> param.getName().equals(derivedFieldSource.getName()))
                             .findFirst();
             assertThat(derivedFieldToVerify).isPresent();
             commonVerifyKiePMMLDerivedField(derivedFieldToVerify.get(), derivedFieldSource);
Index: drools-commands/src/main/java/org/drools/commands/runtime/DisposeCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/DisposeCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/DisposeCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/DisposeCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/DisposeCommand.java	(date 1680178598882)
@@ -16,9 +16,9 @@
 
 package org.drools.commands.runtime;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.drools.commands.impl.NotTransactionalCommand;
 import org.kie.api.runtime.Context;
Index: kie-dmn/kie-dmn-model/src/test/java/org/kie/dmn/model/jandex/KieDMNModelJandexTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-model/src/test/java/org/kie/dmn/model/jandex/KieDMNModelJandexTest.java b/kie-dmn/kie-dmn-model/src/test/java/org/kie/dmn/model/jandex/KieDMNModelJandexTest.java
--- a/kie-dmn/kie-dmn-model/src/test/java/org/kie/dmn/model/jandex/KieDMNModelJandexTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-model/src/test/java/org/kie/dmn/model/jandex/KieDMNModelJandexTest.java	(date 1680178598904)
@@ -29,9 +29,9 @@
 import java.util.Set;
 import java.util.stream.Collectors;
 
-import javax.json.bind.Jsonb;
-import javax.json.bind.JsonbBuilder;
-import javax.json.bind.JsonbConfig;
+import jakarta.json.bind.Jsonb;
+import jakarta.json.bind.JsonbBuilder;
+import jakarta.json.bind.JsonbConfig;
 
 import org.jboss.jandex.ClassInfo;
 import org.jboss.jandex.DotName;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTransformationDictionaryFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTransformationDictionaryFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTransformationDictionaryFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTransformationDictionaryFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTransformationDictionaryFactoryTest.java	(date 1680178598916)
@@ -29,7 +29,6 @@
 import org.dmg.pmml.DataType;
 import org.dmg.pmml.DefineFunction;
 import org.dmg.pmml.DerivedField;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.FieldRef;
 import org.dmg.pmml.OpType;
 import org.dmg.pmml.ParameterField;
@@ -86,18 +85,18 @@
     }
 
     private DefineFunction getDefineFunction(int counter) {
-        ParameterField parameterField1 = new ParameterField(FieldName.create(PARAM_1 + counter));
+        ParameterField parameterField1 = new ParameterField(PARAM_1 + counter);
         parameterField1.setDataType(DataType.DOUBLE);
         parameterField1.setOpType(OpType.CONTINUOUS);
         parameterField1.setDisplayName("displayName1" + counter);
-        ParameterField parameterField2 = new ParameterField(FieldName.create(PARAM_2 + counter));
+        ParameterField parameterField2 = new ParameterField(PARAM_2 + counter);
         parameterField2.setDataType(DataType.DOUBLE);
         parameterField2.setOpType(OpType.CONTINUOUS);
         parameterField2.setDisplayName("displayName2" + counter);
         Constant constant = new Constant();
         constant.setValue(value1);
         FieldRef fieldRef = new FieldRef();
-        fieldRef.setField(FieldName.create("FIELD_REF" + counter));
+        fieldRef.setField("FIELD_REF" + counter);
         Apply apply = new Apply();
         apply.setFunction("/");
         apply.addExpressions(constant, fieldRef);
@@ -120,7 +119,7 @@
         Constant constant = new Constant();
         constant.setValue(value1);
         DerivedField toReturn = new DerivedField();
-        toReturn.setName(FieldName.create(PARAM_2 + counter));
+        toReturn.setName(PARAM_2 + counter);
         toReturn.setDataType(DataType.DOUBLE);
         toReturn.setOpType(OpType.CONTINUOUS);
         toReturn.setExpression(constant);
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormContinuousFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormContinuousFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormContinuousFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormContinuousFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormContinuousFactoryTest.java	(date 1680178598918)
@@ -55,8 +55,7 @@
         String outlierString =
                 OUTLIER_TREATMENT_METHOD.class.getName() + "." + OUTLIER_TREATMENT_METHOD.byName(normContinuous.getOutliers().value()).name();
         String text = getFileContent(TEST_01_SOURCE);
-        Statement expected = JavaParserUtils.parseBlock(String.format(text, variableName,
-                                                                      normContinuous.getField().getValue(),
+        Statement expected = JavaParserUtils.parseBlock(String.format(text, variableName,normContinuous.getField(),
                                                                       linearNorms.get(0).getOrig(),
                                                                       linearNorms.get(0).getNorm(),
                                                                       linearNorms.get(1).getOrig(),
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLApplyFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLApplyFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLApplyFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLApplyFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLApplyFactoryTest.java	(date 1680178598919)
@@ -25,7 +25,6 @@
 import com.github.javaparser.ast.stmt.Statement;
 import org.dmg.pmml.Apply;
 import org.dmg.pmml.Constant;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.FieldRef;
 import org.dmg.pmml.InvalidValueTreatmentMethod;
 import org.junit.jupiter.api.Test;
@@ -89,9 +88,9 @@
         InvalidValueTreatmentMethod invalidValueTreatmentMethod = InvalidValueTreatmentMethod.AS_MISSING;
         apply.setInvalidValueTreatment(invalidValueTreatmentMethod);
         FieldRef fieldRef1 = new FieldRef();
-        fieldRef1.setField(FieldName.create(PARAM_1));
+        fieldRef1.setField(PARAM_1);
         FieldRef fieldRef2 = new FieldRef();
-        fieldRef2.setField(FieldName.create(PARAM_2));
+        fieldRef2.setField(PARAM_2);
         apply.addExpressions(fieldRef1, fieldRef2);
         BlockStmt retrieved =
                 org.kie.pmml.compiler.commons.codegenfactories.KiePMMLApplyFactory.getApplyVariableDeclaration(variableName, apply);
@@ -117,9 +116,9 @@
         InvalidValueTreatmentMethod nestedInvalidValueTreatmentMethod = InvalidValueTreatmentMethod.AS_MISSING;
         nestedApply.setInvalidValueTreatment(nestedInvalidValueTreatmentMethod);
         FieldRef fieldRef1 = new FieldRef();
-        fieldRef1.setField(FieldName.create(PARAM_1));
+        fieldRef1.setField(PARAM_1);
         FieldRef fieldRef2 = new FieldRef();
-        fieldRef2.setField(FieldName.create(PARAM_2));
+        fieldRef2.setField(PARAM_2);
         nestedApply.addExpressions(fieldRef1, fieldRef2);
         Apply apply = new Apply();
         apply.setFunction(function);
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldColumnPairFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldColumnPairFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldColumnPairFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldColumnPairFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldColumnPairFactoryTest.java	(date 1680178598918)
@@ -24,7 +24,6 @@
 import com.github.javaparser.ast.stmt.BlockStmt;
 import com.github.javaparser.ast.stmt.Statement;
 import org.dmg.pmml.FieldColumnPair;
-import org.dmg.pmml.FieldName;
 import org.junit.jupiter.api.Test;
 import org.kie.pmml.commons.model.expressions.KiePMMLFieldColumnPair;
 import org.kie.pmml.compiler.commons.utils.JavaParserUtils;
@@ -43,7 +42,7 @@
         String fieldName = "fieldName";
         String column = "column";
         FieldColumnPair fieldColumnPair = new FieldColumnPair();
-        fieldColumnPair.setField(FieldName.create(fieldName));
+        fieldColumnPair.setField(fieldName);
         fieldColumnPair.setColumn(column);
 
         BlockStmt retrieved = KiePMMLFieldColumnPairFactory.getFieldColumnPairVariableDeclaration(variableName,
Index: drools-commands/src/main/java/org/drools/commands/runtime/pmml/ApplyPmmlModelCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/pmml/ApplyPmmlModelCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/pmml/ApplyPmmlModelCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/pmml/ApplyPmmlModelCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/pmml/ApplyPmmlModelCommand.java	(date 1680178598887)
@@ -18,12 +18,12 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Optional;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlElements;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlElements;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.drools.commands.IdentifiableResult;
 import org.kie.api.command.ExecutableCommand;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDefineFunctionFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDefineFunctionFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDefineFunctionFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDefineFunctionFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDefineFunctionFactoryTest.java	(date 1680178598916)
@@ -27,7 +27,6 @@
 import org.dmg.pmml.Constant;
 import org.dmg.pmml.DataType;
 import org.dmg.pmml.DefineFunction;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.FieldRef;
 import org.dmg.pmml.OpType;
 import org.dmg.pmml.ParameterField;
@@ -55,18 +54,18 @@
 
     @Test
     void getDefineFunctionVariableDeclaration() throws IOException {
-        ParameterField parameterField1 = new ParameterField(FieldName.create(PARAM_1));
+        ParameterField parameterField1 = new ParameterField(PARAM_1);
         parameterField1.setDataType(DataType.DOUBLE);
         parameterField1.setOpType(OpType.CONTINUOUS);
         parameterField1.setDisplayName("displayName1");
-        ParameterField parameterField2 = new ParameterField(FieldName.create(PARAM_2));
+        ParameterField parameterField2 = new ParameterField(PARAM_2);
         parameterField2.setDataType(DataType.DOUBLE);
         parameterField2.setOpType(OpType.CONTINUOUS);
         parameterField2.setDisplayName("displayName2");
         Constant constant = new Constant();
         constant.setValue(value1);
         FieldRef fieldRef = new FieldRef();
-        fieldRef.setField(FieldName.create("FIELD_REF"));
+        fieldRef.setField("FIELD_REF");
         Apply apply = new Apply();
         apply.setFunction("/");
         apply.addExpressions(constant, fieldRef);
@@ -85,17 +84,14 @@
         BlockStmt retrieved = KiePMMLDefineFunctionFactory.getDefineFunctionVariableDeclaration(defineFunction);
         String text = getFileContent(TEST_01_SOURCE);
         Statement expected = JavaParserUtils
-                .parseBlock(String.format(text,
-                                          parameterField1.getName().getValue(),
+                .parseBlock(String.format(text,parameterField1.getName(),
                                           dataType1,
                                           opType1,
-                                          parameterField1.getDisplayName(),
-                                          parameterField2.getName().getValue(),
+                                          parameterField1.getDisplayName(),parameterField2.getName(),
                                           dataType2,
                                           opType2,
                                           parameterField2.getDisplayName(),
-                                          constant.getValue(),
-                                          fieldRef.getField().getValue(),
+                                          constant.getValue(),fieldRef.getField(),
                                           apply.getFunction(),
                                           apply.getInvalidValueTreatment().value(),
                                           dataType3,
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimpleSetPredicateFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimpleSetPredicateFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimpleSetPredicateFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimpleSetPredicateFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimpleSetPredicateFactoryTest.java	(date 1680178598917)
@@ -28,7 +28,6 @@
 import org.dmg.pmml.DataDictionary;
 import org.dmg.pmml.DataField;
 import org.dmg.pmml.DataType;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.SimpleSetPredicate;
 import org.junit.jupiter.api.Test;
 import org.kie.pmml.api.enums.ARRAY_TYPE;
@@ -71,8 +70,7 @@
         BlockStmt retrieved = KiePMMLSimpleSetPredicateFactory.getSimpleSetPredicateVariableDeclaration(variableName,
                                                                                                         simpleSetPredicate);
         String text = getFileContent(TEST_01_SOURCE);
-        Statement expected = JavaParserUtils.parseBlock(String.format(text, variableName,
-                                                                      simpleSetPredicate.getField().getValue(),
+        Statement expected = JavaParserUtils.parseBlock(String.format(text, variableName,simpleSetPredicate.getField(),
                                                                       arrayTypeString,
                                                                       booleanOperatorString,
                                                                       valuesString));
@@ -85,7 +83,7 @@
                                                            final SimpleSetPredicate.BooleanOperator inNotIn) {
         Array array = getArray(arrayType, values);
         SimpleSetPredicate toReturn = new SimpleSetPredicate();
-        toReturn.setField(FieldName.create(SIMPLE_SET_PREDICATE_NAME));
+        toReturn.setField(SIMPLE_SET_PREDICATE_NAME);
         toReturn.setBooleanOperator(inNotIn);
         toReturn.setArray(array);
         return toReturn;
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/EnableAuditLogCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/EnableAuditLogCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/EnableAuditLogCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/EnableAuditLogCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/EnableAuditLogCommand.java	(date 1680178598886)
@@ -1,9 +1,9 @@
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.KieServices;
 import org.kie.api.command.ExecutableCommand;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMapValuesFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMapValuesFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMapValuesFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMapValuesFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMapValuesFactoryTest.java	(date 1680178598918)
@@ -56,7 +56,7 @@
         DerivedField mapValued = pmmlModel.getTransformationDictionary()
                 .getDerivedFields()
                 .stream()
-                .filter(derivedField -> MAPVALUED.equals(derivedField.getName().getValue()))
+                .filter(derivedField -> MAPVALUED.equals(derivedField.getName()))
                 .findFirst()
                 .orElseThrow(() -> new RuntimeException("Missing derived field " + MAPVALUED));
         MAPVALUES = ((MapValues) mapValued.getExpression());
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertObjectCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertObjectCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertObjectCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertObjectCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertObjectCommand.java	(date 1680178598885)
@@ -16,12 +16,12 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.IdentifiableResult;
 import org.drools.core.common.DefaultFactHandle;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMiningFieldFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMiningFieldFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMiningFieldFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMiningFieldFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLMiningFieldFactoryTest.java	(date 1680178598918)
@@ -57,8 +57,7 @@
         String dataTypeString =
                 DATA_TYPE.class.getName() + "." + DATA_TYPE.byName(dataField.getDataType().value()).name();
         String text = getFileContent(TEST_01_SOURCE);
-        Statement expected = JavaParserUtils.parseBlock(String.format(text, VARIABLE_NAME,
-                                                                      miningField.getName().getValue(),
+        Statement expected = JavaParserUtils.parseBlock(String.format(text, VARIABLE_NAME,miningField.getName(),
                                                                       dataTypeString));
         assertThat(JavaParserUtils.equalsNode(expected, retrieved)).isTrue();
         List<Class<?>> imports = Arrays.asList(Arrays.class, Collections.class, KiePMMLInterval.class,
@@ -79,8 +78,7 @@
         String dataTypeString =
                 DATA_TYPE.class.getName() + "." + DATA_TYPE.byName(dataField.getDataType().value()).name();
         String text = getFileContent(TEST_02_SOURCE);
-        Statement expected = JavaParserUtils.parseBlock(String.format(text, VARIABLE_NAME,
-                                                                      miningField.getName().getValue(),
+        Statement expected = JavaParserUtils.parseBlock(String.format(text, VARIABLE_NAME,miningField.getName(),
                                                                       dataTypeString,
                                                                       dataField.getValues().get(0).getValue(),
                                                                       dataField.getValues().get(1).getValue(),
@@ -102,8 +100,7 @@
         String dataTypeString =
                 DATA_TYPE.class.getName() + "." + DATA_TYPE.byName(dataField.getDataType().value()).name();
         String text = getFileContent(TEST_03_SOURCE);
-        Statement expected = JavaParserUtils.parseBlock(String.format(text, VARIABLE_NAME,
-                                                                      miningField.getName().getValue(),
+        Statement expected = JavaParserUtils.parseBlock(String.format(text, VARIABLE_NAME,miningField.getName(),
                                                                       dataTypeString,
                                                                       dataField.getValues().get(0).getValue(),
                                                                       dataField.getValues().get(1).getValue(),
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLInlineTableFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLInlineTableFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLInlineTableFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLInlineTableFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLInlineTableFactoryTest.java	(date 1680178598919)
@@ -55,7 +55,7 @@
         DerivedField mapValued = pmmlModel.getTransformationDictionary()
                 .getDerivedFields()
                 .stream()
-                .filter(derivedField -> MAPVALUED.equals(derivedField.getName().getValue()))
+                .filter(derivedField -> MAPVALUED.equals(derivedField.getName()))
                 .findFirst()
                 .orElseThrow(() -> new RuntimeException("Missing derived field " + MAPVALUED));
         INLINETABLE = ((MapValues) mapValued.getExpression()).getInlineTable();
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/FireAllRulesCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/FireAllRulesCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/FireAllRulesCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/FireAllRulesCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/FireAllRulesCommand.java	(date 1680178598886)
@@ -16,12 +16,12 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAnyElement;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAnyElement;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.IdentifiableResult;
 import org.drools.commands.jaxb.JaxbUnknownAdapter;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTextIndexFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTextIndexFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTextIndexFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTextIndexFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLTextIndexFactoryTest.java	(date 1680178598918)
@@ -69,8 +69,7 @@
         BlockStmt retrieved = KiePMMLTextIndexFactory.getTextIndexVariableDeclaration(variableName,
                                                                                       TEXTINDEX);
         String text = getFileContent(TEST_01_SOURCE);
-        Statement expected = JavaParserUtils.parseBlock(String.format(text, variableName,
-                                                                      TEXTINDEX.getTextField().getValue()));
+        Statement expected = JavaParserUtils.parseBlock(String.format(text, variableName,TEXTINDEX.getTextField()));
         assertThat(JavaParserUtils.equalsNode(expected, retrieved)).isTrue();
         List<Class<?>> imports = Arrays.asList(Arrays.class, Collections.class, Collectors.class,
                                                KiePMMLFieldRef.class, KiePMMLInlineTable.class,
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLParameterFieldFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLParameterFieldFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLParameterFieldFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLParameterFieldFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLParameterFieldFactoryTest.java	(date 1680178598918)
@@ -24,7 +24,6 @@
 import com.github.javaparser.ast.stmt.BlockStmt;
 import com.github.javaparser.ast.stmt.Statement;
 import org.dmg.pmml.DataType;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.OpType;
 import org.dmg.pmml.ParameterField;
 import org.junit.jupiter.api.Test;
@@ -44,7 +43,7 @@
     @Test
     void getParameterFieldVariableDeclaration() throws IOException {
         String variableName = "variableName";
-        ParameterField parameterField = new ParameterField(FieldName.create(variableName));
+        ParameterField parameterField = new ParameterField(variableName);
         parameterField.setDataType(DataType.DOUBLE);
         parameterField.setOpType(OpType.CONTINUOUS);
         parameterField.setDisplayName("displayName");
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectsCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectsCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectsCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectsCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectsCommand.java	(date 1680178598886)
@@ -19,10 +19,10 @@
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.List;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
 
 import org.drools.commands.IdentifiableResult;
 import org.drools.core.ClassObjectSerializationFilter;
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectCommand.java	(date 1680178598884)
@@ -16,12 +16,12 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlSchemaType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlSchemaType;
 
 import org.drools.commands.IdentifiableResult;
 import org.drools.core.common.DefaultFactHandle;
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearActivationGroupCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearActivationGroupCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearActivationGroupCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearActivationGroupCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearActivationGroupCommand.java	(date 1680178598887)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.runtime.Context;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-model/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-model/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-model/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-model/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-model/pom.xml	(date 1680177977412)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-drools-scorecard</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteObjectCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteObjectCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteObjectCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteObjectCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteObjectCommand.java	(date 1680178598885)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.util.StringUtils;
 import org.drools.commands.jaxb.JaxbUnknownAdapter;
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectInEntryPointCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectInEntryPointCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectInEntryPointCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectInEntryPointCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectInEntryPointCommand.java	(date 1680178598887)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
 
 import org.drools.commands.IdentifiableResult;
 import org.drools.core.common.DefaultFactHandle;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-evaluator/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-evaluator/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-evaluator/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-evaluator/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-evaluator/pom.xml	(date 1680177977402)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-drools-scorecard</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimplePredicateFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimplePredicateFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimplePredicateFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimplePredicateFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLSimplePredicateFactoryTest.java	(date 1680178598916)
@@ -26,7 +26,6 @@
 import org.dmg.pmml.DataDictionary;
 import org.dmg.pmml.DataField;
 import org.dmg.pmml.DataType;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.SimplePredicate;
 import org.junit.jupiter.api.Test;
 import org.kie.pmml.api.enums.OPERATOR;
@@ -46,7 +45,7 @@
     void getSimplePredicateVariableDeclaration() throws IOException {
         String variableName = "variableName";
         final SimplePredicate simplePredicate = new SimplePredicate();
-        simplePredicate.setField(FieldName.create("CUSTOM_FIELD"));
+        simplePredicate.setField("CUSTOM_FIELD");
         simplePredicate.setValue("235.435");
         simplePredicate.setOperator(SimplePredicate.Operator.EQUAL);
         String operatorString = OPERATOR.class.getName() + "." + OPERATOR.byName(simplePredicate.getOperator().value());
@@ -58,8 +57,7 @@
 
         BlockStmt retrieved = KiePMMLSimplePredicateFactory.getSimplePredicateVariableDeclaration(variableName, simplePredicate, getFieldsFromDataDictionary(dataDictionary));
         String text = getFileContent(TEST_01_SOURCE);
-        Statement expected = JavaParserUtils.parseBlock(String.format(text, variableName,
-                                                                      simplePredicate.getField().getValue(),
+        Statement expected = JavaParserUtils.parseBlock(String.format(text, variableName,simplePredicate.getField(),
                                                                       operatorString,
                                                                       simplePredicate.getValue()));
         assertThat(JavaParserUtils.equalsNode(expected, retrieved)).isTrue();
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/UpdateCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/UpdateCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/UpdateCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/UpdateCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/UpdateCommand.java	(date 1680178598885)
@@ -18,12 +18,12 @@
 
 import java.util.Arrays;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlSchemaType;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlSchemaType;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.core.common.DisconnectedFactHandle;
 import org.drools.commands.jaxb.JaxbUnknownAdapter;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/pom.xml	(date 1680177977383)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-drools-scorecard</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearAgendaCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearAgendaCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearAgendaCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearAgendaCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearAgendaCommand.java	(date 1680178598887)
@@ -16,9 +16,9 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.runtime.Context;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormDiscreteFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormDiscreteFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormDiscreteFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormDiscreteFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLNormDiscreteFactoryTest.java	(date 1680178598917)
@@ -23,7 +23,6 @@
 
 import com.github.javaparser.ast.stmt.BlockStmt;
 import com.github.javaparser.ast.stmt.Statement;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.NormDiscrete;
 import org.junit.jupiter.api.Test;
 import org.kie.pmml.commons.model.expressions.KiePMMLNormDiscrete;
@@ -45,7 +44,7 @@
         double mapMissingTo = 45.32;
 
         NormDiscrete normDiscrete = new NormDiscrete();
-        normDiscrete.setField(FieldName.create(fieldName));
+        normDiscrete.setField(fieldName);
         normDiscrete.setValue(fieldValue);
         normDiscrete.setMapMissingTo(mapMissingTo);
 
Index: kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/jandex/AbstractJandexTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/jandex/AbstractJandexTest.java b/kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/jandex/AbstractJandexTest.java
--- a/kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/jandex/AbstractJandexTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/jandex/AbstractJandexTest.java	(date 1680178598905)
@@ -29,9 +29,9 @@
 import java.util.Set;
 import java.util.stream.Collectors;
 
-import javax.json.bind.Jsonb;
-import javax.json.bind.JsonbBuilder;
-import javax.json.bind.JsonbConfig;
+import jakarta.json.bind.Jsonb;
+import jakarta.json.bind.JsonbBuilder;
+import jakarta.json.bind.JsonbConfig;
 
 import org.jboss.jandex.ClassInfo;
 import org.jboss.jandex.DotName;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-tests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-tests/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-tests/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-tests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-tests/pom.xml	(date 1680177977443)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-drools-scorecard</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/FireUntilHaltCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/FireUntilHaltCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/FireUntilHaltCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/FireUntilHaltCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/FireUntilHaltCommand.java	(date 1680178598885)
@@ -16,11 +16,11 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAnyElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAnyElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.core.common.InternalWorkingMemory;
 import org.drools.commands.jaxb.JaxbUnknownAdapter;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDerivedFieldFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDerivedFieldFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDerivedFieldFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDerivedFieldFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLDerivedFieldFactoryTest.java	(date 1680178598917)
@@ -27,7 +27,6 @@
 import org.dmg.pmml.Constant;
 import org.dmg.pmml.DataType;
 import org.dmg.pmml.DerivedField;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.FieldRef;
 import org.dmg.pmml.OpType;
 import org.junit.jupiter.api.Test;
@@ -59,7 +58,7 @@
         Constant constant = new Constant();
         constant.setValue(value1);
         DerivedField derivedField = new DerivedField();
-        derivedField.setName(FieldName.create(PARAM_1));
+        derivedField.setName(PARAM_1);
         derivedField.setDataType(DataType.DOUBLE);
         derivedField.setOpType(OpType.CONTINUOUS);
         derivedField.setExpression(constant);
@@ -70,8 +69,7 @@
         String text = getFileContent(TEST_01_SOURCE);
         Statement expected = JavaParserUtils
                 .parseBlock(String.format(text, constant.getValue(),
-                                          variableName,
-                                          derivedField.getName().getValue(),
+                                          variableName,derivedField.getName(),
                                           dataType,
                                           opType));
         assertThat(JavaParserUtils.equalsNode(expected, retrieved)).isTrue();
@@ -85,9 +83,9 @@
     void getDerivedFieldVariableDeclarationWithFieldRef() throws IOException {
         final String variableName = "variableName";
         FieldRef fieldRef = new FieldRef();
-        fieldRef.setField(FieldName.create("FIELD_REF"));
+        fieldRef.setField("FIELD_REF");
         DerivedField derivedField = new DerivedField();
-        derivedField.setName(FieldName.create(PARAM_1));
+        derivedField.setName(PARAM_1);
         derivedField.setDataType(DataType.DOUBLE);
         derivedField.setOpType(OpType.CONTINUOUS);
         derivedField.setExpression(fieldRef);
@@ -97,9 +95,8 @@
                 org.kie.pmml.compiler.commons.codegenfactories.KiePMMLDerivedFieldFactory.getDerivedFieldVariableDeclaration(variableName, derivedField);
         String text = getFileContent(TEST_02_SOURCE);
         Statement expected = JavaParserUtils
-                .parseBlock(String.format(text, fieldRef.getField().getValue(),
-                                          variableName,
-                                          derivedField.getName().getValue(),
+                .parseBlock(String.format(text,fieldRef.getField(),
+                                          variableName,derivedField.getName(),
                                           dataType,
                                           opType));
         assertThat(JavaParserUtils.equalsNode(expected, retrieved)).isTrue();
@@ -115,12 +112,12 @@
         Constant constant = new Constant();
         constant.setValue(value1);
         FieldRef fieldRef = new FieldRef();
-        fieldRef.setField(FieldName.create("FIELD_REF"));
+        fieldRef.setField("FIELD_REF");
         Apply apply = new Apply();
         apply.setFunction("/");
         apply.addExpressions(constant, fieldRef);
         DerivedField derivedField = new DerivedField();
-        derivedField.setName(FieldName.create(PARAM_1));
+        derivedField.setName(PARAM_1);
         derivedField.setDataType(DataType.DOUBLE);
         derivedField.setOpType(OpType.CONTINUOUS);
         derivedField.setExpression(apply);
@@ -130,12 +127,10 @@
         String text = getFileContent(TEST_03_SOURCE);
         Statement expected = JavaParserUtils
                 .parseBlock(String.format(text,
-                                          constant.getValue(),
-                                          fieldRef.getField().getValue(),
+                                          constant.getValue(),fieldRef.getField(),
                                           apply.getFunction(),
                                           apply.getInvalidValueTreatment().value(),
-                                          variableName,
-                                          derivedField.getName().getValue(),
+                                          variableName,derivedField.getName(),
                                           dataType,
                                           opType));
         assertThat(JavaParserUtils.equalsNode(expected, retrieved)).isTrue();
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/GetEntryPointsCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetEntryPointsCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetEntryPointsCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetEntryPointsCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetEntryPointsCommand.java	(date 1680178598883)
@@ -18,7 +18,7 @@
 
 import java.util.ArrayList;
 import java.util.Collection;
-import javax.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlAttribute;
 
 import org.drools.commands.EntryPointCreator;
 import org.kie.api.command.ExecutableCommand;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLRowFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLRowFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLRowFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLRowFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLRowFactoryTest.java	(date 1680178598917)
@@ -56,14 +56,14 @@
         DerivedField mapValued = pmmlModel.getTransformationDictionary()
                 .getDerivedFields()
                 .stream()
-                .filter(derivedField -> MAPVALUED.equals(derivedField.getName().getValue()))
+                .filter(derivedField -> MAPVALUED.equals(derivedField.getName()))
                 .findFirst()
                 .orElseThrow(() -> new RuntimeException("Missing derived field " + MAPVALUED));
         MAPVALUED_ROW = ((MapValues) mapValued.getExpression()).getInlineTable().getRows().get(0);
         DerivedField dataEncoded = pmmlModel.getTransformationDictionary()
                 .getDerivedFields()
                 .stream()
-                .filter(derivedField -> DATAENCODED.equals(derivedField.getName().getValue()))
+                .filter(derivedField -> DATAENCODED.equals(derivedField.getName()))
                 .findFirst()
                 .orElseThrow(() -> new RuntimeException("Missing derived field " + MAPVALUED));
         DATAENCODED_ROW = ((MapValues) dataEncoded.getExpression()).getInlineTable().getRows().get(0);
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/UpdateInEntryPointCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/UpdateInEntryPointCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/UpdateInEntryPointCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/UpdateInEntryPointCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/UpdateInEntryPointCommand.java	(date 1680178598883)
@@ -18,8 +18,8 @@
 
 import java.util.Arrays;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
 
 import org.drools.core.common.DisconnectedFactHandle;
 import org.kie.api.command.ExecutableCommand;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLLocalTransformationsFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLLocalTransformationsFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLLocalTransformationsFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLLocalTransformationsFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLLocalTransformationsFactoryTest.java	(date 1680178598917)
@@ -27,7 +27,6 @@
 import org.dmg.pmml.Constant;
 import org.dmg.pmml.DataType;
 import org.dmg.pmml.DerivedField;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.LocalTransformations;
 import org.dmg.pmml.OpType;
 import org.junit.jupiter.api.Test;
@@ -78,7 +77,7 @@
         Constant constant = new Constant();
         constant.setValue(value1);
         DerivedField toReturn = new DerivedField();
-        toReturn.setName(FieldName.create(PARAM_2 + counter));
+        toReturn.setName(PARAM_2 + counter);
         toReturn.setDataType(DataType.DOUBLE);
         toReturn.setOpType(OpType.CONTINUOUS);
         toReturn.setExpression(constant);
Index: drools-test-coverage/standalone/kie-ci-without-domain/test-domain/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/standalone/kie-ci-without-domain/test-domain/pom.xml b/drools-test-coverage/standalone/kie-ci-without-domain/test-domain/pom.xml
--- a/drools-test-coverage/standalone/kie-ci-without-domain/test-domain/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/standalone/kie-ci-without-domain/test-domain/pom.xml	(date 1680177976862)
@@ -8,7 +8,7 @@
   <parent>
     <groupId>org.drools.testcoverage</groupId>
     <artifactId>drools-kie-ci-without-domain-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>drools-kie-ci-without-domain-test-domain</artifactId>
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectsInEntryPointCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectsInEntryPointCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectsInEntryPointCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectsInEntryPointCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetObjectsInEntryPointCommand.java	(date 1680178598887)
@@ -19,9 +19,9 @@
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.List;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
 
 import org.drools.commands.IdentifiableResult;
 import org.kie.api.command.ExecutableCommand;
Index: drools-verifier/drools-verifier-drl/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-verifier/drools-verifier-drl/pom.xml b/drools-verifier/drools-verifier-drl/pom.xml
--- a/drools-verifier/drools-verifier-drl/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-verifier/drools-verifier-drl/pom.xml	(date 1680177975395)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.drools</groupId>
     <artifactId>drools-verifier</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>drools-verifier-drl</artifactId>
Index: drools-test-coverage/standalone/kie-ci-without-domain/tests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/standalone/kie-ci-without-domain/tests/pom.xml b/drools-test-coverage/standalone/kie-ci-without-domain/tests/pom.xml
--- a/drools-test-coverage/standalone/kie-ci-without-domain/tests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/standalone/kie-ci-without-domain/tests/pom.xml	(date 1680177976894)
@@ -8,7 +8,7 @@
   <parent>
     <groupId>org.drools.testcoverage</groupId>
     <artifactId>drools-kie-ci-without-domain-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>drools-kie-ci-without-domain-tests</artifactId>
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandleInEntryPointCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandleInEntryPointCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandleInEntryPointCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandleInEntryPointCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandleInEntryPointCommand.java	(date 1680178598884)
@@ -16,7 +16,7 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlAttribute;
 
 import org.drools.core.common.InternalFactHandle;
 import org.kie.api.command.ExecutableCommand;
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldRefFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldRefFactoryTest.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldRefFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldRefFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/codegenfactories/KiePMMLFieldRefFactoryTest.java	(date 1680178598917)
@@ -23,7 +23,6 @@
 
 import com.github.javaparser.ast.stmt.BlockStmt;
 import com.github.javaparser.ast.stmt.Statement;
-import org.dmg.pmml.FieldName;
 import org.dmg.pmml.FieldRef;
 import org.junit.jupiter.api.Test;
 import org.kie.pmml.commons.model.expressions.KiePMMLFieldRef;
@@ -43,7 +42,7 @@
         String fieldName = "fieldName";
         String mapMissingTo = "mapMissingTo";
         FieldRef fieldRef = new FieldRef();
-        fieldRef.setField(FieldName.create(fieldName));
+        fieldRef.setField(fieldName);
         fieldRef.setMapMissingTo(mapMissingTo);
         BlockStmt retrieved = KiePMMLFieldRefFactory.getFieldRefVariableDeclaration(variableName, fieldRef);
         String text = getFileContent(TEST_01_SOURCE);
Index: drools-test-coverage/standalone/kie-ci-without-domain/test-kjar/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/standalone/kie-ci-without-domain/test-kjar/pom.xml b/drools-test-coverage/standalone/kie-ci-without-domain/test-kjar/pom.xml
--- a/drools-test-coverage/standalone/kie-ci-without-domain/test-kjar/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/standalone/kie-ci-without-domain/test-kjar/pom.xml	(date 1680177976868)
@@ -8,7 +8,7 @@
   <parent>
     <groupId>org.drools.testcoverage</groupId>
     <artifactId>drools-kie-ci-without-domain-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>drools-kie-ci-without-domain-test-kjar</artifactId>
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandleCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandleCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandleCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandleCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandleCommand.java	(date 1680178598886)
@@ -16,7 +16,7 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlAttribute;
 
 import org.drools.core.common.InternalFactHandle;
 import org.kie.api.command.ExecutableCommand;
Index: drools-verifier/drools-verifier-core/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-verifier/drools-verifier-core/pom.xml b/drools-verifier/drools-verifier-core/pom.xml
--- a/drools-verifier/drools-verifier-core/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-verifier/drools-verifier-core/pom.xml	(date 1680177975365)
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>drools-verifier</artifactId>
         <groupId>org.drools</groupId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertElementsCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertElementsCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertElementsCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertElementsCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertElementsCommand.java	(date 1680178598883)
@@ -19,11 +19,11 @@
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.List;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.IdentifiableResult;
 import org.drools.commands.runtime.ExecutionResultImpl;
Index: drools-verifier/drools-verifier-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-verifier/drools-verifier-api/pom.xml b/drools-verifier/drools-verifier-api/pom.xml
--- a/drools-verifier/drools-verifier-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-verifier/drools-verifier-api/pom.xml	(date 1680177975349)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.drools</groupId>
         <artifactId>drools-verifier</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/GetEntryPointCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetEntryPointCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetEntryPointCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetEntryPointCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetEntryPointCommand.java	(date 1680178598887)
@@ -16,7 +16,7 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlAttribute;
 
 import org.drools.commands.EntryPointCreator;
 import org.kie.api.command.ExecutableCommand;
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteCommand.java	(date 1680178598883)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.drools.core.common.DisconnectedFactHandle;
 import org.kie.api.command.ExecutableCommand;
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandlesCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandlesCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandlesCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandlesCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetFactHandlesCommand.java	(date 1680178598885)
@@ -18,9 +18,9 @@
 
 import java.util.ArrayList;
 import java.util.Collection;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
 
 import org.drools.core.common.InternalFactHandle;
 import org.kie.api.command.ExecutableCommand;
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteFromEntryPointCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteFromEntryPointCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteFromEntryPointCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteFromEntryPointCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/DeleteFromEntryPointCommand.java	(date 1680178598886)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
 
 import org.drools.core.common.DisconnectedFactHandle;
 import org.kie.api.command.ExecutableCommand;
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/AgendaGroupSetFocusCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/AgendaGroupSetFocusCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/AgendaGroupSetFocusCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/AgendaGroupSetFocusCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/AgendaGroupSetFocusCommand.java	(date 1680178598884)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.runtime.Context;
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/ObjectFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/ObjectFactory.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/ObjectFactory.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/ObjectFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/ObjectFactory.java	(date 1680178598886)
@@ -16,7 +16,7 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlRegistry;
+import jakarta.xml.bind.annotation.XmlRegistry;
 
 import org.drools.commands.runtime.rule.ModifyCommand.SetterImpl;
 
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/GetAgendaEventListenersCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetAgendaEventListenersCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetAgendaEventListenersCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetAgendaEventListenersCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/GetAgendaEventListenersCommand.java	(date 1680178598884)
@@ -17,7 +17,7 @@
 package org.drools.commands.runtime.rule;
 
 import java.util.Collection;
-import javax.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlAttribute;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.event.rule.AgendaEventListener;
Index: drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/test/java/org/drools/quarkus/ruleunit/examples/reactive/KafkaTestResourceLifecycleManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/test/java/org/drools/quarkus/ruleunit/examples/reactive/KafkaTestResourceLifecycleManager.java b/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/test/java/org/drools/quarkus/ruleunit/examples/reactive/KafkaTestResourceLifecycleManager.java
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/test/java/org/drools/quarkus/ruleunit/examples/reactive/KafkaTestResourceLifecycleManager.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/test/java/org/drools/quarkus/ruleunit/examples/reactive/KafkaTestResourceLifecycleManager.java	(date 1680178598935)
@@ -19,7 +19,7 @@
 import java.util.Map;
 
 import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;
-import io.smallrye.reactive.messaging.providers.connectors.InMemoryConnector;
+import io.smallrye.reactive.messaging.memory.InMemoryConnector;
 
 public class KafkaTestResourceLifecycleManager implements QuarkusTestResourceLifecycleManager {
 
Index: drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/test/java/org/drools/quarkus/ruleunit/examples/reactive/RuntimeTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/test/java/org/drools/quarkus/ruleunit/examples/reactive/RuntimeTest.java b/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/test/java/org/drools/quarkus/ruleunit/examples/reactive/RuntimeTest.java
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/test/java/org/drools/quarkus/ruleunit/examples/reactive/RuntimeTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-examples/drools-drl-quarkus-examples-reactive/src/test/java/org/drools/quarkus/ruleunit/examples/reactive/RuntimeTest.java	(date 1680178598935)
@@ -14,14 +14,13 @@
  * limitations under the License.
  */
 package org.drools.quarkus.ruleunit.examples.reactive;
-
-import javax.inject.Inject;
+import io.smallrye.reactive.messaging.memory.InMemorySource;
+import jakarta.inject.Inject;
 
 import io.quarkus.test.common.QuarkusTestResource;
 import io.quarkus.test.junit.QuarkusTest;
-import io.smallrye.reactive.messaging.providers.connectors.InMemoryConnector;
-import io.smallrye.reactive.messaging.providers.connectors.InMemorySink;
-import io.smallrye.reactive.messaging.providers.connectors.InMemorySource;
+import io.smallrye.reactive.messaging.memory.InMemoryConnector;
+import io.smallrye.reactive.messaging.memory.InMemorySink;
 import org.eclipse.microprofile.reactive.messaging.spi.Connector;
 import org.junit.jupiter.api.Test;
 
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearRuleFlowGroupCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearRuleFlowGroupCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearRuleFlowGroupCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearRuleFlowGroupCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearRuleFlowGroupCommand.java	(date 1680178598885)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.drools.core.common.ReteEvaluator;
 import org.kie.api.command.ExecutableCommand;
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertObjectInEntryPointCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertObjectInEntryPointCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertObjectInEntryPointCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertObjectInEntryPointCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/InsertObjectInEntryPointCommand.java	(date 1680178598886)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
 
 import org.drools.commands.IdentifiableResult;
 import org.drools.core.common.DefaultFactHandle;
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/ModifyCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/ModifyCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/ModifyCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/ModifyCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/ModifyCommand.java	(date 1680178598887)
@@ -19,11 +19,11 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
 import org.drools.core.base.CoreComponentsBuilder;
 import org.drools.core.common.DisconnectedFactHandle;
 import org.kie.api.command.ExecutableCommand;
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearAgendaGroupCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearAgendaGroupCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearAgendaGroupCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearAgendaGroupCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/ClearAgendaGroupCommand.java	(date 1680178598884)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime.rule;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.runtime.Context;
Index: drools-commands/src/main/java/org/drools/commands/runtime/rule/QueryCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/rule/QueryCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/rule/QueryCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/rule/QueryCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/rule/QueryCommand.java	(date 1680178598885)
@@ -19,10 +19,10 @@
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
 
 import org.drools.commands.IdentifiableResult;
 import org.drools.commands.runtime.FlatQueryResults;
Index: kie-drl/kie-drl-implementations/kie-drl-map-input/kie-drl-map-input-runtime/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-drl/kie-drl-implementations/kie-drl-map-input/kie-drl-map-input-runtime/pom.xml b/kie-drl/kie-drl-implementations/kie-drl-map-input/kie-drl-map-input-runtime/pom.xml
--- a/kie-drl/kie-drl-implementations/kie-drl-map-input/kie-drl-map-input-runtime/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-drl/kie-drl-implementations/kie-drl-map-input/kie-drl-map-input-runtime/pom.xml	(date 1680177976955)
@@ -6,7 +6,7 @@
     <parent>
         <artifactId>kie-drl-map-input</artifactId>
         <groupId>org.kie</groupId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
 
     <artifactId>kie-drl-map-input-runtime</artifactId>
Index: drools-reliability/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-reliability/pom.xml b/drools-reliability/pom.xml
--- a/drools-reliability/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-reliability/pom.xml	(date 1680178598881)
@@ -5,7 +5,7 @@
     <parent>
         <groupId>org.kie</groupId>
         <artifactId>drools-build-parent</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
         <relativePath>../build-parent/pom.xml</relativePath>
     </parent>
     <modelVersion>4.0.0</modelVersion>
@@ -35,7 +35,7 @@
     <dependencies>
         <dependency>
             <groupId>org.infinispan</groupId>
-            <artifactId>infinispan-core</artifactId>
+            <artifactId>infinispan-core-jakarta</artifactId>
         </dependency>
         <dependency>
             <groupId>org.drools</groupId>
Index: kie-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-api/pom.xml b/kie-api/pom.xml
--- a/kie-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-api/pom.xml	(date 1680177973868)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: bom/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bom/pom.xml b/bom/pom.xml
--- a/bom/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/bom/pom.xml	(date 1680177971459)
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>drools-parent</artifactId>
         <groupId>org.kie</groupId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: kie-util/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-util/pom.xml b/kie-util/pom.xml
--- a/kie-util/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-util/pom.xml	(date 1680177974506)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: kie-internal/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-internal/pom.xml b/kie-internal/pom.xml
--- a/kie-internal/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-internal/pom.xml	(date 1680178598866)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
@@ -75,11 +75,6 @@
       <artifactId>jaxb-core</artifactId>
        <scope>provided</scope>
     </dependency>
-    <dependency>
-      <groupId>com.sun.xml.bind</groupId>
-      <artifactId>jaxb-impl</artifactId>
-      <scope>provided</scope>
-    </dependency>
 
     <dependency>
       <groupId>jakarta.xml.bind</groupId>
Index: drools-ruleunits/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-ruleunits/pom.xml b/drools-ruleunits/pom.xml
--- a/drools-ruleunits/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-ruleunits/pom.xml	(date 1680177973480)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: kie-memory-compiler/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-memory-compiler/pom.xml b/kie-memory-compiler/pom.xml
--- a/kie-memory-compiler/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-memory-compiler/pom.xml	(date 1680177974260)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: kie-test-util/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-test-util/pom.xml b/kie-test-util/pom.xml
--- a/kie-test-util/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-test-util/pom.xml	(date 1680178598876)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
@@ -63,7 +63,8 @@
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jta</groupId>
-      <artifactId>narayana-jta</artifactId>
+      <artifactId>narayana-jta-jakarta</artifactId>
+      <version>5.13.1.Alpha1</version>
     </dependency>
     <dependency>
       <groupId>org.jboss</groupId>
Index: kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/MCDC2TCKGenerator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/MCDC2TCKGenerator.java b/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/MCDC2TCKGenerator.java
--- a/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/MCDC2TCKGenerator.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/MCDC2TCKGenerator.java	(date 1680178598930)
@@ -21,10 +21,10 @@
 import java.util.List;
 import java.util.Set;
 
-import javax.xml.bind.JAXBContext;
-import javax.xml.bind.JAXBElement;
-import javax.xml.bind.JAXBException;
-import javax.xml.bind.Marshaller;
+import jakarta.xml.bind.JAXBContext;
+import jakarta.xml.bind.JAXBElement;
+import jakarta.xml.bind.JAXBException;
+import jakarta.xml.bind.Marshaller;
 
 import org.kie.dmn.model.api.DecisionTable;
 import org.kie.dmn.validation.dtanalysis.mcdc.MCDCAnalyser.PosNegBlock;
Index: drools-wiring/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-wiring/pom.xml b/drools-wiring/pom.xml
--- a/drools-wiring/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-wiring/pom.xml	(date 1680177973656)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-distribution/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-distribution/pom.xml b/drools-distribution/pom.xml
--- a/drools-distribution/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-distribution/pom.xml	(date 1680177973069)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-io/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-io/pom.xml b/drools-io/pom.xml
--- a/drools-io/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-io/pom.xml	(date 1680177973305)
@@ -7,7 +7,7 @@
     <parent>
         <groupId>org.kie</groupId>
         <artifactId>drools-build-parent</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
         <relativePath>../build-parent/pom.xml</relativePath>
     </parent>
 
Index: drools-util/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-util/pom.xml b/drools-util/pom.xml
--- a/drools-util/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-util/pom.xml	(date 1680177973637)
@@ -7,7 +7,7 @@
     <parent>
         <groupId>org.kie</groupId>
         <artifactId>drools-build-parent</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
         <relativePath>../build-parent/pom.xml</relativePath>
     </parent>
 
Index: kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/TestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/TestCases.java b/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/TestCases.java
--- a/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/TestCases.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/TestCases.java	(date 1680178598930)
@@ -7,16 +7,16 @@
 import java.util.Map;
 
 import org.kie.dmn.feel.util.Generated;
-import javax.xml.bind.JAXBElement;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAnyAttribute;
-import javax.xml.bind.annotation.XmlAnyElement;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlSchemaType;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.JAXBElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAnyAttribute;
+import jakarta.xml.bind.annotation.XmlAnyElement;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlSchemaType;
+import jakarta.xml.bind.annotation.XmlType;
 import javax.xml.namespace.QName;
 
 import org.w3c.dom.Element;
Index: drools-commands/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/pom.xml b/drools-commands/pom.xml
--- a/drools-commands/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/pom.xml	(date 1680177972836)
@@ -7,7 +7,7 @@
     <parent>
         <groupId>org.kie</groupId>
         <artifactId>drools-build-parent</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
         <relativePath>../build-parent/pom.xml</relativePath>
     </parent>
 
Index: kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/TestCaseType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/TestCaseType.java b/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/TestCaseType.java
--- a/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/TestCaseType.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/TestCaseType.java	(date 1680178598931)
@@ -2,9 +2,9 @@
 package org.kie.dmn.validation.dtanalysis.mcdc.dmntck;
 
 import org.kie.dmn.feel.util.Generated;
-import javax.xml.bind.annotation.XmlEnum;
-import javax.xml.bind.annotation.XmlEnumValue;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.annotation.XmlEnum;
+import jakarta.xml.bind.annotation.XmlEnumValue;
+import jakarta.xml.bind.annotation.XmlType;
 
 
 /**
Index: drools-core/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-core/pom.xml b/drools-core/pom.xml
--- a/drools-core/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-core/pom.xml	(date 1680178598872)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
@@ -69,11 +69,6 @@
     <dependency>
       <groupId>com.sun.xml.bind</groupId>
       <artifactId>jaxb-core</artifactId>
-      <scope>provided</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.sun.xml.bind</groupId>
-      <artifactId>jaxb-impl</artifactId>
       <scope>provided</scope>
     </dependency>
     <dependency>
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/src/main/java/org/kie/pmml/models/clustering/compiler/factories/KiePMMLClusteringModelFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/src/main/java/org/kie/pmml/models/clustering/compiler/factories/KiePMMLClusteringModelFactory.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/src/main/java/org/kie/pmml/models/clustering/compiler/factories/KiePMMLClusteringModelFactory.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/src/main/java/org/kie/pmml/models/clustering/compiler/factories/KiePMMLClusteringModelFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-clustering/kie-pmml-models-clustering-compiler/src/main/java/org/kie/pmml/models/clustering/compiler/factories/KiePMMLClusteringModelFactory.java	(date 1680178598928)
@@ -170,7 +170,7 @@
         boolean isCenterField =
                 clusteringField.getCenterField() == null || clusteringField.getCenterField() == ClusteringField.CenterField.TRUE;
         KiePMMLCompareFunction kiePMMLCompareFunction = clusteringField.getCompareFunction() != null ? compareFunctionFrom(clusteringField.getCompareFunction()) : null;
-        return new KiePMMLClusteringField(clusteringField.getField().getValue(), fieldWeight, isCenterField,
+        return new KiePMMLClusteringField(clusteringField.getField(), fieldWeight, isCenterField,
                                           kiePMMLCompareFunction, null);
     }
 
@@ -250,7 +250,7 @@
                 clusteringField.getCenterField() == null || clusteringField.getCenterField() == ClusteringField.CenterField.TRUE;
 
         NodeList<Expression> arguments = new NodeList<>();
-        arguments.add(literalExprFrom(clusteringField.getField().getValue()));
+        arguments.add(literalExprFrom(clusteringField.getField()));
         arguments.add(new DoubleLiteralExpr(fieldWeight));
         arguments.add(new BooleanLiteralExpr(isCenterField));
         arguments.add(clusteringField.getCompareFunction() == null ? new NullLiteralExpr() :
Index: kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/ValueType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/ValueType.java b/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/ValueType.java
--- a/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/ValueType.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/ValueType.java	(date 1680178598931)
@@ -7,17 +7,17 @@
 import java.util.Map;
 
 import org.kie.dmn.feel.util.Generated;
-import javax.xml.bind.JAXBElement;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAnyAttribute;
-import javax.xml.bind.annotation.XmlAnyElement;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlElementRef;
-import javax.xml.bind.annotation.XmlSchemaType;
-import javax.xml.bind.annotation.XmlSeeAlso;
-import javax.xml.bind.annotation.XmlType;
+import jakarta.xml.bind.JAXBElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAnyAttribute;
+import jakarta.xml.bind.annotation.XmlAnyElement;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlElementRef;
+import jakarta.xml.bind.annotation.XmlSchemaType;
+import jakarta.xml.bind.annotation.XmlSeeAlso;
+import jakarta.xml.bind.annotation.XmlType;
 import javax.xml.namespace.QName;
 
 import org.w3c.dom.Element;
Index: drools-ecj/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-ecj/pom.xml b/drools-ecj/pom.xml
--- a/drools-ecj/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-ecj/pom.xml	(date 1680177973186)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.kie</groupId>
         <artifactId>drools-build-parent</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
         <relativePath>../build-parent/pom.xml</relativePath>
     </parent>
 
Index: kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/ObjectFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/ObjectFactory.java b/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/ObjectFactory.java
--- a/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/ObjectFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/ObjectFactory.java	(date 1680178598930)
@@ -2,9 +2,9 @@
 package org.kie.dmn.validation.dtanalysis.mcdc.dmntck;
 
 import org.kie.dmn.feel.util.Generated;
-import javax.xml.bind.JAXBElement;
-import javax.xml.bind.annotation.XmlElementDecl;
-import javax.xml.bind.annotation.XmlRegistry;
+import jakarta.xml.bind.JAXBElement;
+import jakarta.xml.bind.annotation.XmlElementDecl;
+import jakarta.xml.bind.annotation.XmlRegistry;
 import javax.xml.namespace.QName;
 
 
Index: drools-kiesession/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-kiesession/pom.xml b/drools-kiesession/pom.xml
--- a/drools-kiesession/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-kiesession/pom.xml	(date 1680177973327)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-drl-parser/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-parser/pom.xml b/drools-drl-parser/pom.xml
--- a/drools-drl-parser/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-parser/pom.xml	(date 1680177973151)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.kie</groupId>
         <artifactId>drools-build-parent</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
         <relativePath>../build-parent/pom.xml</relativePath>
     </parent>
 
Index: kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/package-info.java b/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/package-info.java
--- a/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/package-info.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-validation/src/main/java/org/kie/dmn/validation/dtanalysis/mcdc/dmntck/package-info.java	(date 1680178598931)
@@ -4,4 +4,4 @@
                                      xmlns = {@XmlNs(prefix = "tc", namespaceURI = "http://www.omg.org/spec/DMN/20160719/testcase")})
 package org.kie.dmn.validation.dtanalysis.mcdc.dmntck;
 
-import javax.xml.bind.annotation.XmlNs;
+import jakarta.xml.bind.annotation.XmlNs;
Index: drools-drl-ast/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-ast/pom.xml b/drools-drl-ast/pom.xml
--- a/drools-drl-ast/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-ast/pom.xml	(date 1680177973082)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-compiler/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-compiler/pom.xml b/drools-compiler/pom.xml
--- a/drools-compiler/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-compiler/pom.xml	(date 1680178598878)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
@@ -101,11 +101,6 @@
     <dependency>
       <groupId>com.sun.xml.bind</groupId>
       <artifactId>jaxb-core</artifactId>
-      <scope>provided</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.sun.xml.bind</groupId>
-      <artifactId>jaxb-impl</artifactId>
       <scope>provided</scope>
     </dependency>
     <dependency>
Index: drools-drl-extensions/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-extensions/pom.xml b/drools-drl-extensions/pom.xml
--- a/drools-drl-extensions/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-extensions/pom.xml	(date 1680177973092)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.kie</groupId>
         <artifactId>drools-build-parent</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
         <relativePath>../build-parent/pom.xml</relativePath>
     </parent>
 
Index: drools-xml-support/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-xml-support/pom.xml b/drools-xml-support/pom.xml
--- a/drools-xml-support/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-xml-support/pom.xml	(date 1680177973689)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-impact-analysis/drools-impact-analysis-parser/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-impact-analysis/drools-impact-analysis-parser/pom.xml b/drools-impact-analysis/drools-impact-analysis-parser/pom.xml
--- a/drools-impact-analysis/drools-impact-analysis-parser/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-impact-analysis/drools-impact-analysis-parser/pom.xml	(date 1680177975013)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>drools-impact-analysis</artifactId>
     <groupId>org.drools</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-mvel/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-mvel/pom.xml b/drools-mvel/pom.xml
--- a/drools-mvel/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-mvel/pom.xml	(date 1680178598880)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.kie</groupId>
         <artifactId>drools-build-parent</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
         <relativePath>../build-parent/pom.xml</relativePath>
     </parent>
 
@@ -67,11 +67,6 @@
         <dependency>
             <groupId>com.sun.xml.bind</groupId>
             <artifactId>jaxb-core</artifactId>
-            <scope>provided</scope>
-        </dependency>
-        <dependency>
-            <groupId>com.sun.xml.bind</groupId>
-            <artifactId>jaxb-impl</artifactId>
             <scope>provided</scope>
         </dependency>
         <dependency>
Index: drools-impact-analysis/drools-impact-analysis-model/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-impact-analysis/drools-impact-analysis-model/pom.xml b/drools-impact-analysis/drools-impact-analysis-model/pom.xml
--- a/drools-impact-analysis/drools-impact-analysis-model/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-impact-analysis/drools-impact-analysis-model/pom.xml	(date 1680177975003)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>drools-impact-analysis</artifactId>
     <groupId>org.drools</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-tms/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-tms/pom.xml b/drools-tms/pom.xml
--- a/drools-tms/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-tms/pom.xml	(date 1680177973569)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-impact-analysis/drools-impact-analysis-graph/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-impact-analysis/drools-impact-analysis-graph/pom.xml b/drools-impact-analysis/drools-impact-analysis-graph/pom.xml
--- a/drools-impact-analysis/drools-impact-analysis-graph/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-impact-analysis/drools-impact-analysis-graph/pom.xml	(date 1680177974982)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>drools-impact-analysis</artifactId>
     <groupId>org.drools</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-legacy-test-util/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-legacy-test-util/pom.xml b/drools-legacy-test-util/pom.xml
--- a/drools-legacy-test-util/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-legacy-test-util/pom.xml	(date 1680177973347)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.kie</groupId>
         <artifactId>drools-build-parent</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
         <relativePath>../build-parent/pom.xml</relativePath>
     </parent>
 
Index: drools-serialization-protobuf/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-serialization-protobuf/pom.xml b/drools-serialization-protobuf/pom.xml
--- a/drools-serialization-protobuf/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-serialization-protobuf/pom.xml	(date 1680177973524)
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.kie</groupId>
         <artifactId>drools-build-parent</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
         <relativePath>../build-parent/pom.xml</relativePath>
     </parent>
 
Index: drools-impact-analysis/drools-impact-analysis-itests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-impact-analysis/drools-impact-analysis-itests/pom.xml b/drools-impact-analysis/drools-impact-analysis-itests/pom.xml
--- a/drools-impact-analysis/drools-impact-analysis-itests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-impact-analysis/drools-impact-analysis-itests/pom.xml	(date 1680177974997)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>drools-impact-analysis</artifactId>
     <groupId>org.drools</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-beliefs/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-beliefs/pom.xml b/drools-beliefs/pom.xml
--- a/drools-beliefs/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-beliefs/pom.xml	(date 1680177972459)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-verifier/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-verifier/pom.xml b/drools-verifier/pom.xml
--- a/drools-verifier/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-verifier/pom.xml	(date 1680177973645)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-traits/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-traits/pom.xml b/drools-traits/pom.xml
--- a/drools-traits/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-traits/pom.xml	(date 1680178598901)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
@@ -128,8 +128,9 @@
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jta</groupId>
-      <artifactId>narayana-jta</artifactId>
+      <artifactId>narayana-jta-jakarta</artifactId>
       <scope>test</scope>
+      <version>5.13.1.Alpha1</version>
     </dependency>
     <dependency>
       <groupId>org.jboss</groupId>
@@ -140,7 +141,7 @@
     <!-- Hibernate -->
     <dependency>
       <groupId>org.hibernate</groupId>
-      <artifactId>hibernate-core</artifactId>
+      <artifactId>hibernate-core-jakarta</artifactId>
       <scope>test</scope>
       <exclusions>
         <exclusion>
@@ -152,6 +153,7 @@
           <artifactId>jandex</artifactId>
         </exclusion>
       </exclusions>
+      <version>5.6.15.Final</version>
     </dependency>
     <dependency>
       <groupId>${jandex.group-id}</groupId>
@@ -162,6 +164,12 @@
       <groupId>org.hibernate</groupId>
       <artifactId>hibernate-entitymanager</artifactId>
       <scope>test</scope>
+      <exclusions>
+        <exclusion>
+          <groupId>org.hibernate</groupId>
+          <artifactId>hibernate-core</artifactId>
+        </exclusion>
+      </exclusions>
     </dependency>
 
     <dependency>
Index: drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/main/java/org/drools/quarkus/quickstart/test/HomeAlertsBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/main/java/org/drools/quarkus/quickstart/test/HomeAlertsBean.java b/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/main/java/org/drools/quarkus/quickstart/test/HomeAlertsBean.java
--- a/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/main/java/org/drools/quarkus/quickstart/test/HomeAlertsBean.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/drools-drl-quarkus-quickstart-test/src/main/java/org/drools/quarkus/quickstart/test/HomeAlertsBean.java	(date 1680178598934)
@@ -19,8 +19,8 @@
 import java.util.List;
 import java.util.stream.Collectors;
 
-import javax.enterprise.context.ApplicationScoped;
-import javax.inject.Inject;
+import jakarta.enterprise.context.ApplicationScoped;
+import jakarta.inject.Inject;
 
 import org.drools.quarkus.quickstart.test.model.Alert;
 import org.drools.quarkus.quickstart.test.model.CCTV;
Index: kie-test-util/src/main/java/org/kie/test/util/db/internal/PoolingDataSourceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-test-util/src/main/java/org/kie/test/util/db/internal/PoolingDataSourceFactory.java b/kie-test-util/src/main/java/org/kie/test/util/db/internal/PoolingDataSourceFactory.java
--- a/kie-test-util/src/main/java/org/kie/test/util/db/internal/PoolingDataSourceFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-test-util/src/main/java/org/kie/test/util/db/internal/PoolingDataSourceFactory.java	(date 1680178598876)
@@ -26,8 +26,8 @@
 import javax.sql.DataSource;
 import javax.sql.XAConnection;
 import javax.sql.XADataSource;
-import javax.transaction.TransactionManager;
-import javax.transaction.TransactionSynchronizationRegistry;
+import jakarta.transaction.TransactionManager;
+import jakarta.transaction.TransactionSynchronizationRegistry;
 import javax.transaction.xa.XAResource;
 
 import com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule;
Index: drools-templates/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-templates/pom.xml b/drools-templates/pom.xml
--- a/drools-templates/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-templates/pom.xml	(date 1680177973544)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: kie-test-util/src/main/java/org/kie/test/util/db/PersistenceUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-test-util/src/main/java/org/kie/test/util/db/PersistenceUtil.java b/kie-test-util/src/main/java/org/kie/test/util/db/PersistenceUtil.java
--- a/kie-test-util/src/main/java/org/kie/test/util/db/PersistenceUtil.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-test-util/src/main/java/org/kie/test/util/db/PersistenceUtil.java	(date 1680178598877)
@@ -22,8 +22,8 @@
 import java.util.Map;
 import java.util.Properties;
 
-import javax.persistence.EntityManagerFactory;
-import javax.persistence.Persistence;
+import jakarta.persistence.EntityManagerFactory;
+import jakarta.persistence.Persistence;
 
 import org.h2.tools.DeleteDbFiles;
 import org.h2.tools.Server;
Index: drools-persistence/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-persistence/pom.xml b/drools-persistence/pom.xml
--- a/drools-persistence/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-persistence/pom.xml	(date 1680177973420)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-examples/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-examples/pom.xml b/drools-examples/pom.xml
--- a/drools-examples/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-examples/pom.xml	(date 1680177973274)
@@ -5,7 +5,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: kie-test-util/src/main/java/org/kie/test/util/db/internal/PoolingDataSourceWrapperImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-test-util/src/main/java/org/kie/test/util/db/internal/PoolingDataSourceWrapperImpl.java b/kie-test-util/src/main/java/org/kie/test/util/db/internal/PoolingDataSourceWrapperImpl.java
--- a/kie-test-util/src/main/java/org/kie/test/util/db/internal/PoolingDataSourceWrapperImpl.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-test-util/src/main/java/org/kie/test/util/db/internal/PoolingDataSourceWrapperImpl.java	(date 1680178598877)
@@ -27,8 +27,8 @@
 import javax.naming.InitialContext;
 import javax.naming.NamingException;
 import javax.sql.XADataSource;
-import javax.transaction.TransactionManager;
-import javax.transaction.TransactionSynchronizationRegistry;
+import jakarta.transaction.TransactionManager;
+import jakarta.transaction.TransactionSynchronizationRegistry;
 
 import com.arjuna.ats.jta.common.jtaPropertyManager;
 import org.apache.tomcat.dbcp.dbcp2.managed.BasicManagedDataSource;
Index: drools-decisiontables/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-decisiontables/pom.xml b/drools-decisiontables/pom.xml
--- a/drools-decisiontables/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-decisiontables/pom.xml	(date 1680177973025)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-model/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-model/pom.xml b/drools-model/pom.xml
--- a/drools-model/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-model/pom.xml	(date 1680177973376)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: kie-ci/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-ci/pom.xml b/kie-ci/pom.xml
--- a/kie-ci/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-ci/pom.xml	(date 1680177973955)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-test-coverage/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/pom.xml b/drools-test-coverage/pom.xml
--- a/drools-test-coverage/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/pom.xml	(date 1680177972398)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-examples-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-examples-api/pom.xml b/drools-examples-api/pom.xml
--- a/drools-examples-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-examples-api/pom.xml	(date 1680177973232)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-metric/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-metric/pom.xml b/drools-metric/pom.xml
--- a/drools-metric/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-metric/pom.xml	(date 1680177973366)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-scenario-simulation/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-scenario-simulation/pom.xml b/drools-scenario-simulation/pom.xml
--- a/drools-scenario-simulation/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-scenario-simulation/pom.xml	(date 1680177973487)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-engine/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-engine/pom.xml b/drools-engine/pom.xml
--- a/drools-engine/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-engine/pom.xml	(date 1680177973220)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-alphanetwork-compiler/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-alphanetwork-compiler/pom.xml b/drools-alphanetwork-compiler/pom.xml
--- a/drools-alphanetwork-compiler/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-alphanetwork-compiler/pom.xml	(date 1680177972433)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-impact-analysis/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-impact-analysis/pom.xml b/drools-impact-analysis/pom.xml
--- a/drools-impact-analysis/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-impact-analysis/pom.xml	(date 1680177973293)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-engine-classic/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-engine-classic/pom.xml b/drools-engine-classic/pom.xml
--- a/drools-engine-classic/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-engine-classic/pom.xml	(date 1680177973203)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-fastutil/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-fastutil/pom.xml b/drools-fastutil/pom.xml
--- a/drools-fastutil/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-fastutil/pom.xml	(date 1680177973286)
@@ -7,7 +7,7 @@
     <parent>
         <groupId>org.kie</groupId>
         <artifactId>drools-build-parent</artifactId>
-        <version>8.37.0-SNAPSHOT</version>
+        <version>quarkus-3-SNAPSHOT</version>
         <relativePath>../build-parent/pom.xml</relativePath>
     </parent>
 
Index: drools-retediagram/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-retediagram/pom.xml b/drools-retediagram/pom.xml
--- a/drools-retediagram/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-retediagram/pom.xml	(date 1680177973469)
@@ -4,7 +4,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: kie-drl/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-drl/pom.xml b/kie-drl/pom.xml
--- a/kie-drl/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-drl/pom.xml	(date 1680177974059)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-model/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-model/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-model/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-model/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-model/pom.xml	(date 1680177977112)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-mining</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: efesto/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/efesto/pom.xml b/efesto/pom.xml
--- a/efesto/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/efesto/pom.xml	(date 1680177973788)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: kie-maven-plugin/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-maven-plugin/pom.xml b/kie-maven-plugin/pom.xml
--- a/kie-maven-plugin/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-maven-plugin/pom.xml	(date 1680177974250)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: kie-dmn/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/pom.xml b/kie-dmn/pom.xml
--- a/kie-dmn/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/pom.xml	(date 1680177974027)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: drools-drl-quarkus-extension/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-drl-quarkus-extension/pom.xml b/drools-drl-quarkus-extension/pom.xml
--- a/drools-drl-quarkus-extension/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-drl-quarkus-extension/pom.xml	(date 1680177973166)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: kie-archetypes/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-archetypes/pom.xml b/kie-archetypes/pom.xml
--- a/kie-archetypes/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-archetypes/pom.xml	(date 1680177973888)
@@ -6,7 +6,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>drools-build-parent</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
     <relativePath>../build-parent/pom.xml</relativePath>
   </parent>
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/pom.xml	(date 1680177977087)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-mining</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-test-coverage/test-integration-ruleunits/test-integration-ruleunits-jar/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/test-integration-ruleunits/test-integration-ruleunits-jar/pom.xml b/drools-test-coverage/test-integration-ruleunits/test-integration-ruleunits-jar/pom.xml
--- a/drools-test-coverage/test-integration-ruleunits/test-integration-ruleunits-jar/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/test-integration-ruleunits/test-integration-ruleunits-jar/pom.xml	(date 1680177976364)
@@ -14,7 +14,7 @@
   <parent>
     <artifactId>test-integration-ruleunits</artifactId>
     <groupId>org.drools.testcoverage</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-test-coverage/test-integration-ruleunits/test-integration-ruleunits-tests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-test-coverage/test-integration-ruleunits/test-integration-ruleunits-tests/pom.xml b/drools-test-coverage/test-integration-ruleunits/test-integration-ruleunits-tests/pom.xml
--- a/drools-test-coverage/test-integration-ruleunits/test-integration-ruleunits-tests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-test-coverage/test-integration-ruleunits/test-integration-ruleunits-tests/pom.xml	(date 1680177976386)
@@ -14,7 +14,7 @@
   <parent>
     <artifactId>test-integration-ruleunits</artifactId>
     <groupId>org.drools.testcoverage</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-evaluator/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-evaluator/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-evaluator/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-evaluator/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-evaluator/pom.xml	(date 1680177977102)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-mining</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessInstanceCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessInstanceCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessInstanceCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessInstanceCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessInstanceCommand.java	(date 1680178598891)
@@ -16,9 +16,9 @@
 
 package org.drools.commands.runtime.process;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.runtime.Context;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstanceByCorrelationKeyCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstanceByCorrelationKeyCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstanceByCorrelationKeyCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstanceByCorrelationKeyCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstanceByCorrelationKeyCommand.java	(date 1680178598890)
@@ -16,12 +16,12 @@
 
 package org.drools.commands.runtime.process;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.runtime.Context;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-tests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-tests/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-tests/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-tests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-tests/pom.xml	(date 1680177977149)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-mining</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/CompleteWorkItemCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/CompleteWorkItemCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/CompleteWorkItemCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/CompleteWorkItemCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/CompleteWorkItemCommand.java	(date 1680178598891)
@@ -19,12 +19,12 @@
 import java.util.HashMap;
 import java.util.Map;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.jaxb.JaxbMapAdapter;
 import org.kie.api.command.ExecutableCommand;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessIdsCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessIdsCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessIdsCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessIdsCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessIdsCommand.java	(date 1680178598890)
@@ -18,10 +18,10 @@
 
 import java.util.ArrayList;
 import java.util.List;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.definition.process.Process;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/ObjectFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/ObjectFactory.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/ObjectFactory.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/ObjectFactory.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/ObjectFactory.java	(date 1680178598890)
@@ -17,7 +17,7 @@
 package org.drools.commands.runtime.process;
 
 
-import javax.xml.bind.annotation.XmlRegistry;
+import jakarta.xml.bind.annotation.XmlRegistry;
 
 
 @XmlRegistry
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/AbortProcessInstanceCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/AbortProcessInstanceCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/AbortProcessInstanceCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/AbortProcessInstanceCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/AbortProcessInstanceCommand.java	(date 1680178598891)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime.process;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.runtime.Context;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstanceCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstanceCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstanceCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstanceCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstanceCommand.java	(date 1680178598889)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime.process;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.runtime.Context;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstancesCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstancesCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstancesCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstancesCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessInstancesCommand.java	(date 1680178598889)
@@ -18,10 +18,10 @@
 
 import java.util.ArrayList;
 import java.util.Collection;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.runtime.Context;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/AbortWorkItemCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/AbortWorkItemCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/AbortWorkItemCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/AbortWorkItemCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/AbortWorkItemCommand.java	(date 1680178598889)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime.process;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.runtime.Context;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/GetWorkItemIdsCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/GetWorkItemIdsCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/GetWorkItemIdsCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/GetWorkItemIdsCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/GetWorkItemIdsCommand.java	(date 1680178598889)
@@ -19,10 +19,10 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Set;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.drools.core.process.WorkItem;
 import org.drools.core.process.WorkItemManager;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/ReTryWorkItemCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/ReTryWorkItemCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/ReTryWorkItemCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/ReTryWorkItemCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/ReTryWorkItemCommand.java	(date 1680178598890)
@@ -19,11 +19,11 @@
 import java.util.HashMap;
 import java.util.Map;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.core.process.WorkItemManager;
 import org.drools.commands.jaxb.JaxbMapAdapter;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/CreateCorrelatedProcessInstanceCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/CreateCorrelatedProcessInstanceCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/CreateCorrelatedProcessInstanceCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/CreateCorrelatedProcessInstanceCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/CreateCorrelatedProcessInstanceCommand.java	(date 1680178598891)
@@ -19,12 +19,12 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlElementWrapper;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlElementWrapper;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.IdentifiableResult;
 import org.drools.commands.jaxb.JaxbMapAdapter;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/RegisterWorkItemHandlerCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/RegisterWorkItemHandlerCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/RegisterWorkItemHandlerCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/RegisterWorkItemHandlerCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/RegisterWorkItemHandlerCommand.java	(date 1680178598889)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime.process;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.jaxb.JaxbUnknownAdapter;
 import org.kie.api.command.ExecutableCommand;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/SetProcessInstanceVariablesCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/SetProcessInstanceVariablesCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/SetProcessInstanceVariablesCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/SetProcessInstanceVariablesCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/SetProcessInstanceVariablesCommand.java	(date 1680178598890)
@@ -19,12 +19,12 @@
 import java.util.HashMap;
 import java.util.Map;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.jaxb.JaxbMapAdapter;
 import org.kie.api.command.ExecutableCommand;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessCommand.java	(date 1680178598891)
@@ -19,14 +19,14 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAnyElement;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlElementWrapper;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAnyElement;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlElementWrapper;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.IdentifiableResult;
 import org.drools.commands.jaxb.JaxbMapAdapter;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/GetWorkItemCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/GetWorkItemCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/GetWorkItemCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/GetWorkItemCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/GetWorkItemCommand.java	(date 1680178598889)
@@ -16,10 +16,10 @@
 
 package org.drools.commands.runtime.process;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 import org.drools.core.process.WorkItem;
 import org.drools.core.process.WorkItemManager;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/SignalEventCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/SignalEventCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/SignalEventCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/SignalEventCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/SignalEventCommand.java	(date 1680178598890)
@@ -16,12 +16,12 @@
 
 package org.drools.commands.runtime.process;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.jaxb.JaxbUnknownAdapter;
 import org.kie.api.command.ExecutableCommand;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/CreateProcessInstanceCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/CreateProcessInstanceCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/CreateProcessInstanceCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/CreateProcessInstanceCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/CreateProcessInstanceCommand.java	(date 1680178598891)
@@ -19,12 +19,12 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlElementWrapper;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlElementWrapper;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.IdentifiableResult;
 import org.drools.commands.jaxb.JaxbMapAdapter;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessEventListenersCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessEventListenersCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessEventListenersCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessEventListenersCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/GetProcessEventListenersCommand.java	(date 1680178598890)
@@ -17,9 +17,9 @@
 package org.drools.commands.runtime.process;
 
 import java.util.Collection;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
 
 import org.kie.api.command.ExecutableCommand;
 import org.kie.api.event.process.ProcessEventListener;
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/StartCorrelatedProcessCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/StartCorrelatedProcessCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/StartCorrelatedProcessCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/StartCorrelatedProcessCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/StartCorrelatedProcessCommand.java	(date 1680178598889)
@@ -19,13 +19,13 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlElementWrapper;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlAttribute;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlElementWrapper;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.drools.commands.IdentifiableResult;
 import org.drools.commands.jaxb.JaxbMapAdapter;
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/src/test/java/org/kie/pmml/models/drools/tree/compiler/factories/KiePMMLTreeModelFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/src/test/java/org/kie/pmml/models/drools/tree/compiler/factories/KiePMMLTreeModelFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/src/test/java/org/kie/pmml/models/drools/tree/compiler/factories/KiePMMLTreeModelFactoryTest.java
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/src/test/java/org/kie/pmml/models/drools/tree/compiler/factories/KiePMMLTreeModelFactoryTest.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/src/test/java/org/kie/pmml/models/drools/tree/compiler/factories/KiePMMLTreeModelFactoryTest.java	(date 1680178598929)
@@ -98,7 +98,7 @@
         assertThat(retrieved).isNotNull();
         List<DataField> dataFields = dataDictionary.getDataFields();
         assertThat(fieldTypeMap).hasSameSizeAs(dataFields);
-        dataFields.forEach(dataField -> assertThat(fieldTypeMap).containsKey(dataField.getName().getValue()));
+        dataFields.forEach(dataField -> assertThat(fieldTypeMap).containsKey(dataField.getName()));
     }
 
     @Test
Index: drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessFromNodeIdsCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessFromNodeIdsCommand.java b/drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessFromNodeIdsCommand.java
--- a/drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessFromNodeIdsCommand.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-commands/src/main/java/org/drools/commands/runtime/process/StartProcessFromNodeIdsCommand.java	(date 1680178598888)
@@ -18,12 +18,12 @@
 
 import java.util.List;
 import java.util.Map;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlElementWrapper;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlElement;
+import jakarta.xml.bind.annotation.XmlElementWrapper;
+import jakarta.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
 
 import org.kie.api.runtime.Context;
 import org.kie.api.runtime.ExecutionResults;
Index: efesto/efesto-core/efesto-compilation-manager/efesto-compilation-manager-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/efesto/efesto-core/efesto-compilation-manager/efesto-compilation-manager-api/pom.xml b/efesto/efesto-core/efesto-compilation-manager/efesto-compilation-manager-api/pom.xml
--- a/efesto/efesto-core/efesto-compilation-manager/efesto-compilation-manager-api/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/efesto/efesto-core/efesto-compilation-manager/efesto-compilation-manager-api/pom.xml	(date 1680177976905)
@@ -7,7 +7,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>efesto-compilation-manager</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>efesto-compilation-manager-api</artifactId>
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-compiler/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-compiler/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-compiler/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-compiler/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-compiler/pom.xml	(date 1680177977236)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-scorecard</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: drools-core/src/main/java/org/drools/core/util/AbstractBaseLinkedListNode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/drools-core/src/main/java/org/drools/core/util/AbstractBaseLinkedListNode.java b/drools-core/src/main/java/org/drools/core/util/AbstractBaseLinkedListNode.java
--- a/drools-core/src/main/java/org/drools/core/util/AbstractBaseLinkedListNode.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/drools-core/src/main/java/org/drools/core/util/AbstractBaseLinkedListNode.java	(date 1680178598872)
@@ -16,9 +16,9 @@
 
 package org.drools.core.util;
 
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlRootElement;
+import jakarta.xml.bind.annotation.XmlAccessType;
+import jakarta.xml.bind.annotation.XmlAccessorType;
+import jakarta.xml.bind.annotation.XmlRootElement;
 
 /**
  * Provides a abstract base implementation that an object can extend so that it can be used in a LinkedList.
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-model/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-model/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-model/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-model/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-model/pom.xml	(date 1680177977256)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-scorecard</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: efesto/efesto-core/efesto-compilation-manager/efesto-compilation-manager-core/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/efesto/efesto-core/efesto-compilation-manager/efesto-compilation-manager-core/pom.xml b/efesto/efesto-core/efesto-compilation-manager/efesto-compilation-manager-core/pom.xml
--- a/efesto/efesto-core/efesto-compilation-manager/efesto-compilation-manager-core/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/efesto/efesto-core/efesto-compilation-manager/efesto-compilation-manager-core/pom.xml	(date 1680177976917)
@@ -19,7 +19,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>efesto-compilation-manager</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
 
   <artifactId>efesto-compilation-manager-core</artifactId>
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-tests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-tests/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-tests/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-tests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-tests/pom.xml	(date 1680177977289)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-scorecard</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-evaluator/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-evaluator/pom.xml b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-evaluator/pom.xml
--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-evaluator/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-scorecard/kie-pmml-models-scorecard-evaluator/pom.xml	(date 1680177977246)
@@ -3,7 +3,7 @@
   <parent>
     <groupId>org.kie</groupId>
     <artifactId>kie-pmml-models-scorecard</artifactId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
Index: kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/utils/ModelUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/utils/ModelUtils.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/utils/ModelUtils.java
--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/utils/ModelUtils.java	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/utils/ModelUtils.java	(date 1680178598906)
@@ -48,8 +48,8 @@
 import org.dmg.pmml.Targets;
 import org.dmg.pmml.TransformationDictionary;
 import org.dmg.pmml.Value;
-import org.jpmml.model.inlinetable.InputCell;
-import org.jpmml.model.inlinetable.OutputCell;
+import org.jpmml.model.cells.InputCell;
+import org.jpmml.model.cells.OutputCell;
 import org.kie.pmml.api.enums.CAST_INTEGER;
 import org.kie.pmml.api.enums.DATA_TYPE;
 import org.kie.pmml.api.enums.FIELD_USAGE_TYPE;
@@ -120,8 +120,8 @@
         if (model.getMiningSchema() != null && model.getMiningSchema().getMiningFields() != null) {
             for (MiningField miningField : model.getMiningSchema().getMiningFields()) {
                 if (MiningField.UsageType.TARGET.equals(miningField.getUsageType()) || MiningField.UsageType.PREDICTED.equals(miningField.getUsageType())) {
-                    OP_TYPE opType = getOpType(fields, model, miningField.getName().getValue());
-                    toReturn.add(new KiePMMLNameOpType(miningField.getName().getValue(), opType));
+                    OP_TYPE opType = getOpType(fields, model,miningField.getName());
+                    toReturn.add(new KiePMMLNameOpType(miningField.getName(), opType));
                 }
             }
         }
@@ -142,8 +142,7 @@
         if (model.getMiningSchema() != null && model.getMiningSchema().getMiningFields() != null) {
             for (MiningField miningField : model.getMiningSchema().getMiningFields()) {
                 if (MiningField.UsageType.TARGET.equals(miningField.getUsageType()) || MiningField.UsageType.PREDICTED.equals(miningField.getUsageType())) {
-                    toReturn.put(miningField.getName().getValue(), getDATA_TYPE(fields,
-                                                                                miningField.getName().getValue()));
+                    toReturn.put(miningField.getName(), getDATA_TYPE(fields,miningField.getName()));
                 }
             }
         }
@@ -179,7 +178,7 @@
                                                         final String fieldName) {
         return fields == null ? Optional.empty() :
                 fields.stream()
-                        .filter(dataField -> Objects.equals(fieldName, dataField.getName().getValue()) && dataField.getOpType() != null)
+                        .filter(dataField -> Objects.equals(fieldName,dataField.getName()) && dataField.getOpType() != null)
                         .map(dataField -> OP_TYPE.byName(dataField.getOpType().value()))
                         .findFirst();
     }
@@ -193,7 +192,7 @@
     public static Optional<OP_TYPE> getOpTypeFromMiningFields(MiningSchema miningSchema, String fieldName) {
         if (miningSchema != null && miningSchema.getMiningFields() != null) {
             return miningSchema.getMiningFields().stream()
-                    .filter(miningField -> Objects.equals(fieldName, miningField.getName().getValue()) && miningField.getOpType() != null)
+                    .filter(miningField -> Objects.equals(fieldName,miningField.getName()) && miningField.getOpType() != null)
                     .findFirst()
                     .map(dataField -> OP_TYPE.byName(dataField.getOpType().value()));
         } else {
@@ -210,7 +209,7 @@
     public static Optional<OP_TYPE> getOpTypeFromTargets(Targets targets, String fieldName) {
         if (targets != null && targets.getTargets() != null) {
             return targets.getTargets().stream()
-                    .filter(target -> Objects.equals(fieldName, target.getField().getValue()) && target.getOpType() != null)
+                    .filter(target -> Objects.equals(fieldName,target.getField()) && target.getOpType() != null)
                     .findFirst()
                     .map(dataField -> OP_TYPE.byName(dataField.getOpType().value()));
         } else {
@@ -228,7 +227,7 @@
     public static DataType getDataType(final List<Field<?>> fields,
                                        final String fieldName) {
         return fields.stream()
-                .filter(fld -> Objects.equals(fieldName, fld.getName().getValue()))
+                .filter(fld -> Objects.equals(fieldName,fld.getName()))
                 .map(Field::getDataType)
                 .findFirst()
                 .orElseThrow(() -> new KiePMMLInternalException(String.format("Failed to find DataType for " +
@@ -244,7 +243,7 @@
      */
     public static DATA_TYPE getDATA_TYPE(final List<Field<?>> fields, String fieldName) {
         Optional<DATA_TYPE> toReturn = fields.stream()
-                .filter(fld -> Objects.equals(fieldName, fld.getName().getValue()))
+                .filter(fld -> Objects.equals(fieldName,fld.getName()))
                 .findFirst()
                 .map(dataField -> DATA_TYPE.byName(dataField.getDataType().value()));
         return toReturn.orElseThrow(() -> new KiePMMLInternalException(String.format("Failed to find DATA_TYPE for " +
@@ -328,7 +327,7 @@
      */
     public static org.kie.pmml.api.models.MiningField convertToKieMiningField(final MiningField toConvert,
                                                                               final Field<?> field) {
-        final String name = toConvert.getName() != null ? toConvert.getName().getValue() : null;
+        final String name = toConvert.getName() != null ?toConvert.getName() : null;
         final FIELD_USAGE_TYPE fieldUsageType = toConvert.getUsageType() != null ?
                 FIELD_USAGE_TYPE.byName(toConvert.getUsageType().value()) : null;
         final OP_TYPE opType = toConvert.getOpType() != null ? OP_TYPE.byName(toConvert.getOpType().value()) : null;
@@ -405,13 +404,13 @@
      */
     public static org.kie.pmml.api.models.OutputField convertToKieOutputField(final OutputField toConvert,
                                                                               final Field<?> field) {
-        final String name = toConvert.getName() != null ? toConvert.getName().getValue() : null;
+        final String name = toConvert.getName() != null ?toConvert.getName() : null;
         final OP_TYPE opType = toConvert.getOpType() != null ? OP_TYPE.byName(toConvert.getOpType().value()) : null;
         final DATA_TYPE dataFieldDataType = field != null ? DATA_TYPE.byName(field.getDataType().value()) :
                 null;
         final DATA_TYPE dataType = toConvert.getDataType() != null ?
                 DATA_TYPE.byName(toConvert.getDataType().value()) : dataFieldDataType;
-        final String targetField = toConvert.getTargetField() != null ? toConvert.getTargetField().getValue() : null;
+        final String targetField = toConvert.getTargetField() != null ?toConvert.getTargetField() : null;
         final RESULT_FEATURE resultFeature = toConvert.getResultFeature() != null ?
                 RESULT_FEATURE.byName(toConvert.getResultFeature().value()) : null;
         final List<String> allowedValues = field instanceof DataField ?
@@ -456,8 +455,7 @@
                 toConvert.getRescaleConstant().doubleValue() : null;
         final Double rescaleFactor = toConvert.getRescaleFactor() != null ? toConvert.getRescaleFactor().doubleValue() : null;
         return new TargetField(targetValues,
-                               opType,
-                               toConvert.getField().getValue(),
+                               opType,toConvert.getField(),
                                castInteger,
                                min,
                                max,
Index: kie-dmn/kie-dmn-pmml-tests-parent/kie-dmn-pmml-tests/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-pmml-tests-parent/kie-dmn-pmml-tests/pom.xml b/kie-dmn/kie-dmn-pmml-tests-parent/kie-dmn-pmml-tests/pom.xml
--- a/kie-dmn/kie-dmn-pmml-tests-parent/kie-dmn-pmml-tests/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-pmml-tests-parent/kie-dmn-pmml-tests/pom.xml	(date 1680178598932)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>kie-dmn-pmml-tests-parent</artifactId>
     <groupId>org.kie</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
@@ -59,11 +59,6 @@
     <dependency>
       <groupId>com.sun.xml.bind</groupId>
       <artifactId>jaxb-core</artifactId>
-      <scope>provided</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.sun.xml.bind</groupId>
-      <artifactId>jaxb-impl</artifactId>
       <scope>provided</scope>
     </dependency>
     <dependency>
Index: kie-dmn/kie-dmn-pmml-tests-parent/kie-dmn-pmml-tests-trusty/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kie-dmn/kie-dmn-pmml-tests-parent/kie-dmn-pmml-tests-trusty/pom.xml b/kie-dmn/kie-dmn-pmml-tests-parent/kie-dmn-pmml-tests-trusty/pom.xml
--- a/kie-dmn/kie-dmn-pmml-tests-parent/kie-dmn-pmml-tests-trusty/pom.xml	(revision cdca4bc8fc242d3043d5dc5d89040d477379f88d)
+++ b/kie-dmn/kie-dmn-pmml-tests-parent/kie-dmn-pmml-tests-trusty/pom.xml	(date 1680177976570)
@@ -5,7 +5,7 @@
   <parent>
     <artifactId>kie-dmn-pmml-tests-parent</artifactId>
     <groupId>org.kie</groupId>
-    <version>8.37.0-SNAPSHOT</version>
+    <version>quarkus-3-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
 
