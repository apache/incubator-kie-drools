package org.drools.defeasible;

global java.util.List list;

declare A
    id  : int   @key
end

declare B
    id  : int   @key
end

declare X
    id  : int   @key
end



rule "Init"
when
then
    insert( new A( 1 ) );   // A(1) is a Fact
    insert( new B( 1 ) );   // same for B(2)
end

rule "Defeater Rule"
@Defeater
@Defeats( "Defeasible Rule 2" )
when
    A( 1; )
then
    insertLogical( new X( -1 ), "neg" );
    insertLogical( new X( 3 ) );
    insertLogical( new X( 44 ), "neg" );
    insertLogical( new X( -35 ) );
end



// X(-3) should be defeated by the respective defeater

rule "Defeasible Rule"
@Defeasible
when
    B( 1; )
then
    insertLogical( new X( -1 ) );
end

rule "Defeasible Rule 2"
@Defeasible
when
    B( 1; )
then
    insertLogical( new X( 3 ), "neg" );
end

// X(44) should end up in NEG when using DFL+NEG

rule "Defeasible Rule 3"
@Defeasible
when
    B( 1; )
then
    insertLogical( new X( 44 ), "neg" );
end

// X(35) will cause an inconsistency when using NEG

rule "Defeasible Rule 4"
@Defeasible
when
    B( 1; )
then
    insertLogical( new X( -35 ) );
    insertLogical( new X( -35 ), "neg" );
end


rule "React"
salience -10
when
    $x : X( $id : id )
then
    System.out.println( " >>>>>>>>>  " + $x );
    list.add( $id );
end


rule "React 2"
salience -10
when
    $x : X( $id : id ) from entry-point "neg"
then
    System.out.println( " >>>>>>>>>  NEG " + $x );
    list.add( -1 * $id );
end