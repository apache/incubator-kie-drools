package org.test;

import org.drools.factmodel.traits.Traitable;
import org.drools.factmodel.traits.Entity;
import org.drools.factmodel.traits.Thing;

global java.util.List list;




declare Imp
    @Traitable
    name    : String        @key
    school  : String
end


declare trait Person
    name    : String 
    age     : int   @position(0) 
end
  

declare trait Student extends Person
    school  : String
end 

declare trait Worker
    job     : String
end
 

 

 
 
rule "Init"
when
then
    Imp core = new Imp( "adam", "skool" );
    insert( core );

    Entity ind = new Entity();
    insert( ind );
end

rule "Trait"
no-loop
when
    $core: Imp( "adam", "skool" ;)
then
    Student<Imp> s = drools.<Student,Imp>don( $core, Student.class, true );
    Thing<Imp> t = drools.<Thing,Imp>don( $core, Thing.class, true );

    Worker<Imp> w = drools.<Worker,Imp>don( $core, Worker.class, true );

    update( $core );
end

rule "Trait2"
no-loop
when
    $core: Entity( )
then
    Student<Entity> s = drools.<Student,Entity>don( $core, Student.class, true );
    list.add( "0" );
end



rule "Students"
when
    $s : Student( $core : core, $k : core.getClass() == Imp )
then
    list.add( "1" );
end

rule "Workers"
when
    $w : Worker( $core : core )
then
    list.add( "2" );
end

rule "Worker Students"
when
    $x1 := Worker( $ind := core )
    $x2 := Student( $ind := core )
then
    list.add( "3" );
    if ( ! $x1.equals( $x2 ) ) {
        list.add( "4" );
    }
end





rule "Worker Students v2"
when
    $x1 := Worker( this isA Student )
then
    list.add( "5" );
end

rule "Worker Students v3"
when
    $x1 := Worker( this isA "org.test.Student" )
then
    list.add( "6" );
end


rule "Worker Students v4"
when
    $x1 := Worker( core isA "org.test.Student" )
then
    list.add( "7" );
end

rule "Worker Students v5"
when
    $x1 := Imp( this isA "org.test.Student" )
then
    list.add( "8" );
end

rule "Worker Students v6"
when
    $x2 := Student(  )
    $x1 := Worker( core != $x2.core, this isA $x2 )
then
    list.add( "9" );
end






