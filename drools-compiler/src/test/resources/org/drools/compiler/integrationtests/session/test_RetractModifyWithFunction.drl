/*
 * Copyright 2015 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package org.drools.compiler
import org.drools.compiler.Cheese
 
function Cheese getMin(Cheese c1, Cheese c2) {
 if (c1.getPrice() < c2.getPrice()) return c1;
 else return c2;
}

rule "test modify"
    salience 10
    no-loop
when
    $c1 : Cheese( type == "stilton" )
    $c2 : Cheese( type == "muzzarella" )
then
     Cheese x = getMin( $c1, $c2 );
     x.setPrice( $c1.getPrice() + $c2.getPrice() );
    update( x );
    // testing stuff after the ) ;
end

rule "test retract"
when
    $c1 : Cheese( type == "stilton" )
    $c2 : Cheese( type == "muzzarella" )
then
    // stuff before the delete( getMin( $c1, $c2 ) );
    delete( getMin( $c1, $c2 ) );
    // stuff before the delete( getMin( $c1, $c2 ) );
end
