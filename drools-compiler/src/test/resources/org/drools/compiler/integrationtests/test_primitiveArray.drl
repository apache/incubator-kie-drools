/*
 * Copyright 2015 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package org.drools.compiler

global java.util.List result;

function boolean testNonEmptyArray(int[] elements) {
   return elements != null && elements.length > 0;
}

function boolean isNonEmptyObjectArray(Object[] elements) {
   return elements != null && elements.length > 0;
}

rule "Primitive elements in function" salience 20
  when
    Primitives( $elements : primitiveIntArray )
    eval( testNonEmptyArray($elements) )
  then
     result.add( new Integer( $elements.length ) );
end

rule "Primitive Array with Object in function" salience 10
 when
   Primitives( $sArray : arrayAttribute )
   eval( isNonEmptyObjectArray($sArray) )
 then
     result.add( new Integer( $sArray.length ) );
end

rule "Test Array" salience 0
  when
    Primitives( $elements : primitiveIntArray, eval(($elements != null) && ($elements.length > 0)))
  then
    result.add( new Integer( $elements.length ) );
end