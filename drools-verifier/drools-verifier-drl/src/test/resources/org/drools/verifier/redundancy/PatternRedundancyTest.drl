/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.sample

import com.sample.DroolsTest.Message;

rule "Pattern redundancy without restrictions 1a"
    when
            Foo1()
    then
        System.out.println( "Test" );
end

rule "Pattern redundancy without restrictions 1b"
    when
            Foo1()
    then
        System.out.println( "Test" );
end

rule "Pattern redundancy without restrictions 2a"
    when
            not Foo2()
    then
        System.out.println( "Test" );
end

rule "Pattern redundancy without restrictions 2b"
    when
            not Foo2()
    then
        System.out.println( "Test" );
end

rule "Pattern redundancy without restrictions 3a"
    when
            exists Foo3()
    then
        System.out.println( "Test" );
end

rule "Pattern redundancy without restrictions 3b"
    when
            exists Foo3()
    then
        System.out.println( "Test" );
end

rule "Pattern redundancy without restrictions 4a"
    when
            forall( Foo4() )
    then
        System.out.println( "Test" );
end

rule "Pattern redundancy without restrictions 4b"
    when
            forall( Foo4() )
    then
        System.out.println( "Test" );
end

//
// With restrictions.
//

rule "Pattern redundancy with restrictions 1a"
    when
            Foo1( a == "b" )
    then
        System.out.println( "Test" );
end

rule "Pattern redundancy with restrictions 1b"
    when
            Foo1( a == "b" )
    then
        System.out.println( "Test" );
end

rule "Pattern redundancy with restrictions 2a"
    when
            not Foo2( a == "b" )
    then
        System.out.println( "Test" );
end

rule "Pattern redundancy with restrictions 2b"
    when
            not Foo2( a == "b" )
    then
        System.out.println( "Test" );
end

rule "Pattern redundancy with restrictions 3a"
    when
            exists Foo3( a == "b" )
    then
        System.out.println( "Test" );
end

rule "Pattern redundancy with restrictions 3b"
    when
            exists Foo3( a == "b" )
    then
        System.out.println( "Test" );
end

rule "Pattern redundancy with restrictions 4a"
    when
            forall( Foo4( a == "b" ) )
    then
        System.out.println( "Test" );
end

rule "Pattern redundancy with restrictions 4b"
    when
            forall( Foo4( a == "b" ) )
    then
        System.out.println( "Test" );
end
