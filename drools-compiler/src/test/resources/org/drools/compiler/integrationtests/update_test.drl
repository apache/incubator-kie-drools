/*
 * Copyright 2016 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package org.drools.compiler.integrationtests;

import org.drools.core.test.model.Person;
import org.drools.core.test.model.Cheese;
import java.util.List;

global java.util.List drivers;
global java.util.List expensiveCheese;


query countPerson
   $personCount : Long() from accumulate ($person: Person(), count( $person ))
end

query names
   $names : List() from accumulate (Person($name : name), collectList( $name ))
end

query persons
    $persons : List() from accumulate ($person : Person(), collectList( $person ))
end

query cheeseTypes
    $cheeseTypes : List() from accumulate ($cheese : Cheese(), collectList ( $cheese ))
end


rule "driver"
when
    $p : Person(age >= 18)
then
    drivers.add($p);
end


rule "expensive cheese"
when
    $c : Cheese(price >= 40)
then
    expensiveCheese.add($c);
end

rule "price increase"
when
    $c : Cheese(price < 20)
then
    modify ($c) { setPrice($c.getPrice() + 2) };
end

