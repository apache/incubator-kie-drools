{
    KiePMMLSimplePredicate %1$s_0_Predicate_0 = KiePMMLSimplePredicate
            .builder("PARAM_1", Collections.emptyList(), org.kie.pmml.api.enums.OPERATOR.EQUAL)
            .withValue(100.0)
            .build();
    KiePMMLSimplePredicate %1$s_0_Predicate_1 = KiePMMLSimplePredicate
            .builder("PARAM_2", Collections.emptyList(), org.kie.pmml.api.enums.OPERATOR.GREATER_THAN)
            .withValue(5.0)
            .build();
    KiePMMLSimpleSetPredicate %1$s_0_Predicate_2 = KiePMMLSimpleSetPredicate
            .builder("SIMPLESETPREDICATENAME", Collections.emptyList(),
            org.kie.pmml.api.enums.ARRAY_TYPE.STRING,
            org.kie.pmml.api.enums.IN_NOTIN.IN)
            .withValues(Arrays.asList(%2$s))
            .build();
    KiePMMLCompoundPredicate %1$s_0_Predicate = KiePMMLCompoundPredicate
            .builder(Collections.emptyList(), org.kie.pmml.api.enums.BOOLEAN_OPERATOR.AND)
            .withKiePMMLPredicates(Arrays.asList(%1$s_0_Predicate_0, %1$s_0_Predicate_1, %1$s_0_Predicate_2))
            .build();
    KiePMMLConstant %1$s_0_ComplexPartialScore_0 = new KiePMMLConstant("%1$s_0_ComplexPartialScore_0",
            Collections.emptyList(), 100.0, null);
    KiePMMLComplexPartialScore %1$s_0_ComplexPartialScore = new KiePMMLComplexPartialScore("%1$s_0_ComplexPartialScore",
            Collections.emptyList(), %1$s_0_ComplexPartialScore_0);
    KiePMMLAttribute %1$s_0 = KiePMMLAttribute.builder("%1$s_0", Collections.emptyList(), %1$s_0_Predicate)
            .withPartialScore(null)
            .withComplexPartialScore(%1$s_0_ComplexPartialScore)
            .build();
    KiePMMLSimplePredicate %1$s_1_Predicate_0 = KiePMMLSimplePredicate
            .builder("PARAM_1", Collections.emptyList(), org.kie.pmml.api.enums.OPERATOR.EQUAL)
            .withValue(100.0)
            .build();
    KiePMMLSimplePredicate %1$s_1_Predicate_1 = KiePMMLSimplePredicate
            .builder("PARAM_2", Collections.emptyList(), org.kie.pmml.api.enums.OPERATOR.GREATER_THAN)
            .withValue(5.0)
            .build();
    KiePMMLSimpleSetPredicate %1$s_1_Predicate_2 = KiePMMLSimpleSetPredicate
            .builder("SIMPLESETPREDICATENAME", Collections.emptyList(),
            org.kie.pmml.api.enums.ARRAY_TYPE.STRING,
            org.kie.pmml.api.enums.IN_NOTIN.IN)
            .withValues(Arrays.asList(%3$s))
            .build();
    KiePMMLCompoundPredicate %1$s_1_Predicate = KiePMMLCompoundPredicate
            .builder(Collections.emptyList(), org.kie.pmml.api.enums.BOOLEAN_OPERATOR.AND)
            .withKiePMMLPredicates(Arrays.asList(%1$s_1_Predicate_0, %1$s_1_Predicate_1, %1$s_1_Predicate_2))
            .build();
    KiePMMLConstant %1$s_1_ComplexPartialScore_0 = new KiePMMLConstant("%1$s_1_ComplexPartialScore_0",
            Collections.emptyList(), 100.0, null);
    KiePMMLComplexPartialScore %1$s_1_ComplexPartialScore = new KiePMMLComplexPartialScore("%1$s_1_ComplexPartialScore",
            Collections.emptyList(), %1$s_1_ComplexPartialScore_0);
    KiePMMLAttribute %1$s_1 = KiePMMLAttribute.builder("%1$s_1", Collections.emptyList(), %1$s_1_Predicate)
            .withPartialScore(null)
            .withComplexPartialScore(%1$s_1_ComplexPartialScore)
            .build();
    KiePMMLCharacteristic %1$s = KiePMMLCharacteristic.builder("%1$s", Collections.emptyList(), Arrays.asList(%1$s_0, %1$s_1))
            .withBaselineScore(%4$s)
            .withReasonCode("%5$s")
            .build();
}