@comment{

  Copyright 2011 Red Hat, Inc. and/or its affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
}


@comment{
  Header section.
}


// Imported PMML Model Theory
// Trained with : @if{ application != null } @{application.name} @end{}
// Creation timestamp : @if{ timestamp != null } @{timestamp.content.get(0)} @end{}
// Description : @if{ description != null } @{description} @end{}
// Copyright : @{copyright}
@foreach{ annotation : annotations }
// Annotation : @{annotation.content.get(0)}
@end{}



@if{ pack != null }package @{pack};@end{}
unit @{unitClassName}

import org.kie.pmml.pmml_4_2.*;
import org.kie.pmml.pmml_4_2.model.*;
import org.kie.pmml.pmml_4_2.model.scorecard.*;
import org.kie.pmml.pmml_4_2.model.regression.*;
import org.kie.pmml.pmml_4_2.model.tree.*;
import org.kie.pmml.pmml_4_2.model.datatypes.*;
import org.drools.core.factmodel.traits.Traitable;
import org.kie.api.runtime.rule.FactHandle;
import org.kie.api.pmml.PMMLRequestData;
import org.kie.api.pmml.ParameterInfo;
import org.kie.api.pmml.PMML4Result;
import org.kie.api.pmml.PMML4Data;
import org.kie.api.pmml.PMML4DataType;


rule 'RuleUnitIndicator'
when
then
   System.out.println("Rules execution available for @{unitClassName}");
end

rule 'Extract New Parameter Info'
@@Generated
salience 10
no-loop
when
   $rd: PMMLRequestData( $cid: correlationId != null, $mn: modelName ) from request
   $pi: ParameterInfo( $name: name, $value: value ) from $rd.mappedRequestParams.values()
then
   PMML4DataFactory factory = PMML4DataFactory.get();
   PMML4Data data = factory.newPMML4Data($cid, $mn, $pi, false, false);
   pmmlData.insert(data);
end

rule "Override Value"
@includeNamed{ 'rule_meta.drlt'; attributes=attributes }
salience 2
when
   $new: PMML4Data( $value: value ) from pmmlData
   $old: PMML4Data( this != $new, name == $new.name, value != $value, this before[0] $new ) from pmmlData
then
   retract($old);
end

