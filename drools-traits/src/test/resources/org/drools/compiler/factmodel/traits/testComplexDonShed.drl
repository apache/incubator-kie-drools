/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package test;
import org.drools.base.factmodel.traits.*;
import org.drools.traits.core.factmodel.*;

declare trait A id : int end
declare trait B extends A end
declare trait C extends A end
declare trait D extends B end
declare trait E extends C end
declare trait F extends E, B end
declare trait G extends E, F end

declare Kore
@Traitable
end

global TraitableBean core;

rule donA
when
    $s : String( this == "ent" )
then
    Entity k = new Entity();

    drools.getKnowledgeRuntime().setGlobal( "core", k );

    insert( k );
    retract( $s );
    don( k, A.class );
end

rule donK
when
    $s : String( this == "kor" )
then
    Kore k = new Kore();

    drools.getKnowledgeRuntime().setGlobal( "core", k );

    insert( k );
    retract( $s );
    don( k, A.class );
end


rule donB
when
    $s : String( this == "b" )
    $x : TraitableBean( )
then
    retract( $s );
    don( $x, B.class );
end

rule donC
when
    $s : String( this == "c" )
    $x : TraitableBean( )
then
    retract( $s );
    don( $x, C.class );
end
rule donE
when
    $s : String( this == "e" )
    $x : TraitableBean( )
then
    retract( $s );
    don( $x, E.class );
end

rule shedC
when
    $s : String( this == "-c" )
    $x : TraitableBean( )
then
    retract( $s );
    shed( $x, C.class );
end

rule shedF
when
    $s : String( this == "-f" )
    $x : TraitableBean( )
then
    retract( $s );
    shed( $x, F.class );
end

rule donDG
when
    $s : String( this == "dg" )
    $x : TraitableBean( )
then
    retract( $s );
    don( $x, D.class );
    don( $x, G.class );
end
