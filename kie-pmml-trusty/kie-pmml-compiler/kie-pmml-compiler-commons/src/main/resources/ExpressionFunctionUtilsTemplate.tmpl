public class ExpressionFunctionUtilsTemplate {



     Object applyKiePMMLNameValueList(List<KiePMMLNameValue> param1)  {
        Object variableVARIABLE_NAMEConstant1 = 34.6;
        Optional<KiePMMLNameValue> kiePMMLNameValue = param1.stream().filter((KiePMMLNameValue lmbdParam) -> Objects.equals("FIELD_NAME", lmbdParam.getName())).findFirst();
        Object variableVARIABLE_NAMEFieldRef2 = kiePMMLNameValue.map(KiePMMLNameValue::getValue).orElse(null);
        Object VARIABLE_NAME = this.FUNCTION_NAME(variableVARIABLE_NAMEConstant1, variableVARIABLE_NAMEFieldRef2);
        return null;
     }

   java.lang.Object expressionMethod() {
       return null;
   }

   void fieldRefExpressionKiePMMLNameValueMethod(java.util.List<org.kie.pmml.commons.model.tuples.KiePMMLNameValue> param1) {
        java.lang.Object variableName = variableRef != null ? (java.lang.Object) org.kie.pmml.api.utils.ConverterTypeUtil.convert(java.lang.Object.class, fieldRef) : (java.lang.Object) null;
   }

   void fieldRefExpressionStringObjectMapMethod(java.util.Map<String, Object> param1) {
           java.lang.Object variableName = variableRef != null ? (java.lang.Object) org.kie.pmml.api.utils.ConverterTypeUtil.convert(java.lang.Object.class, fieldRef) : (java.lang.Object) null;
   }

    void constantExpressionKiePMMLNameValueMethod(java.util.List<org.kie.pmml.commons.model.tuples.KiePMMLNameValue> param1) {
         double toReturn = null;
         return toReturn;
   }

    void constantExpressionStringObjectMapMethod(java.util.Map<String, Object> param1) {
            java.lang.Object variableName = variableRef != null ? (java.lang.Object) org.kie.pmml.api.utils.ConverterTypeUtil.convert(java.lang.Object.class, fieldRef) : (java.lang.Object) null;
    }

   void methodDeclarationKiePMMLNameValueTemplate(java.util.List<org.kie.pmml.commons.model.tuples.KiePMMLNameValue> param1) {
            return toReturn;
   }

   void methodDeclarationKiePMMLNameValueObjectTemplate(java.util.List<org.kie.pmml.commons.model.tuples.KiePMMLNameValue> param1, java.lang.Object FIELD_REF) {
       return toReturn;
   }



}
