/*
 * Copyright 2015 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package org.test;

import org.drools.core.factmodel.traits.Traitable;
import org.drools.core.factmodel.traits.Entity;
import org.drools.core.factmodel.traits.Thing;

global java.util.List list;




declare Imp
    @Traitable
    name    : String        @key
    school  : String
end


declare trait Person
    name    : String 
    age     : int   @position(0) 
end
  

declare trait Student extends Person
    school  : String
end 

declare trait Worker
    job     : String
end
 

 

 
 
rule "Init"
when
then
    Imp core = new Imp( "adam", "skool" );
    insert( core );

    Entity ind = new Entity();
    insert( ind );
end

rule "Trait" salience 100
no-loop
when
    $core: Imp( "adam", "skool" ;)
then
    Student s = drools.don( $core, Student.class, true );
    Thing t = drools.don( $core, Thing.class, true );

    Worker w = drools.don( $core, Worker.class, true );

    modify( $core ) { };
end

rule "Trait2"
no-loop
when
    $core: Entity( )
then
    Student s = drools.don( $core, Student.class, true );
    list.add( "0" );
end



rule "Students"
when
    $s : Student( $core : core, $k : core.getClass() == Imp )
then
    list.add( "1" );
end

rule "Workers"
when
    $w : Worker( $core : core )
then
    list.add( "2" );
end

rule "Worker Students"
when
    $x1 := Worker( $ind := core )
    $x2 := Student( $ind := core )
then
    list.add( "3" );
    if ( ! $x1.equals( $x2 ) ) {
        list.add( "4" );
    }
end


rule "Worker Students v2"
when
    $x1 := Worker( this isA Student )
then
    list.add( "5" );
end

rule "Worker Students v3"
when
    $x1 := Worker( this isA "org.test.Student" )
then
    list.add( "6" );
end


rule "Worker Students v4"
when
    $x1 := Worker( core isA "org.test.Student" )
then
    list.add( "7" );
end

rule "Worker Students v5"
when
    $x1 := Imp( this isA "org.test.Student" )
then
    list.add( "8" );
end

rule "Worker Students v6" salience 100
when
    $x2 := Student(  )
    $x1 := Worker( core != $x2.core, this isA $x2 )
then
    list.add( "9" );
end






