/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */


TestCase "Exists node modify test 2"

import org.drools.core.test.model.Cheese;
import org.drools.core.test.model.Person;

Setup
    Binding:
        $likes, 0, Person, likes;
    ExistsNode:
        exists, mock(Person), mock(Cheese);
        type, ==, $likes;
    LeftTupleSink:
        sink, exists;
    Facts:
        new Person('darth', 35, "brie"),     // h0
        new Person('bobba', 36, 'stilton'),  // h1
        new Cheese('brie', 10),              // h2
        new Cheese('brie', 12),              // h3
        new Cheese('stilton', 15),           // h4
        new Cheese('brie', 12);              // h5

Test "exists node test 1 left, 1 right and modify"	     
    assert:
        exists, [[h0]];
    exists:
        leftMemory, [[h0]];
        rightMemory, [];
    assert:	    
        exists, [h2];
    exists:
        leftMemory, []; // h0 was blocked by h2, so it was removed from the node memory
        rightMemory, [h2];
    sink:
        verify, assertLeft, count, 1;
        verify, assertLeft, tuple0, isTuple( [h0] );
        verify, modifyLeft, count, 0;
    modify:
        exists, [[h0]];
    sink:
        verify, assertLeft, count, 1; // still 1
        verify, modifyLeft, count, 1; // modify was propagated
        verify, modifyLeft, tuple0, isTuple( [h0] );

