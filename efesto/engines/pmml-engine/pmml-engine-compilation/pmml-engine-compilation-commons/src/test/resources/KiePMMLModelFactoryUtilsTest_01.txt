private org.kie.pmml.commons.transformations.KiePMMLTransformationDictionary createTransformationDictionary() {
    KiePMMLParameterField CONSTANT_FUNCTION_0 = KiePMMLParameterField.builder("empty", Collections.emptyList()).withDataType(null).withOpType(null).withDisplayName(null).build();
    KiePMMLConstant CONSTANT_FUNCTION_Expression = new KiePMMLConstant("CONSTANT_FUNCTION_Expression", Collections.emptyList(), "CONSTANT_FUNCTION_VALUE", null);
    KiePMMLDefineFunction CONSTANT_FUNCTION = new KiePMMLDefineFunction("CONSTANT_FUNCTION", Collections.emptyList(), org.kie.pmml.api.enums.DATA_TYPE.STRING, org.kie.pmml.api.enums.OP_TYPE.CATEGORICAL, Arrays.asList(CONSTANT_FUNCTION_0), CONSTANT_FUNCTION_Expression);
    KiePMMLParameterField FIELDREF_FUNCTION_0 = KiePMMLParameterField.builder("fieldRed", Collections.emptyList()).withDataType(null).withOpType(null).withDisplayName(null).build();
    KiePMMLFieldRef FIELDREF_FUNCTION_Expression = new KiePMMLFieldRef("Petal.Length", Collections.emptyList(), null);
    KiePMMLDefineFunction FIELDREF_FUNCTION = new KiePMMLDefineFunction("FIELDREF_FUNCTION", Collections.emptyList(), org.kie.pmml.api.enums.DATA_TYPE.DOUBLE, org.kie.pmml.api.enums.OP_TYPE.CONTINUOUS, Arrays.asList(FIELDREF_FUNCTION_0), FIELDREF_FUNCTION_Expression);
    KiePMMLParameterField APPLY_FUNCTION_0 = KiePMMLParameterField.builder("fieldRed", Collections.emptyList()).withDataType(null).withOpType(null).withDisplayName(null).build();
    KiePMMLFieldRef APPLY_FUNCTION_Expression_0 = new KiePMMLFieldRef("Petal.Length", Collections.emptyList(), null);
    KiePMMLApply APPLY_FUNCTION_Expression = KiePMMLApply.builder("APPLY_FUNCTION_Expression", Collections.emptyList(), "FIELDREF_FUNCTION").withDefaultValue(null).withMapMissingTo(null).withInvalidValueTreatmentMethod("returnInvalid").withKiePMMLExpressions(Arrays.asList(APPLY_FUNCTION_Expression_0)).build();
    KiePMMLDefineFunction APPLY_FUNCTION = new KiePMMLDefineFunction("APPLY_FUNCTION", Collections.emptyList(), org.kie.pmml.api.enums.DATA_TYPE.DOUBLE, org.kie.pmml.api.enums.OP_TYPE.CONTINUOUS, Arrays.asList(APPLY_FUNCTION_0), APPLY_FUNCTION_Expression);
    KiePMMLParameterField TEXT_INDEX_NORMALIZATION_FUNCTION_0 = KiePMMLParameterField.builder("reviewText", Collections.emptyList()).withDataType(null).withOpType(null).withDisplayName(null).build();
    KiePMMLParameterField TEXT_INDEX_NORMALIZATION_FUNCTION_1 = KiePMMLParameterField.builder("term", Collections.emptyList()).withDataType(null).withOpType(null).withDisplayName(null).build();
    KiePMMLFieldRef TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_Expression = new KiePMMLFieldRef("term", Collections.emptyList(), null);
    Map<String, Object> TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable_0_columnValues = Stream.of(new Object[][] { { "regex", "true" }, { "string", "interfaces?" }, { "stem", "interface" } }).collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable_0 = new KiePMMLRow(TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable_0_columnValues);
    Map<String, Object> TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable_1_columnValues = Stream.of(new Object[][] { { "regex", "true" }, { "string", "is|are|seem(ed|s?)|were" }, { "stem", "be" } }).collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable_1 = new KiePMMLRow(TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable_1_columnValues);
    Map<String, Object> TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable_2_columnValues = Stream.of(new Object[][] { { "regex", "true" }, { "string", "user friendl(y|iness)" }, { "stem", "user_friendly" } }).collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable_2 = new KiePMMLRow(TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable_2_columnValues);
    KiePMMLInlineTable TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable = new KiePMMLInlineTable("TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable", Collections.emptyList(), Arrays.asList(TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable_0, TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable_1, TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable_2));
    KiePMMLTextIndexNormalization TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0 = KiePMMLTextIndexNormalization.builder("TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0", Collections.emptyList()).withInField("string").withOutField("stem").withKiePMMLInlineTable(TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0_InlineTable).withRegexField("regex").withRecursive(false).withIsCaseSensitive(false).withMaxLevenshteinDistance(null).withWordSeparatorCharacterRE(null).withTokenize(false).build();
    Map<String, Object> TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_1_InlineTable_0_columnValues = Stream.of(new Object[][] { { "regex", "true" }, { "re", "interface be (user_friendly|well designed|excellent)" }, { "feature", "ui_good" } }).collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_1_InlineTable_0 = new KiePMMLRow(TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_1_InlineTable_0_columnValues);
    KiePMMLInlineTable TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_1_InlineTable = new KiePMMLInlineTable("TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_1_InlineTable", Collections.emptyList(), Arrays.asList(TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_1_InlineTable_0));
    KiePMMLTextIndexNormalization TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_1 = KiePMMLTextIndexNormalization.builder("TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_1", Collections.emptyList()).withInField("re").withOutField("feature").withKiePMMLInlineTable(TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_1_InlineTable).withRegexField("regex").withRecursive(false).withIsCaseSensitive(false).withMaxLevenshteinDistance(null).withWordSeparatorCharacterRE(null).withTokenize(false).build();
    KiePMMLTextIndex TEXT_INDEX_NORMALIZATION_FUNCTION_Expression = KiePMMLTextIndex.builder("reviewText", Collections.emptyList(), TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_Expression).withLocalTermWeights(org.kie.pmml.api.enums.LOCAL_TERM_WEIGHTS.BINARY).withIsCaseSensitive(false).withMaxLevenshteinDistance(0).withCountHits(org.kie.pmml.api.enums.COUNT_HITS.ALL_HITS).withWordSeparatorCharacterRE("\\s+").withTokenize(true).withTextIndexNormalizations(Arrays.asList(TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_0, TEXT_INDEX_NORMALIZATION_FUNCTION_Expression_1)).build();
    KiePMMLDefineFunction TEXT_INDEX_NORMALIZATION_FUNCTION = new KiePMMLDefineFunction("TEXT_INDEX_NORMALIZATION_FUNCTION", Collections.emptyList(), null, org.kie.pmml.api.enums.OP_TYPE.CONTINUOUS, Arrays.asList(TEXT_INDEX_NORMALIZATION_FUNCTION_0, TEXT_INDEX_NORMALIZATION_FUNCTION_1), TEXT_INDEX_NORMALIZATION_FUNCTION_Expression);
    KiePMMLConstant transformationDictionaryDerivedField_0_0 = new KiePMMLConstant("transformationDictionaryDerivedField_0_0", Collections.emptyList(), "CONSTANT_DERIVEDFIELD_VALUE", null);
    KiePMMLDerivedField transformationDictionaryDerivedField_0 = KiePMMLDerivedField.builder("CONSTANT_DERIVEDFIELD", Collections.emptyList(), org.kie.pmml.api.enums.DATA_TYPE.STRING, org.kie.pmml.api.enums.OP_TYPE.CATEGORICAL, transformationDictionaryDerivedField_0_0).withDisplayName(null).build();
    KiePMMLFieldRef transformationDictionaryDerivedField_1_0_0 = new KiePMMLFieldRef("Petal.Length", Collections.emptyList(), null);
    KiePMMLApply transformationDictionaryDerivedField_1_0 = KiePMMLApply.builder("transformationDictionaryDerivedField_1_0", Collections.emptyList(), "APPLY_FUNCTION").withDefaultValue(null).withMapMissingTo(null).withInvalidValueTreatmentMethod("returnInvalid").withKiePMMLExpressions(Arrays.asList(transformationDictionaryDerivedField_1_0_0)).build();
    KiePMMLDerivedField transformationDictionaryDerivedField_1 = KiePMMLDerivedField.builder("APPLY_DERIVEDFIELD", Collections.emptyList(), org.kie.pmml.api.enums.DATA_TYPE.DOUBLE, org.kie.pmml.api.enums.OP_TYPE.CONTINUOUS, transformationDictionaryDerivedField_1_0).withDisplayName(null).build();
    KiePMMLFieldRef transformationDictionaryDerivedField_2_0 = new KiePMMLFieldRef("Ref", Collections.emptyList(), null);
    KiePMMLDerivedField transformationDictionaryDerivedField_2 = KiePMMLDerivedField.builder("BackRef", Collections.emptyList(), org.kie.pmml.api.enums.DATA_TYPE.DOUBLE, org.kie.pmml.api.enums.OP_TYPE.CONTINUOUS, transformationDictionaryDerivedField_2_0).withDisplayName(null).build();
    KiePMMLFieldRef transformationDictionaryDerivedField_3_0 = new KiePMMLFieldRef("Petal.Width", Collections.emptyList(), null);
    KiePMMLDerivedField transformationDictionaryDerivedField_3 = KiePMMLDerivedField.builder("StageOne", Collections.emptyList(), org.kie.pmml.api.enums.DATA_TYPE.DOUBLE, org.kie.pmml.api.enums.OP_TYPE.CONTINUOUS, transformationDictionaryDerivedField_3_0).withDisplayName(null).build();
    KiePMMLFieldRef transformationDictionaryDerivedField_4_0 = new KiePMMLFieldRef("StageOne", Collections.emptyList(), null);
    KiePMMLDerivedField transformationDictionaryDerivedField_4 = KiePMMLDerivedField.builder("StageTwo", Collections.emptyList(), org.kie.pmml.api.enums.DATA_TYPE.DOUBLE, org.kie.pmml.api.enums.OP_TYPE.CONTINUOUS, transformationDictionaryDerivedField_4_0).withDisplayName(null).build();
    KiePMMLFieldRef transformationDictionaryDerivedField_5_0 = new KiePMMLFieldRef("StageTwo", Collections.emptyList(), null);
    KiePMMLDerivedField transformationDictionaryDerivedField_5 = KiePMMLDerivedField.builder("StageThree", Collections.emptyList(), org.kie.pmml.api.enums.DATA_TYPE.DOUBLE, org.kie.pmml.api.enums.OP_TYPE.CONTINUOUS, transformationDictionaryDerivedField_5_0).withDisplayName(null).build();
    KiePMMLFieldColumnPair transformationDictionaryDerivedField_6_0_0 = new KiePMMLFieldColumnPair("BAND", Collections.emptyList(), "band");
    KiePMMLFieldColumnPair transformationDictionaryDerivedField_6_0_1 = new KiePMMLFieldColumnPair("STATE", Collections.emptyList(), "state");
    Map<String, Object> transformationDictionaryDerivedField_6_0_InlineTable_0_columnValues = Stream.of(new Object[][] { { "band", "1" }, { "state", "MN" }, { "out", "10000" } }).collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow transformationDictionaryDerivedField_6_0_InlineTable_0 = new KiePMMLRow(transformationDictionaryDerivedField_6_0_InlineTable_0_columnValues);
    Map<String, Object> transformationDictionaryDerivedField_6_0_InlineTable_1_columnValues = Stream.of(new Object[][] { { "band", "1" }, { "state", "IL" }, { "out", "12000" } }).collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow transformationDictionaryDerivedField_6_0_InlineTable_1 = new KiePMMLRow(transformationDictionaryDerivedField_6_0_InlineTable_1_columnValues);
    Map<String, Object> transformationDictionaryDerivedField_6_0_InlineTable_2_columnValues = Stream.of(new Object[][] { { "band", "1" }, { "state", "NY" }, { "out", "20000" } }).collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow transformationDictionaryDerivedField_6_0_InlineTable_2 = new KiePMMLRow(transformationDictionaryDerivedField_6_0_InlineTable_2_columnValues);
    Map<String, Object> transformationDictionaryDerivedField_6_0_InlineTable_3_columnValues = Stream.of(new Object[][] { { "band", "2" }, { "state", "MN" }, { "out", "20000" } }).collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow transformationDictionaryDerivedField_6_0_InlineTable_3 = new KiePMMLRow(transformationDictionaryDerivedField_6_0_InlineTable_3_columnValues);
    Map<String, Object> transformationDictionaryDerivedField_6_0_InlineTable_4_columnValues = Stream.of(new Object[][] { { "band", "2" }, { "state", "IL" }, { "out", "23000" } }).collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow transformationDictionaryDerivedField_6_0_InlineTable_4 = new KiePMMLRow(transformationDictionaryDerivedField_6_0_InlineTable_4_columnValues);
    Map<String, Object> transformationDictionaryDerivedField_6_0_InlineTable_5_columnValues = Stream.of(new Object[][] { { "band", "2" }, { "state", "NY" }, { "out", "30000" } }).collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow transformationDictionaryDerivedField_6_0_InlineTable_5 = new KiePMMLRow(transformationDictionaryDerivedField_6_0_InlineTable_5_columnValues);
    KiePMMLInlineTable transformationDictionaryDerivedField_6_0_InlineTable = new KiePMMLInlineTable("transformationDictionaryDerivedField_6_0_InlineTable", Collections.emptyList(), Arrays.asList(transformationDictionaryDerivedField_6_0_InlineTable_0, transformationDictionaryDerivedField_6_0_InlineTable_1, transformationDictionaryDerivedField_6_0_InlineTable_2, transformationDictionaryDerivedField_6_0_InlineTable_3, transformationDictionaryDerivedField_6_0_InlineTable_4, transformationDictionaryDerivedField_6_0_InlineTable_5));
    KiePMMLMapValues transformationDictionaryDerivedField_6_0 = KiePMMLMapValues.builder("transformationDictionaryDerivedField_6_0", Collections.emptyList(), "out").withDefaultValue(null).withMapMissingTo(null).withDataType(org.kie.pmml.api.enums.DATA_TYPE.INTEGER).withKiePMMLInlineTable(transformationDictionaryDerivedField_6_0_InlineTable).withKiePMMLFieldColumnPairs(Arrays.asList(transformationDictionaryDerivedField_6_0_0, transformationDictionaryDerivedField_6_0_1)).build();
    KiePMMLDerivedField transformationDictionaryDerivedField_6 = KiePMMLDerivedField.builder("mapvalued", Collections.emptyList(), org.kie.pmml.api.enums.DATA_TYPE.DOUBLE, org.kie.pmml.api.enums.OP_TYPE.CONTINUOUS, transformationDictionaryDerivedField_6_0).withDisplayName(null).build();
    KiePMMLFieldColumnPair transformationDictionaryDerivedField_7_0_0 = new KiePMMLFieldColumnPair("FLAG_OWN_CAR", Collections.emptyList(), "data:input");
    Map<String, Object> transformationDictionaryDerivedField_7_0_InlineTable_0_columnValues = Stream.of(new Object[][] { { "data:output", "0.0" }, { "data:input", "0" } }).collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow transformationDictionaryDerivedField_7_0_InlineTable_0 = new KiePMMLRow(transformationDictionaryDerivedField_7_0_InlineTable_0_columnValues);
    Map<String, Object> transformationDictionaryDerivedField_7_0_InlineTable_1_columnValues = Stream.of(new Object[][] { { "data:output", "1.0" }, { "data:input", "1" } }).collect(Collectors.toMap(data -> (String) data[0], data -> data[1]));
    KiePMMLRow transformationDictionaryDerivedField_7_0_InlineTable_1 = new KiePMMLRow(transformationDictionaryDerivedField_7_0_InlineTable_1_columnValues);
    KiePMMLInlineTable transformationDictionaryDerivedField_7_0_InlineTable = new KiePMMLInlineTable("transformationDictionaryDerivedField_7_0_InlineTable", Collections.emptyList(), Arrays.asList(transformationDictionaryDerivedField_7_0_InlineTable_0, transformationDictionaryDerivedField_7_0_InlineTable_1));
    KiePMMLMapValues transformationDictionaryDerivedField_7_0 = KiePMMLMapValues.builder("transformationDictionaryDerivedField_7_0", Collections.emptyList(), "data:output").withDefaultValue(null).withMapMissingTo(null).withDataType(null).withKiePMMLInlineTable(transformationDictionaryDerivedField_7_0_InlineTable).withKiePMMLFieldColumnPairs(Arrays.asList(transformationDictionaryDerivedField_7_0_0)).build();
    KiePMMLDerivedField transformationDictionaryDerivedField_7 = KiePMMLDerivedField.builder("dataencoded", Collections.emptyList(), org.kie.pmml.api.enums.DATA_TYPE.DOUBLE, org.kie.pmml.api.enums.OP_TYPE.CATEGORICAL, transformationDictionaryDerivedField_7_0).withDisplayName(null).build();
    KiePMMLTransformationDictionary transformationDictionary = KiePMMLTransformationDictionary.builder("transformationDictionary", Collections.emptyList()).withDefineFunctions(Arrays.asList(CONSTANT_FUNCTION, FIELDREF_FUNCTION, APPLY_FUNCTION, TEXT_INDEX_NORMALIZATION_FUNCTION)).withDerivedFields(Arrays.asList(transformationDictionaryDerivedField_0, transformationDictionaryDerivedField_1, transformationDictionaryDerivedField_2, transformationDictionaryDerivedField_3, transformationDictionaryDerivedField_4, transformationDictionaryDerivedField_5, transformationDictionaryDerivedField_6, transformationDictionaryDerivedField_7)).build();
    return transformationDictionary;
}