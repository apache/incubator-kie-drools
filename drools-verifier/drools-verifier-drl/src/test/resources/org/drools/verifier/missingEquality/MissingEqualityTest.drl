/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//created on: 31.10.2007
package org.drools.test

//list any import classes here.



//declare any global variables here



rule "Missing equality 1"
    when
        MissingEqualityPattern1( value == 10 )
    then
        //actions
end

rule "Covered equality 1a"
    when
        CoveredEqualityPattern1( value == 10 )
    then
        //actions
end

rule "Covered equality 1b"
    when
        CoveredEqualityPattern1( value != 10 )
    then
        //actions
end

rule "Missing equality 2"
    when
        MissingEqualityPattern2( value matches "a" )
    then
        //actions
end

rule "Covered equality 2a"
    when
        CoveredEqualityPattern2( value matches "a" )
    then
        //actions
end

rule "Covered equality 2b"
    when
        CoveredEqualityPattern2( value not matches "a" )
    then
        //actions
end

rule "Missing equality 3"
    when
        $col :MissingEqualityCollection()
        MissingEqualityPattern3( value memberOf $col )
    then
        //actions
end

rule "Covered equality 3a"
    when
        $col :MissingEqualityCollection()
        CoveredEqualityPattern3( value memberOf $col )
    then
        //actions
end

rule "Covered equality 3b"
    when
        $col :MissingEqualityCollection()
        CoveredEqualityPattern3( value not memberOf $col )
    then
        //actions
end

rule "Missing equality 4"
    when
        $value :MissingEqualityValue()
        MissingEqualityPattern4( value contains $value )
    then
        //actions
end

rule "Covered equality 4a"
    when
        $value :MissingEqualityValue()
        CoveredEqualityPattern4( value contains $value )
    then
        //actions
end

rule "Covered equality 4b"
    when
        $value :MissingEqualityValue()
        CoveredEqualityPattern4( value not contains $value )
    then
        //actions
end

rule "Missing equality 5"
    when
        MissingEqualityNumber( $n :number )
        MissingEqualityPattern5( value == $n )
    then
        //actions
end

rule "Covered equality 5a"
    when
        MissingEqualityNumber( $n :number )
        CoveredEqualityPattern5( value == $n )
    then
        //actions
end

rule "Covered equality 5b"
    when
        MissingEqualityNumber( $n :number )
        CoveredEqualityPattern5( value != $n )
    then
        //actions
end

rule "Missing equality 6"
    when
        MissingEqualityString( $t :text )
        MissingEqualityPattern6( value matches $t )
    then
        //actions
end

rule "Covered equality 6a"
    when
        MissingEqualityString( $t :text )
        CoveredEqualityPattern6( value matches $t )
    then
        //actions
end

rule "Covered equality 6b"
    when
        MissingEqualityString( $t :text )
        CoveredEqualityPattern6( value not matches $t )
    then
        //actions
end

rule "Missing equality 7"
    when
        Person( $name :name)
        Person( name != $name )
    then
        //actions
end
