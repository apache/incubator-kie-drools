/*
 * Copyright 2015 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package org.drools.compiler.test;

import org.drools.compiler.Cheese;
import org.drools.compiler.Cheesery;
import org.drools.compiler.Person;

global java.util.List results;

declare Total
    person : Person
    value : Number
end

rule "Total prices of cheeses liked by other people" salience 2
    when
        $person      : Person( $likes : likes )
        $total       : Number() from accumulate( $p : Person(likes != $likes, $l : likes) and $c : Cheese( type == $l ),
                                                sum($c.getPrice()) )
    then
        insertLogical(new Total($person, $total));
end  

rule "Minimum Total" salience 1
    when
        $min       : Number() from accumulate( $p : Person(name != "Doug") and $t : Total(person == $p),
                                                min($t.getValue()) )
    then
        results.add( $min );
end
