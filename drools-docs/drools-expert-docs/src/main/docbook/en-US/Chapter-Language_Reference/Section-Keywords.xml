<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Keywords</title>

  <para>Drools 5 introduces the concept of <emphasis>hard</emphasis> and
  <emphasis>soft</emphasis> keywords.</para>

  <para>Hard keywords are reserved, you cannot use any hard keyword when
  naming your domain objects, properties, methods, functions and other
  elements that are used in the rule text.</para>

  <para>Here is the list of hard keywords that must be avoided as identifiers
  when writing rules:</para>

  <itemizedlist>
    <listitem>
      <para><literal>true</literal></para>
    </listitem>

    <listitem>
      <para><literal>false</literal></para>
    </listitem>

    <listitem>
      <para><literal>null</literal></para>
    </listitem>
  </itemizedlist>

  <para>Soft keywords are just recognized in their context, enabling you to
  use these words in any other place if you wish, although, it is still
  recommended to avoid them, to avoid confusions, if possible. Here is a list
  of the soft keywords:</para>

  <itemizedlist>
    <listitem>
      <para><literal>lock-on-active</literal></para>
    </listitem>

    <listitem>
      <para><literal>date-effective</literal></para>
    </listitem>

    <listitem>
      <para><literal>date-expires</literal></para>
    </listitem>

    <listitem>
      <para><literal>no-loop</literal></para>
    </listitem>

    <listitem>
      <para><literal>auto-focus</literal></para>
    </listitem>

    <listitem>
      <para><literal>activation-group</literal></para>
    </listitem>

    <listitem>
      <para><literal>agenda-group</literal></para>
    </listitem>

    <listitem>
      <para><literal>ruleflow-group</literal></para>
    </listitem>

    <listitem>
      <para><literal>entry-point</literal></para>
    </listitem>

    <listitem>
      <para><literal>duration</literal></para>
    </listitem>

    <listitem>
      <para><literal>package</literal></para>
    </listitem>

    <listitem>
      <para><literal>import</literal></para>
    </listitem>

    <listitem>
      <para><literal>dialect</literal></para>
    </listitem>

    <listitem>
      <para><literal>salience</literal></para>
    </listitem>

    <listitem>
      <para><literal>enabled</literal></para>
    </listitem>

    <listitem>
      <para><literal>attributes</literal></para>
    </listitem>

    <listitem>
      <para><literal>rule</literal></para>
    </listitem>

    <listitem>
      <para><literal>extend</literal></para>
    </listitem>

    <listitem>
      <para>when</para>
    </listitem>

    <listitem>
      <para>then</para>
    </listitem>

    <listitem>
      <para><literal>template</literal></para>
    </listitem>

    <listitem>
      <para><literal>query</literal></para>
    </listitem>

    <listitem>
      <para><literal>declare</literal></para>
    </listitem>

    <listitem>
      <para><literal>function</literal></para>
    </listitem>

    <listitem>
      <para><literal>global</literal></para>
    </listitem>

    <listitem>
      <para><literal>eval</literal></para>
    </listitem>

    <listitem>
      <para><literal>not</literal></para>
    </listitem>

    <listitem>
      <para><literal>in</literal></para>
    </listitem>

    <listitem>
      <para><literal>or</literal></para>
    </listitem>

    <listitem>
      <para><literal>and</literal></para>
    </listitem>

    <listitem>
      <para><literal>exists</literal></para>
    </listitem>

    <listitem>
      <para><literal>forall</literal></para>
    </listitem>

    <listitem>
      <para>accumulate</para>
    </listitem>

    <listitem>
      <para>collect</para>
    </listitem>

    <listitem>
      <para>from</para>
    </listitem>

    <listitem>
      <para><literal>action</literal></para>
    </listitem>

    <listitem>
      <para><literal>reverse</literal></para>
    </listitem>

    <listitem>
      <para><literal>result</literal></para>
    </listitem>

    <listitem>
      <para><literal>end</literal></para>
    </listitem>

    <listitem>
      <para>over</para>
    </listitem>

    <listitem>
      <para><literal>init</literal></para>
    </listitem>
  </itemizedlist>

  <para>Of course, you can have these (hard and soft) words as part of a
  method name in camel case, like notSomething() or accumulateSomething() -
  there are no issues with that scenario.</para>

  <para>Although the 3 hard keywords above are unlikely to be used in your
  existing domain models, if you absolutely need to use them as identifiers
  instead of keywords, the DRL language provides the ability to escape hard
  keywords on rule text. To escape a word, simply enclose it in grave accents,
  like this:</para>

  <programlisting>Holiday( `true` == "yes" ) // please note that Drools will resolve that reference to the method Holiday.isTrue()</programlisting>
</section>
