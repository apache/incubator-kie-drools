/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/*
 *  This is an example of java integration
 *  via external function call
 */
{
    maximum : function( v1, v2 ) external {
        java : {
            class : "java.lang.Math",
            method signature: "max(long,long)"
        }
    },
    now : function() external {
        java : {
            class : "java.time.OffsetDateTime",
            method signature: "now()"
        }
    },
    the max : maximum( v1 : 10, v2: 20 ),   // invocation using named parameters
    the max2 : maximum( 10, 20 ),           // invocation using positional parameters
    current date: now(),                    // invocation of parameterless functions

    isBefore: function(adate) adate < date( now() ),
    isAfter: function(adate) if adate > date( now() ) then true else false,  // the if statement is redundant, but left here as an example
    testAfter: isAfter(date("2015-05-05")),
    testBefore: isBefore(date("2015-05-05"))

}

