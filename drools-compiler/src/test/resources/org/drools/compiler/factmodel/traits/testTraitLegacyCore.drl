package org.drools.compiler.trait.test;


// Individual is an empty traitable, based solely on a property map.
import org.drools.core.factmodel.traits.Traitable;

import org.drools.compiler.factmodel.traits.Imp;

import org.drools.compiler.factmodel.traits.IRole
import org.drools.compiler.factmodel.traits.Imp
import org.drools.compiler.factmodel.traits.IRole;


global java.util.List list;

declare trait IRole

end

declare Imp
    @Traitable
    @PropertyReactive
end


declare Core
    @Traitable
end


// declared interface
declare trait Person
    name : String
    age  : int
end

rule "Init"
when
then
    Imp core = new Imp();
    insert( core );
end

rule "Trait"
when
    // use only pure Objs
    $core: Imp()
    not Person( age == 30 )
then
    System.out.println( " Rule trait is firing " );

    Person p = don( $core, Person.class );

    modify( p ) {
        setName( "john" ),
        setAge( 30 );
    }

    System.out.println( " Done firing Rule trait " );
end

rule "Cloak"
no-loop
when
    $p    : Person( $core : core, name == "john" )
then
    System.out.println( "John the Person is here >>> " + $p );
    list.add("OK");

    IRole role = don( $core, IRole.class );

    modify( role ) {
        setRoleName("myRole");
    }

    System.out.println( "John the Role is here >>> " + role.getRoleName() );
end


rule "Role"
when
    $role : IRole( roleName == "myRole" )
then
    System.out.println( "John the Role is here >>> " + $role );
    list.add("OK2");
end
