@comment{

  Copyright 2011 Red Hat, Inc. and/or its affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
}


 @comment{
    Prepares a mining field, by cloning a free field and casting it into the context of a model
    /**
    * @param name        - mining field name
    * @param model       - name of the model using the field
    */
}



@declare{'miningFieldRule'}
rule "miningField_@{model}_@{name}"
@includeNamed{ 'rule_meta.drlt'; attributes=attributes }
when
    $src : @{name}( $m : missing, $v : valid, $x : value, context == null )
then
  @{name} x = new @{name}();
    x.setValue($x);
    x.setMissing($m);
    x.setValid($v);
    x.setName(@{format("string",name)});
    x.setContext(@{format("string",model)});
  insertLogical(x);
end


rule "InitAsMissing_@{model}_@{name}"
@includeNamed{ 'rule_meta.drlt'; attributes=attributes }
salience 1000
when
    ModelMarker( modelName == "@{model}", enabled == true )
    not @{name}( context == null )
then
    @{name} input = new @{name}();
        input.setName(@{format("string",name)});
        input.setMissing(true);
        input.setValid(false);
        input.setContext( "@{model}" );
    insertLogical( input );
end

rule "RemoveMissing_@{model}_@{name}"
@includeNamed{ 'rule_meta.drlt'; attributes=attributes }
salience 1000
when
    $val : @{name}( context == "@{model}", missing == false )
    $mis : @{name}( context == "@{model}", missing == true )
then
    delete( $mis );
end

@end{}


@includeNamed{'miningFieldRule'}