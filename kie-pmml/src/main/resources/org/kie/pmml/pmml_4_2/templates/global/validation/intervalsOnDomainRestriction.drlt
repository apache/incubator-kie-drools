@comment{

  Copyright 2011 Red Hat, Inc. and/or its affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
}


@comment{
    The rule checks whether the value of a datafield falls within the given intervals.
    Interval closure is determined Closure

     /**
      * @param name        - common name of the datafield class
      */
}

@declare{'intervalsOnDomainRestrictionRule'}
rule "Valid_ContinuousInterval_PMML4Data_@{name} - @{context}"
@includeNamed{ 'rule_meta.drlt'; attributes=attributes }
dialect "java"
no-loop
salience 100
when
   $in : PMML4Data( capitalizedName == "@{name}", $val : value, placeholder == false, context == "@{context}",
         @foreach{ intv : ivals }
            ( value
                @if{intv.closure.startsWith("closed")} >= @else{} > @end{}
                    @{intv.leftMargin}
              && value
                @if{intv.closure.endsWith("Closed")} <= @else{} < @end{}
                    @{intv.rightMargin})
         @end{' || '}
           ) from pmmlData
then
   modify( $in ) {
      setValid( true );
   }
end
@comment{
rule "Valid_ContinuousIntervals_@{name}"
@includeNamed{ 'rule_meta.drlt'; attributes=attributes }
dialect "mvel"
no-loop
salience 100
when
    $in : @{name}( $val : value,
          @foreach{ intv : ivals }
            ( value
                @if{intv.closure.startsWith("closed")} >= @else{} > @end{}
                    @{intv.leftMargin}
              && value
                @if{intv.closure.endsWith("Closed")} <= @else{} < @end{}
                    @{intv.rightMargin})
          @end{' || '}
            )
then
    modify ( $in ) {
        setValid( true );
    }
end
}
@end{}



@includeNamed{'intervalsOnDomainRestrictionRule'}
