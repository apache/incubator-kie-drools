package test;
import org.drools.factmodel.traits.*;

declare trait A id : int end
declare trait B extends A end
declare trait C extends A end
declare trait D extends B end
declare trait E extends C end
declare trait F extends E, B end
declare trait G extends E, F end

declare Kore
@Traitable
end

global TraitableBean core;

rule donA
when
    $s : String( this == "ent" )
then
    Entity k = new Entity();

    drools.getKnowledgeRuntime().setGlobal( "core", k );

    insert( k );
    retract( $s );
    don( k, A.class );
end

rule donK
when
    $s : String( this == "kor" )
then
    Kore k = new Kore();

    drools.getKnowledgeRuntime().setGlobal( "core", k );

    insert( k );
    retract( $s );
    don( k, A.class );
end


rule donB
when
    $s : String( this == "b" )
    $x : TraitableBean( )
then
    retract( $s ); 
    don( $x, B.class );
end

rule donC
when
    $s : String( this == "c" )
    $x : TraitableBean( )
then
    retract( $s ); 
    don( $x, C.class );
end
rule donE
when
    $s : String( this == "e" )
    $x : TraitableBean( )
then
    retract( $s ); 
    don( $x, E.class );
end
 
rule shedC
when
    $s : String( this == "-c" )
    $x : TraitableBean( )
then
    retract( $s ); 
    shed( $x, C.class );
end

rule shedF
when
    $s : String( this == "-f" )
    $x : TraitableBean( )
then
    retract( $s ); 
    shed( $x, F.class );
end

rule donDG
when
    $s : String( this == "dg" )
    $x : TraitableBean( )
then
    retract( $s ); 
    don( $x, D.class );
    don( $x, G.class );
end
