@comment{

  Copyright 2011 Red Hat, Inc. and/or its affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
}




@comment{

}

@declare{'treeMissHandleLast'}

rule "Handle last-prediction missing values on my way back @{context}"
@includeNamed{ 'rule_meta.drlt'; attributes=attributes }
salience 5
when
    $node : @{context}TreeNode( context == "@{context}", $id : id,
                      $out : outcome, $children : children, $count : recordCount, $confs : confidence )
    $tok  : @{context}TreeToken( context == "@{context}", current == $id, $trail : trail, $res : results, visitMode == "LAST_PREDICTION" )

    not @{name}( context == "@{context}" )
    accumulate( $sid : String( this memberOf $children ) from $res.keySet(), $keys : collectList( $sid ), $num : count( $sid );
                $num > 0 && $num == $children.size() )
    accumulate( $d : Double() from $confs.values(), $maxConf : max( $d ) )
then
    for ( Object o : $keys ) { $res.remove( o ); }
    modify ( $tok ) {
        setOutcome( $out ),
        setTotalCount( $count ),
        setConfidence( (Double) $maxConf ),
        setCurrent( "null" );
    }
end

rule "Handle last-prediction missing values on my way back without confidence @{context}"
@includeNamed{ 'rule_meta.drlt'; attributes=attributes }
salience 5
when
    $node : @{context}TreeNode( context == "@{context}", $id : id,
                      $out : outcome, $children : children, $count : recordCount, confidence.size == 0 )
    $tok  : @{context}TreeToken( context == "@{context}", current == $id, $trail : trail, $res : results, visitMode == "LAST_PREDICTION" )

    not @{name}( context == "@{context}" )
    accumulate( $sid : String( this memberOf $children ) from $res.keySet(), $keys : collectList( $sid ), $num : count( $sid );
                $num > 0 && $num == $children.size() )
then
    for ( Object o : $keys ) { $res.remove( o ); }
    modify ( $tok ) {
        setOutcome( $out ),
        setTotalCount( $count ),
        setCurrent( "null" );
    }
end

@end{}


@includeNamed{'treeMissHandleLast'}