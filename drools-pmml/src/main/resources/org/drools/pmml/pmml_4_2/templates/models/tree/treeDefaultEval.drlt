@comment{

  Copyright 2011 Red Hat, Inc. and/or its affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
}




@comment{
    All node-specific rules, which require context information to be applied
}

@declare{'treeDefaultEval'}



rule "Eval Tree Node @{context} - @{id} - Default Child"
@includeNamed{ 'rule_meta.drlt'; attributes=attributes }
salience 3
when
    $node : @{ pmmlPackageName }.TreeNode( context == "@{context}", $id : id == "@{id}", $def : defaultChld != "null" && != null )
    $tok  : @{context}TreeToken( context == "@{context}", current == "@{id}", visitMode == "DEFAULT_CHILD", downward == true,
                                 results.keySet not contains "@{id}", $conf : confidence,
                                 @{missings} )
then
//    System.out.println( "UNKNOWN found at @{id} !!!!, JUMPING TO Default Child " + $def );
    modify ( $tok ) {
        setConfidence( $conf * @{penalty} ),
        setCurrent( $def );
    }
end


rule "Eval Tree Node @{context} - @{id} - Default Child Undo Jump"
@includeNamed{ 'rule_meta.drlt'; attributes=attributes }
salience 5
no-loop
when
    $node : @{ pmmlPackageName }.TreeNode( context == "@{context}", $id : id == "@{id}", $def : defaultChld != "null" && != null )
    $tok  : @{context}TreeToken( context == "@{context}", current == "@{id}", visitMode == "DEFAULT_CHILD", downward == false, $conf : confidence,
                                 @{missings} )
then
//    System.out.println( "UNKNOWN found at @{id} !!!!, UNDOING JUMP penalty " + $def );
    modify ( $tok ) {
        setConfidence( $conf / @{penalty} );
    }
end


@end{}


@includeNamed{'treeDefaultEval'}