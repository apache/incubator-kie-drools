/*
 * Copyright 2015 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package org.drools.compiler.test;

import org.drools.compiler.Cheese;
import org.drools.compiler.Person;
import org.drools.compiler.Cheesery;

global java.util.List results;

rule "AccumulateTest" salience 100
    when
        $totalAmount : Integer() from accumulate( $cheese : Cheese( ),
                                                  init( int total = 0; ),
                                                  action( total += $cheese.getPrice(); ),
                                                  result( new Integer( total ) ) );
    then
        //System.out.println("Total amount = US$ "+$totalAmount );
        results.add($totalAmount);
end  

rule "Accumulate with Bindings" salience 90
    when
        $person      : Person( name == "Bob", $likes : likes )
        $totalAmount : Integer() from accumulate( $cheese : Cheese( type == $likes ),
                                                  init( int total = 0; ),
                                                 action( total += $cheese.getPrice(); ),
                                                  result( new Integer( total ) ) );
    then
        //System.out.println($person.getName() +" will spend US$ "+ $totalAmount + " buying cheese");
        results.add($totalAmount);
end  

rule "Constraints everywhere" salience 80
    when
        $person      : Person( $likes : likes )
        $cheesery    : Cheesery( totalAmount > 100 )
                               from accumulate( $cheese : Cheese( type == $likes ),
                                                init( Cheesery cheesery = new Cheesery(); ),
                                                action( cheesery.addCheese( $cheese ); ),
                                                result( cheesery ) );
    then
        //System.out.println($person.getName() +" is spending a lot buying cheese ( US$ "+$cheesery.getTotalAmount()+" )!");
        results.add(new Integer($cheesery.getTotalAmount()));
end  

rule "Source pattern binds" salience 70
    when
        $person      : Person( name == "Bob", $likes : likes )
        $totalAmount : Integer() from accumulate( $cheese : Cheese( type == $likes, $price: price ),
                                                  init( int total = 0; ),
                                                  action( total += $price; ),
                                                  result( new Integer( total ) ) );
    then
        //System.out.println($person.getName() +" will spend US$ "+ $totalAmount + " buying cheese");
        results.add($totalAmount);
end

rule "Accumulate with previous Bindings" salience 60
    when
        $person      : Person( name == "Bob", $likes : likes, $age : age )
        $totalAmount : Integer() from accumulate( $cheese : Cheese( type == $likes, $price : price ),
                                                  init( int total = $age * 10; ),
                                                  action( total += $price; ),
                                                  result( new Integer( total ) ) );
    then
        results.add($totalAmount);
end  

