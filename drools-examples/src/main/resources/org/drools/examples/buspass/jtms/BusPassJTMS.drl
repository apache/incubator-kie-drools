/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.drools.examples.buspass.jtms;

import org.drools.examples.buspass.Person;
import org.drools.examples.buspass.BadBehaviour
import org.drools.examples.buspass.IsChild;
import org.drools.examples.buspass.IsAdult;
import org.drools.examples.buspass.ChildBusPass;
import org.drools.examples.buspass.AdultBusPass;

rule IssueChildBusPass when
    p : Person()
    IsChild( person == p )
then
    System.out.println( "issue : " + p );
    insertLogical( new ChildBusPass( p ) );
end

rule BadBehaviour when
    p : Person()
    IsChild( person == p )
    BadBehaviour( person == p )
then
    System.out.println( "bad : " + p );
    insertLogical( new ChildBusPass( p ), "neg" );
end


rule PrintChildBusPass when
    c : ChildBusPass( )
then
    System.out.println( "Child Bus Pass : " + c);
end

rule PrintNoChildBusPass when
    c : ChildBusPass( _.neg )
then
    System.out.println( "No Child Bus Pass : " + c);
end